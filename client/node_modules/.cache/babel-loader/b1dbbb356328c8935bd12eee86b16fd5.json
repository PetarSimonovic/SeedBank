{"ast":null,"code":"import _regeneratorRuntime from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Plant}from'../gameObjects';import{setDate,calculateDays}from'../functions';import api from'../api';// Reads a saved Garden and creates an array of plants ready to render\nexport default function loadPlants(_x){return _loadPlants.apply(this,arguments);}function _loadPlants(){_loadPlants=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId){var loadedPlants,plantsData,parsedPlants,today,plant,parsedPlant;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"LOADING GARDEN for \"+userId);_context.next=3;return api.getPlants(userId);case 3:loadedPlants=_context.sent;plantsData=loadedPlants.data.data;parsedPlants=[];today=setDate(Date()).stamp;for(plant=0;plant<plantsData.length;plant++){console.log(\"LOADED PLANT IS\");parsedPlant=plantsData[plant];parsedPlant.date=JSON.parse(parsedPlant.date);parsedPlant.growth=calculateGrowth(parsedPlant.date,today);console.log(parsedPlant);parsedPlants.push(Object.assign(new Plant(),parsedPlant));}return _context.abrupt(\"return\",parsedPlants);case 9:case\"end\":return _context.stop();}}},_callee);}));return _loadPlants.apply(this,arguments);}function calculateGrowth(plantDate,today){console.log(plantDate.stamp);console.log(today);var days=calculateDays(plantDate.stamp,today);return days;}//module.exports = parseGarden;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/LoadPlants.js"],"names":["Plant","setDate","calculateDays","api","loadPlants","userId","console","log","getPlants","loadedPlants","plantsData","data","parsedPlants","today","Date","stamp","plant","length","parsedPlant","date","JSON","parse","growth","calculateGrowth","push","Object","assign","plantDate","days"],"mappings":"udAAA,OAASA,KAAT,KAAsB,gBAAtB,CACA,OAASC,OAAT,CAAkBC,aAAlB,KAAuC,cAAvC,CACA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,CAGA;AAEA,uBAA8BC,CAAAA,UAA9B,+C,2FAAe,iBAA0BC,MAA1B,mLACbC,OAAO,CAACC,GAAR,CAAY,sBAAwBF,MAApC,EADa,sBAEcF,CAAAA,GAAG,CAACK,SAAJ,CAAcH,MAAd,CAFd,QAEPI,YAFO,eAGPC,UAHO,CAGMD,YAAY,CAACE,IAAb,CAAkBA,IAHxB,CAKTC,YALS,CAKM,EALN,CAOPC,KAPO,CAOCZ,OAAO,CAACa,IAAI,EAAL,CAAP,CAAgBC,KAPjB,CAQb,IAASC,KAAT,CAAiB,CAAjB,CAAoBA,KAAK,CAAGN,UAAU,CAACO,MAAvC,CAA+CD,KAAK,EAApD,CAA0D,CACxDV,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACMW,WAFkD,CAEpCR,UAAU,CAACM,KAAD,CAF0B,CAGxDE,WAAW,CAACC,IAAZ,CAAmBC,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACC,IAAvB,CAAnB,CACAD,WAAW,CAACI,MAAZ,CAAqBC,eAAe,CAACL,WAAW,CAACC,IAAb,CAAmBN,KAAnB,CAApC,CACAP,OAAO,CAACC,GAAR,CAAYW,WAAZ,EACAN,YAAY,CAACY,IAAb,CAAkBC,MAAM,CAACC,MAAP,CAAc,GAAI1B,CAAAA,KAAJ,EAAd,CAA2BkB,WAA3B,CAAlB,EACD,CAfY,gCAgBNN,YAhBM,wD,6CAmBf,QAASW,CAAAA,eAAT,CAAyBI,SAAzB,CAAoCd,KAApC,CAA2C,CACzCP,OAAO,CAACC,GAAR,CAAYoB,SAAS,CAACZ,KAAtB,EACAT,OAAO,CAACC,GAAR,CAAYM,KAAZ,EACA,GAAMe,CAAAA,IAAI,CAAG1B,aAAa,CAACyB,SAAS,CAACZ,KAAX,CAAkBF,KAAlB,CAA1B,CACA,MAAOe,CAAAA,IAAP,CACD,CAKD","sourcesContent":["import { Plant } from '../gameObjects'\nimport { setDate, calculateDays } from '../functions'\nimport api from '../api';\n\n\n// Reads a saved Garden and creates an array of plants ready to render\n\nexport default async function loadPlants(userId) {\n  console.log(\"LOADING GARDEN for \" + userId)\n  const loadedPlants = await api.getPlants(userId)\n  const plantsData = loadedPlants.data.data\n\n  let parsedPlants = []\n\n  const today = setDate(Date()).stamp\n  for (let plant = 0; plant < plantsData.length; plant ++ ) {\n    console.log(\"LOADED PLANT IS\")\n    const parsedPlant = plantsData[plant]\n    parsedPlant.date = JSON.parse(parsedPlant.date)\n    parsedPlant.growth = calculateGrowth(parsedPlant.date, today)\n    console.log(parsedPlant)\n    parsedPlants.push(Object.assign(new Plant(), parsedPlant))\n  }\n  return parsedPlants\n}\n\nfunction calculateGrowth(plantDate, today) {\n  console.log(plantDate.stamp)\n  console.log(today)\n  const days = calculateDays(plantDate.stamp, today)\n  return days\n}\n\n\n\n\n//module.exports = parseGarden;\n"]},"metadata":{},"sourceType":"module"}