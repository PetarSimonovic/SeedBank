{"ast":null,"code":"import { sample, randomiser, createId, calculateDays } from '../functions';\nimport { Balloon } from './';\nimport api from '../api';\nexport default async function getBalloons(garden, seeds, login, today, id) {\n  const dateDifference = calculateDays(login, today); // if (calculateDays(login, today) === 0 ) {\n  //   return balloons\n\n  let balloons = [];\n  await api.getBalloons(id).then(res => {\n    const newSeeds = sample(seeds);\n    const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`;\n    let balloons = parseBalloons(res.data.data.balloons);\n    balloons.push(dailyBalloon(seeds));\n    console.log(balloons);\n  });\n}\n\nfunction parseBalloons(balloonData) {\n  let parsedBalloons = [];\n\n  for (let index = 0; index < balloonData.length; index++) {\n    const balloon = balloonData[index];\n    console.log(balloon);\n    parsedBalloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message));\n  }\n\n  return parsedBalloons;\n}\n\nfunction dailyBalloon(seeds) {\n  const newSeeds = sample(seeds);\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`;\n  return new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage);\n}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/gameObjects/getBalloons.js"],"names":["sample","randomiser","createId","calculateDays","Balloon","api","getBalloons","garden","seeds","login","today","id","dateDifference","balloons","then","res","newSeeds","dailyMessage","quantity","type","parseBalloons","data","push","dailyBalloon","console","log","balloonData","parsedBalloons","index","length","balloon","message"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,aAAtC,QAA0D,cAA1D;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAIA,eAAe,eAAeC,WAAf,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,KAAjD,EAAwDC,EAAxD,EAA4D;AACzE,QAAMC,cAAc,GAAGT,aAAa,CAACM,KAAD,EAAQC,KAAR,CAApC,CADyE,CAEzE;AACA;;AACA,MAAIG,QAAQ,GAAG,EAAf;AACA,QAAMR,GAAG,CAACC,WAAJ,CAAgBK,EAAhB,EAAoBG,IAApB,CAAyBC,GAAG,IAAI;AACpC,UAAMC,QAAQ,GAAGhB,MAAM,CAACQ,KAAD,CAAvB;AACA,UAAMS,YAAY,GAAI,GAAED,QAAQ,CAACE,QAAS,MAAKF,QAAQ,CAACG,IAAK,GAA7D;AACA,QAAIN,QAAQ,GAAGO,aAAa,CAACL,GAAG,CAACM,IAAJ,CAASA,IAAT,CAAcR,QAAf,CAA5B;AACAA,IAAAA,QAAQ,CAACS,IAAT,CAAcC,YAAY,CAACf,KAAD,CAA1B;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACD,GANK,CAAN;AAOD;;AAED,SAASO,aAAT,CAAuBM,WAAvB,EAAoC;AAClC,MAAIC,cAAc,GAAG,EAArB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,WAAW,CAACG,MAAxC,EAAgDD,KAAK,EAArD,EAAyD;AACvD,UAAME,OAAO,GAAGJ,WAAW,CAACE,KAAD,CAA3B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACAH,IAAAA,cAAc,CAACL,IAAf,CAAoB,IAAIlB,OAAJ,CAAY0B,OAAO,CAACX,IAApB,EAA0BW,OAAO,CAACZ,QAAlC,EAA4CY,OAAO,CAACC,OAApD,CAApB;AACD;;AACD,SAAOJ,cAAP;AACD;;AAED,SAASJ,YAAT,CAAsBf,KAAtB,EAA6B;AAC3B,QAAMQ,QAAQ,GAAGhB,MAAM,CAACQ,KAAD,CAAvB;AACA,QAAMS,YAAY,GAAI,GAAED,QAAQ,CAACE,QAAS,MAAKF,QAAQ,CAACG,IAAK,GAA7D;AACA,SAAO,IAAIf,OAAJ,CAAYY,QAAQ,CAACG,IAArB,EAA2BH,QAAQ,CAACE,QAApC,EAA8CD,YAA9C,CAAP;AACD","sourcesContent":["import {sample, randomiser, createId, calculateDays} from '../functions'\nimport { Balloon } from './'\nimport api from '../api';\n\n\n\nexport default async function getBalloons(garden, seeds, login, today, id) {\n  const dateDifference = calculateDays(login, today)\n  // if (calculateDays(login, today) === 0 ) {\n  //   return balloons\n  let balloons = []\n  await api.getBalloons(id).then(res => {\n    const newSeeds = sample(seeds)\n    const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`\n    let balloons = parseBalloons(res.data.data.balloons)\n    balloons.push(dailyBalloon(seeds))\n    console.log(balloons)\n  })\n}\n\nfunction parseBalloons(balloonData) {\n  let parsedBalloons = []\n  for (let index = 0; index < balloonData.length; index++) {\n    const balloon = balloonData[index]\n    console.log(balloon)\n    parsedBalloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message))\n  }\n  return parsedBalloons\n}\n\nfunction dailyBalloon(seeds) {\n  const newSeeds = sample(seeds)\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`\n  return new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage)\n}\n"]},"metadata":{},"sourceType":"module"}