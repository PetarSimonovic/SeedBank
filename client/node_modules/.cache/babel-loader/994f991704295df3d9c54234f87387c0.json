{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/CloudKeyBoard.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Text, Billboard } from '@react-three/drei';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nconst alphabet = characters.split('');\nconst cloudKeyboardColours = {\n  text: \"#293241\",\n  outline: \"#b1b5c8\"\n};\nconst cloudFunctionButtonColours = {\n  text: \"#b1b5c8\",\n  outline: \"#293241\"\n};\nconst fontSize = 0.1;\nconst fontZ = 3;\n\nfunction CloudKeyBoard(props) {\n  _s();\n\n  const [sentenceArray, setSentencearray] = useState([]);\n  const [sentence, setSentence] = useState('');\n\n  const buildSentence = character => {\n    setSentencearray(prev => {\n      return [...prev, character];\n    });\n  };\n\n  const deleteCharacter = () => {\n    setSentencearray(prev => {\n      return [...prev, character];\n    });\n  };\n\n  useEffect(() => {\n    //\n    setSentence(sentenceArray.join(''));\n    console.log(sentence);\n  });\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: createCloudKeyboard(props, buildSentence, deleteCharacter)\n  }, void 0, false);\n}\n\n_s(CloudKeyBoard, \"MtraisT9etQ3s6mcPxzdm9aAknA=\");\n\n_c = CloudKeyBoard;\n\nfunction createCloudKeyboard(props, buildSentence, deleteCharacter) {\n  let cloudKeyboard = [];\n  let fontX = 0.5;\n  let fontY = 3;\n  let column = 1;\n\n  for (let char = 0; char < alphabet.length; char++) {\n    let character = alphabet[char];\n    fontX += 0.3;\n    cloudKeyboard.push( /*#__PURE__*/_jsxDEV(CloudKey, {\n      buildSentence: buildSentence,\n      character: character,\n      fontX: fontX,\n      fontY: fontY\n    }, createId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this));\n\n    if (column % 8 === 0) {\n      fontY -= 0.3;\n      fontX = 0.5;\n    }\n\n    column++;\n  }\n\n  cloudKeyboard.push( /*#__PURE__*/_jsxDEV(DeleteKey, {\n    deleteCharacter: deleteCharacter\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this));\n  return cloudKeyboard;\n}\n\nfunction CloudKey(props) {\n  _s2();\n\n  const mesh = useRef();\n\n  const handleClick = (event, character) => {\n    event.stopPropagation();\n    console.log(character);\n    props.buildSentence(character);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event, props.character),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudKeyboardColours.outline,\n        color: cloudKeyboardColours.text,\n        children: props.character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CloudKey, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c2 = CloudKey;\n\nfunction DeleteKey(props) {\n  _s3();\n\n  const mesh = useRef();\n\n  const handleClick = event => {\n    event.stopPropagation();\n    props.buildSentence(character);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event, props.character),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudFunctionButtonColours.outline,\n        color: cloudFunctionButtonColours.text,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(DeleteKey, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c3 = DeleteKey;\nexport default CloudKeyBoard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CloudKeyBoard\");\n$RefreshReg$(_c2, \"CloudKey\");\n$RefreshReg$(_c3, \"DeleteKey\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/CloudKeyBoard.jsx"],"names":["Text","Billboard","React","useRef","useState","useEffect","createId","characters","alphabet","split","cloudKeyboardColours","text","outline","cloudFunctionButtonColours","fontSize","fontZ","CloudKeyBoard","props","sentenceArray","setSentencearray","sentence","setSentence","buildSentence","character","prev","deleteCharacter","join","console","log","mesh","createCloudKeyboard","cloudKeyboard","fontX","fontY","column","char","length","push","CloudKey","handleClick","event","stopPropagation","DeleteKey"],"mappings":"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","sourcesContent":["\nimport { Text, Billboard } from '@react-three/drei'\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions'\n\n\n\nconst characters = \"abcdefghijklmnopqrstuvwxyz0123456789\"\nconst alphabet = characters.split('')\nconst cloudKeyboardColours = {text: \"#293241\", outline: \"#b1b5c8\"}\nconst cloudFunctionButtonColours = {text: \"#b1b5c8\", outline: \"#293241\"}\nconst fontSize = 0.1\nconst fontZ = 3\n\n\n\n\nfunction CloudKeyBoard(props) {\n\n  const [sentenceArray, setSentencearray] = useState([])\n  const [sentence, setSentence] = useState('')\n\n  const buildSentence = (character) => {\n    setSentencearray( (prev) => {\n      return [...prev, character]\n    })\n  }\n\n  const deleteCharacter = () => {\n    setSentencearray( (prev) => {\n      return [...prev, character]\n    })\n  }\n\n  useEffect(() => {\n    //\n    setSentence(sentenceArray.join(''))\n    console.log(sentence)\n  });\n\n\n  const mesh = useRef()\n\n\n\n  return (\n  <>\n  {createCloudKeyboard(props, buildSentence, deleteCharacter)}\n  </>\n\n)\n}\n\nfunction createCloudKeyboard(props, buildSentence, deleteCharacter) {\n  let cloudKeyboard = []\n  let fontX = 0.5\n  let fontY = 3\n  let column = 1\n  for (let char = 0; char < alphabet.length; char++) {\n    let character = alphabet[char]\n    fontX += 0.3\n    cloudKeyboard.push( < CloudKey key={createId()} buildSentence={buildSentence} character={character} fontX={fontX} fontY={fontY} /> )\n    if (column % 8 === 0) {\n      fontY -= 0.3\n      fontX = 0.5\n    }\n    column++\n\n  }\n  cloudKeyboard.push( <DeleteKey key={createId()} deleteCharacter={deleteCharacter} /> )\n  return cloudKeyboard\n\n}\n\nfunction CloudKey(props) {\n\n    const mesh = useRef()\n\n    const handleClick = (event, character) => {\n      event.stopPropagation()\n      console.log(character)\n      props.buildSentence(character)\n    }\n\n    return (\n        <mesh\n          {...props}\n          ref={mesh}\n          onClick={(event) => handleClick(event, props.character)}\n          >\n          <Billboard\n          follow={true}\n          lockX={false}\n          lockY={false}\n          lockZ={false} >\n          < Text\n          fontSize={fontSize}\n          position={[props.fontX, props.fontY, fontZ]}\n          outlineWidth={fontSize}\n          outlineColor={cloudKeyboardColours.outline}\n          color={cloudKeyboardColours.text}\n           >\n           {props.character}\n          </ Text>\n          </ Billboard>\n        </mesh>\n        )\n      }\n\nfunction DeleteKey(props) {\n\nconst mesh = useRef()\n\nconst handleClick = (event) => {\nevent.stopPropagation()\nprops.buildSentence(character)\n}\n\nreturn (\n  <mesh\n    {...props}\n    ref={mesh}\n    onClick={(event) => handleClick(event, props.character)}\n    >\n    <Billboard\n    follow={true}\n    lockX={false}\n    lockY={false}\n    lockZ={false} >\n    < Text\n    fontSize={fontSize}\n    position={[props.fontX, props.fontY, fontZ]}\n    outlineWidth={fontSize}\n    outlineColor={cloudFunctionButtonColours.outline}\n    color={cloudFunctionButtonColours.text}\n     >\n     X\n    </ Text>\n    </ Billboard>\n  </mesh>\n  )\n}\n\nexport default CloudKeyBoard\n"]},"metadata":{},"sourceType":"module"}