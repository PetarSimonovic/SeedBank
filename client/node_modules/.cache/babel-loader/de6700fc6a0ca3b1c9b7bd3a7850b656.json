{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/ParseGarden.js\";\nimport { Plant } from '../components';\nimport { setDate, calculateDays } from '../functions'; // Reads a saved Garden and creates an array of plants ready to render\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function parseGarden(garden) {\n  let parsedGarden = [];\n  const today = setDate(Date()).stamp;\n\n  for (let plant = 0; plant < garden.length; plant++) {\n    const parsedPlant = garden[plant];\n    const plantData = parsedPlant.plantData;\n    plantData.growth = calculateGrowth(plantData, today);\n    parsedGarden.push( /*#__PURE__*/_jsxDEV(Plant, {\n      position: [plantData.position],\n      plantData: plantData\n    }, parsedPlant.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }, this));\n  }\n\n  return parsedGarden;\n}\n\nfunction calculateGrowth(plant, today) {\n  const days = calculateDays(plant.date.stamp, today);\n  console.log(`${days} days have passed`);\n  return days;\n} //module.exports = parseGarden;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/ParseGarden.js"],"names":["Plant","setDate","calculateDays","parseGarden","garden","parsedGarden","today","Date","stamp","plant","length","parsedPlant","plantData","growth","calculateGrowth","push","position","key","days","date","console","log"],"mappings":";AAAA,SAASA,KAAT,QAAsB,eAAtB;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,cAAvC,C,CAEA;;;AAEA,eAAe,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC1C,MAAIC,YAAY,GAAG,EAAnB;AACA,QAAMC,KAAK,GAAGL,OAAO,CAACM,IAAI,EAAL,CAAP,CAAgBC,KAA9B;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGL,MAAM,CAACM,MAAnC,EAA2CD,KAAK,EAAhD,EAAsD;AACpD,UAAME,WAAW,GAAGP,MAAM,CAACK,KAAD,CAA1B;AACA,UAAMG,SAAS,GAAGD,WAAW,CAACC,SAA9B;AACAA,IAAAA,SAAS,CAACC,MAAV,GAAmBC,eAAe,CAACF,SAAD,EAAYN,KAAZ,CAAlC;AACAD,IAAAA,YAAY,CAACU,IAAb,eAAkB,QAAC,KAAD;AAA6B,MAAA,QAAQ,EAAE,CAACH,SAAS,CAACI,QAAX,CAAvC;AAA6D,MAAA,SAAS,EAAEJ;AAAxE,OAAYD,WAAW,CAACM,GAAxB;AAAA;AAAA;AAAA;AAAA,YAAlB;AACD;;AACD,SAAOZ,YAAP;AACD;;AAED,SAASS,eAAT,CAAyBL,KAAzB,EAAgCH,KAAhC,EAAuC;AACrC,QAAMY,IAAI,GAAGhB,aAAa,CAACO,KAAK,CAACU,IAAN,CAAWX,KAAZ,EAAmBF,KAAnB,CAA1B;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAEH,IAAK,mBAApB;AACA,SAAOA,IAAP;AACD,C,CAKD","sourcesContent":["import { Plant } from '../components'\nimport { setDate, calculateDays } from '../functions'\n\n// Reads a saved Garden and creates an array of plants ready to render\n\nexport default function parseGarden(garden) {\n  let parsedGarden = []\n  const today = setDate(Date()).stamp\n  for (let plant = 0; plant < garden.length; plant ++ ) {\n    const parsedPlant = garden[plant]\n    const plantData = parsedPlant.plantData\n    plantData.growth = calculateGrowth(plantData, today)\n    parsedGarden.push(<Plant key={parsedPlant.key} position={[plantData.position]} plantData={plantData} />)\n  }\n  return parsedGarden\n}\n\nfunction calculateGrowth(plant, today) {\n  const days = calculateDays(plant.date.stamp, today)\n  console.log(`${days} days have passed`)\n  return days\n}\n\n\n\n\n//module.exports = parseGarden;\n"]},"metadata":{},"sourceType":"module"}