{"ast":null,"code":"import api from '../api';\nimport { sendBalloon } from './';\nexport default async function makeFriendRequest(id, userName, friendName) {\n  let validRequest = true;\n  let payload = {\n    userId: id,\n    friendName: friendName\n  };\n  await api.getFriendByName(friendRequest).then(res => {\n    console.log('Already friends?');\n    console.log(res);\n\n    if (res.data.data.friendName === friendName) {\n      console.log(\"YES ALREADY FRIENDS\");\n      return;\n    } else {\n      sendFriendBalloon(id, userName, friendName);\n    }\n  });\n}\n\nasync function sendFriendBalloon(id, userName, friendName) {\n  console.log(\"Making friend request to \" + friendName + \"from\" + \" userName\");\n  await api.getUser(friendName).then(res => {\n    const friendId = res.data.data._id;\n    const type = \"friendRequest\";\n    const quantity = 1;\n    const message = `${userName} wants to connect!`;\n    sendBalloon(friendId, type, quantity, message, userName);\n  });\n}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/MakeFriendRequest.js"],"names":["api","sendBalloon","makeFriendRequest","id","userName","friendName","validRequest","payload","userId","getFriendByName","friendRequest","then","res","console","log","data","sendFriendBalloon","getUser","friendId","_id","type","quantity","message"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,WAAT,QAA4B,IAA5B;AAGA,eAAe,eAAeC,iBAAf,CAAiCC,EAAjC,EAAqCC,QAArC,EAA+CC,UAA/C,EAA2D;AACxE,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAEL,EADI;AAEZE,IAAAA,UAAU,EAAEA;AAFA,GAAd;AAKA,QAAML,GAAG,CAACS,eAAJ,CAAoBC,aAApB,EAAmCC,IAAnC,CAAwCC,GAAG,IAAI;AACnDC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAIA,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcV,UAAd,KAA6BA,UAAjC,EAA6C;AAC3CQ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA;AACD,KAHD,MAGO;AACLE,MAAAA,iBAAiB,CAACb,EAAD,EAAKC,QAAL,EAAeC,UAAf,CAAjB;AACD;AACF,GATK,CAAN;AAUD;;AAED,eAAeW,iBAAf,CAAiCb,EAAjC,EAAqCC,QAArC,EAA+CC,UAA/C,EAA2D;AACzDQ,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BT,UAA9B,GAA2C,MAA3C,GAAoD,WAAhE;AACA,QAAML,GAAG,CAACiB,OAAJ,CAAYZ,UAAZ,EAAwBM,IAAxB,CAA6BC,GAAG,IAAI;AACxC,UAAMM,QAAQ,GAAGN,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcI,GAA/B;AACA,UAAMC,IAAI,GAAG,eAAb;AACA,UAAMC,QAAQ,GAAG,CAAjB;AACA,UAAMC,OAAO,GAAI,GAAElB,QAAS,oBAA5B;AACAH,IAAAA,WAAW,CAACiB,QAAD,EAAWE,IAAX,EAAiBC,QAAjB,EAA2BC,OAA3B,EAAoClB,QAApC,CAAX;AACD,GANK,CAAN;AAOD","sourcesContent":["import api from '../api';\nimport { sendBalloon } from './'\n\n\nexport default async function makeFriendRequest(id, userName, friendName) {\n  let validRequest = true\n  let payload = {\n    userId: id,\n    friendName: friendName\n  }\n\n  await api.getFriendByName(friendRequest).then(res => {\n    console.log('Already friends?')\n    console.log(res)\n    if (res.data.data.friendName === friendName) {\n      console.log(\"YES ALREADY FRIENDS\")\n      return\n    } else {\n      sendFriendBalloon(id, userName, friendName)\n    }\n  })\n}\n\nasync function sendFriendBalloon(id, userName, friendName) {\n  console.log(\"Making friend request to \" + friendName + \"from\" + \" userName\")\n  await api.getUser(friendName).then(res => {\n    const friendId = res.data.data._id\n    const type = \"friendRequest\"\n    const quantity = 1\n    const message = `${userName} wants to connect!`\n    sendBalloon(friendId, type, quantity, message, userName)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}