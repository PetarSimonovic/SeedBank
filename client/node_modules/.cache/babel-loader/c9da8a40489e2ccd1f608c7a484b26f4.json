{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Clouds/SeedCloud.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Text, Billboard } from '@react-three/drei';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../../functions';\nimport { Cloud } from '../'; // Creates a button that 'clicks'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst seedTextColours = {\n  type: \"#293241\",\n  outline: \"#b1b5c8\"\n};\nconst selectedSeedTextColours = {\n  type: \"#b1b5c8\",\n  outline: \"#293241\"\n};\nconst fontSize = 0.12;\nconst fontZ = 1;\nconst fontY = 2;\n\nfunction SeedCloud(props) {\n  _s();\n\n  const mesh = useRef();\n  const [on, setOn] = useState(false);\n  const [option, setOption] = useState(0); // eventhandler for Cloud\n\n  useEffect(() => {\n    console.log(props.seeds[option].type + \" \" + option);\n  }, [option]);\n\n  const handleClick = () => {\n    setOn(true);\n    setOption(prev => prev + 1);\n  };\n\n  const closeDown = () => {\n    setOn(false);\n    setOption(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      position: [0, 0.5, 0],\n      ref: mesh,\n      scale: 1,\n      children: /*#__PURE__*/_jsxDEV(Cloud, {\n        handleClick: handleClick,\n        text: on ? props.seeds[option].type : 'seeds'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(SeedCloud, \"ohPPDK0wprzKLCqufOSEVtE/ZYE=\");\n\n_c = SeedCloud;\n\nfunction seedSelectors(props, index, updateText) {\n  console.log(\"In seed selectors\");\n  console.log(index);\n  let seed = props.seeds[index];\n  console.log(seed);\n\n  if (seed.quantity === 0) {\n    return;\n  }\n\n  let colours = {};\n  seed.type === props.chosenSeed ? colours = selectedSeedTextColours : colours = seedTextColours;\n  return /*#__PURE__*/_jsxDEV(SeedText, {\n    updateText: updateText,\n    position: [0, 2, 0],\n    selectSeed: props.selectSeed,\n    toggleSeeds: props.toggleSeeds,\n    seed: seed,\n    colours: colours,\n    index: index\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n}\n\nfunction SeedText(props) {\n  _s2();\n\n  const seed = props.seed;\n  const mesh = useRef();\n  const [selected, setSelected] = useState(false);\n\n  const handleClick = event => {\n    event.stopPropagation();\n    console.log(\"Clicked on SeedCloud!\");\n    console.log(seed.type);\n    console.log(props.index);\n    props.selectSeed(seed.type, props.index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        onClick: event => handleClick(event),\n        outlineWidth: fontSize,\n        outlineColor: props.colours.outline,\n        color: props.colours.type,\n        rotation: [0, 0, 0],\n        children: seed.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(SeedText, \"SnFYePOToJlSUM/A10+S8mKt7G0=\");\n\n_c2 = SeedText;\n\nfunction NoSeedText(props) {\n  _s3();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 0.25,\n        position: [1, 3, 1],\n        outlineWidth: 0.25,\n        outlineColor: props.colours.outline,\n        color: props.colours.type,\n        rotation: [0, 0, 0],\n        children: \"No seeds available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 11\n  }, this);\n}\n\n_s3(NoSeedText, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c3 = NoSeedText;\n\nfunction getSeedTypes(seeds) {\n  console.log(\"getting seeds\");\n  let seedTypes = [];\n\n  for (let index = 0; index < seeds.length; index++) {\n    const seed = seeds[index];\n    seedTypes.push(seed.type);\n  }\n\n  console.log(seedTypes);\n  return seedTypes;\n}\n\nexport default SeedCloud;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SeedCloud\");\n$RefreshReg$(_c2, \"SeedText\");\n$RefreshReg$(_c3, \"NoSeedText\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Clouds/SeedCloud.jsx"],"names":["Text","Billboard","React","useRef","useState","useEffect","createId","Cloud","seedTextColours","type","outline","selectedSeedTextColours","fontSize","fontZ","fontY","SeedCloud","props","mesh","on","setOn","option","setOption","console","log","seeds","handleClick","prev","closeDown","seedSelectors","index","updateText","seed","quantity","colours","chosenSeed","selectSeed","toggleSeeds","SeedText","selected","setSelected","event","stopPropagation","NoSeedText","getSeedTypes","seedTypes","length","push"],"mappings":"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","sourcesContent":["import { Text, Billboard } from '@react-three/drei'\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../../functions'\nimport { Cloud } from '../'\n\n// Creates a button that 'clicks'\n\nconst seedTextColours = {type: \"#293241\", outline: \"#b1b5c8\"}\nconst selectedSeedTextColours = {type: \"#b1b5c8\", outline: \"#293241\"}\nconst fontSize = 0.12\nconst fontZ = 1\nconst fontY = 2\n\nfunction SeedCloud(props) {\n\n  const mesh = useRef()\n  const [on, setOn] = useState(false)\n  const [option, setOption] = useState(0)\n\n  // eventhandler for Cloud\n\n  useEffect(() => {\n    console.log(props.seeds[option].type + \" \" + option)\n  }, [option])\n\n  const handleClick = () => {\n    setOn(true)\n    setOption(prev => prev + 1)\n  }\n\n\n  const closeDown = () => {\n    setOn(false)\n    setOption(0)\n  }\n\n\n  return (\n  <>\n  <mesh\n    {...props}\n    position={[0, 0.5, 0]}\n    ref={mesh}\n    scale={1}\n    >\n    <Cloud handleClick={handleClick} text={on ? props.seeds[option].type : 'seeds'} />\n  </mesh>\n\n  </>\n\n)\n}\n\nfunction seedSelectors(props, index, updateText) {\n  console.log(\"In seed selectors\")\n  console.log(index)\n  let seed = props.seeds[index]\n  console.log(seed)\n  if (seed.quantity === 0) { return }\n  let colours = {}\n  seed.type === props.chosenSeed ? colours = selectedSeedTextColours : colours = seedTextColours\n  return <SeedText key={createId()} updateText={updateText} position={[0, 2, 0]} selectSeed={props.selectSeed} toggleSeeds={props.toggleSeeds} seed={seed} colours={colours} index={index}  />\n}\n\nfunction SeedText(props) {\n  const seed = props.seed\n  const mesh = useRef()\n  const [selected, setSelected] = useState(false)\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n    console.log(\"Clicked on SeedCloud!\")\n    console.log(seed.type)\n    console.log(props.index)\n    props.selectSeed(seed.type, props.index)\n  }\n\n\n  return (\n      <mesh\n        {...props}\n        ref={mesh}\n        >\n        <Billboard\n        follow={true}\n        lockX={false}\n        lockY={false}\n        lockZ={false} >\n        < Text\n        fontSize={fontSize}\n        onClick={(event) => handleClick(event)}\n        outlineWidth={fontSize}\n        outlineColor={props.colours.outline}\n        color={props.colours.type}\n        rotation={[0, 0, 0]} >\n          {seed.quantity}\n        </ Text>\n        </ Billboard>\n      </mesh>\n      )\n    }\n\nfunction NoSeedText(props) {\n      const mesh = useRef()\n\n      return (\n          <mesh\n            {...props}\n            ref={mesh}\n            >\n            <Billboard\n            follow={true}\n            lockX={false}\n            lockY={false}\n            lockZ={false} >\n            < Text\n            fontSize={0.25}\n            position={[1, 3, 1]}\n            outlineWidth={0.25}\n            outlineColor={props.colours.outline}\n            color={props.colours.type}\n            rotation={[0, 0, 0]} >\n              No seeds available\n            </ Text>\n            </Billboard>\n          </mesh>\n        )\n  }\n\nfunction getSeedTypes(seeds) {\n  console.log(\"getting seeds\")\n  let seedTypes = []\n  for (let index = 0; index < seeds.length; index++) {\n    const seed = seeds[index]\n    seedTypes.push(seed.type)\n  }\n  console.log(seedTypes)\n  return seedTypes\n}\n\nexport default SeedCloud\n"]},"metadata":{},"sourceType":"module"}