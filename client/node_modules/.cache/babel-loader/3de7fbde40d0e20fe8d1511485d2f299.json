{"ast":null,"code":"import _toConsumableArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'../style/App.css';import React,{useState,useEffect,Suspense}from\"react\";import{addSeeds,createPlants,createPlantComponent,createId,addPlant,loadPlants,loadSeeds,updateSeed,calculateAchievement,saveGarden,sendBalloon,createPlant,loadBalloons,makeFriendRequest,makeFriends,sample}from'../functions';import{Balloon,Plant}from'../gameObjects';import{Canvas}from\"@react-three/fiber\";import{Garden,Camera,Sun,World,Firmament,Friends,Clouds,Balloons,SeedBox,IntroBalloons}from'../components';// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SeedBank(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),plants=_useState2[0],setPlants=_useState2[1];//  an array of plant components\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),seeds=_useState4[0],setSeeds=_useState4[1];//  an array of the player's available seeds\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),chosenSeed=_useState6[0],setChosenseed=_useState6[1];// contains the type of seed if chosen, or null if no seed is currently selected\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),balloons=_useState8[0],setBalloons=_useState8[1];// useEffect Hooks run after all the other code, and are then called in order\n// This loads the seeds from the DB - it does it only once\nuseEffect(function(){loadSeeds(props.id).then(function(data){return setSeeds(data);});},[]);// This useEffect runs when seeds change\nuseEffect(function(){console.log(\"USE EFFECT SEEDS!\");console.log(\"UPDATED SEEDS ARE:\");console.log(seeds);},[seeds]);// This loads the plants from the DB - it does it only once\nuseEffect(function(){loadPlants(props.id).then(function(data){return setPlants(createPlants(data));});},[]);// This useEffect runs when plant is changed\nuseEffect(function(){console.log(\"USE EFFECT PLANTS!\");console.log(\"NOW CHECKING ACHIEVEMENTS\");console.log(plants.length);//  saveGarden(props.id, plants, props.world, props.worldChosen)\nplants.length%5===0&&plants.length!==0?checkAchievements():console.log(false);},[plants]);var sowPlant=function sowPlant(event){if(chosenSeed){console.log(\"SOW PLANT\");var position=[event.point.x,event.point.y,event.point.z];var plant=new Plant(props.id,position,chosenSeed);var plantComponent=createPlantComponent(plant);setPlants(function(prev){return[plantComponent].concat(_toConsumableArray(prev));});removeSeed();addPlant(plant);}};var removeSeed=function removeSeed(){console.log(\"REMOVE SEED\");setChosenseed(\"\");updateSeeds(-1,chosenSeed);console.log(seeds);};var selectSeed=function selectSeed(selectedSeed){var seed=seeds.find(function(selected){return selected.type===selectedSeed;});if(seed.quantity>0){setChosenseed(selectedSeed);}};var updateSeeds=function updateSeeds(increment,type){console.log(\"UPDATE SEEDS...\");var index=seeds.findIndex(function(seed){return seed.type===type;});if(index===-1){console.log(\"NEW SEED in UPDATE SEEDS\");console.log(\"adding newSeed \"+type);setSeeds(function(prev){return[].concat(_toConsumableArray(prev),[{type:type,quantity:increment}]);});addSeeds(props.id,type,increment);}else{console.log(\"INCREMENT SEEDS\");var amendedSeed=seeds[index];console.log(amendedSeed);amendedSeed.quantity+=increment;setSeeds(function(prev){return[].concat(_toConsumableArray(prev.filter(function(seed){return seed.type!==type;})),[amendedSeed]);});updateSeed(props.id,amendedSeed);}};var checkAchievements=function checkAchievements(){console.log(\"CHECK ACHIEVEMENTS\");var achievementCount=plants.length/5;var startingSeeds=2;if(seeds.length<achievementCount+startingSeeds){var newSeed=calculateAchievement(seeds,props.id,plants.length);if(newSeed!==null){updateSeeds(0,newSeed.type);}}};var sendFriendRequest=function sendFriendRequest(sentence){makeFriendRequest(props.id,props.userName,sentence,props.world);};var acceptFriend=function acceptFriend(friendName){makeFriends(props.id,props.userName,friendName,props.world);};var sendPlant=function sendPlant(friendName,friendId){if(chosenSeed){var message=\"\".concat(props.userName,\" sent you \",'\\n',\" a \").concat(chosenSeed,\" seed!\");sendBalloon(friendId,chosenSeed,1,message,props.userName);console.log(\"Sending \".concat(chosenSeed,\" to \").concat(friendName,\" \").concat(friendId));removeSeed();}else{console.log(\"No seed selected\");}};var buyBalloon=function buyBalloon(colour){var seed=sample(seeds);var message=\"Bought: \".concat(seed.type,\" x 3!\");sendBalloon(props.id,seed.type,3,message,\"SeedBank\",colour);};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Canvas,{id:\"canvas\",children:[/*#__PURE__*/_jsx(Camera,{}),/*#__PURE__*/_jsxs(Suspense,{fallback:console.log(\"loading\"),children:[/*#__PURE__*/_jsx(Garden,{friend:false,sowPlant:sowPlant,position:[0,0,0],world:props.world,seeds:seeds}),plants,/*#__PURE__*/_jsx(Sun,{}),/*#__PURE__*/_jsx(Firmament,{}),/*#__PURE__*/_jsx(Friends,{sendPlant:sendPlant,userId:props.id})]}),props.worldChosen?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Balloons,{updateSeeds:updateSeeds,acceptFriend:acceptFriend,userId:props.id,today:props.today,lastLogin:props.lastLogin,seeds:seeds}),/*#__PURE__*/_jsx(Clouds,{seeds:seeds,chosenSeed:chosenSeed,buyBalloon:buyBalloon,position:[0,-0.8,1],sendFriendRequest:sendFriendRequest,selectSeed:selectSeed})]}):/*#__PURE__*/_jsx(IntroBalloons,{saveWorld:props.saveWorld,newWorld:props.newWorld})]})});}export default SeedBank;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx"],"names":["React","useState","useEffect","Suspense","addSeeds","createPlants","createPlantComponent","createId","addPlant","loadPlants","loadSeeds","updateSeed","calculateAchievement","saveGarden","sendBalloon","createPlant","loadBalloons","makeFriendRequest","makeFriends","sample","Balloon","Plant","Canvas","Garden","Camera","Sun","World","Firmament","Friends","Clouds","Balloons","SeedBox","IntroBalloons","SeedBank","props","plants","setPlants","seeds","setSeeds","chosenSeed","setChosenseed","balloons","setBalloons","id","then","data","console","log","length","checkAchievements","sowPlant","event","position","point","x","y","z","plant","plantComponent","prev","removeSeed","updateSeeds","selectSeed","selectedSeed","seed","find","selected","type","quantity","increment","index","findIndex","amendedSeed","filter","achievementCount","startingSeeds","newSeed","sendFriendRequest","sentence","userName","world","acceptFriend","friendName","sendPlant","friendId","message","buyBalloon","colour","worldChosen","today","lastLogin","saveWorld","newWorld"],"mappings":"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","sourcesContent":["import '../style/App.css';\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport { addSeeds, createPlants, createPlantComponent, createId, addPlant, loadPlants, loadSeeds, updateSeed, calculateAchievement, saveGarden, sendBalloon, createPlant, loadBalloons, makeFriendRequest, makeFriends, sample } from '../functions'\nimport { Balloon, Plant } from '../gameObjects'\nimport { Canvas } from \"@react-three/fiber\";\nimport { Garden, Camera, Sun, World, Firmament, Friends, Clouds, Balloons, SeedBox, IntroBalloons } from '../components';\n\n\n\n// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\n\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\n\nfunction SeedBank(props) {\n\n  const [plants, setPlants] = useState([]) //  an array of plant components\n  const [seeds, setSeeds] = useState([]) //  an array of the player's available seeds\n  const [chosenSeed, setChosenseed] = useState(\"\") // contains the type of seed if chosen, or null if no seed is currently selected\n  const [balloons, setBalloons] = useState([])\n\n  // useEffect Hooks run after all the other code, and are then called in order\n\n  // This loads the seeds from the DB - it does it only once\n  useEffect(() => {\n    loadSeeds(props.id).then(data => setSeeds(data))\n  }, [])\n\n  // This useEffect runs when seeds change\n  useEffect(() => {\n    console.log(\"USE EFFECT SEEDS!\")\n    console.log(\"UPDATED SEEDS ARE:\")\n    console.log(seeds)\n  }, [seeds])\n\n\n  // This loads the plants from the DB - it does it only once\n  useEffect(() => {\n    loadPlants(props.id).then(data => setPlants(createPlants(data)))\n  }, [])\n\n\n\n\n\n  // This useEffect runs when plant is changed\n\n  useEffect(() => {\n    console.log(\"USE EFFECT PLANTS!\")\n    console.log(\"NOW CHECKING ACHIEVEMENTS\")\n    console.log(plants.length)\n  //  saveGarden(props.id, plants, props.world, props.worldChosen)\n    plants.length % 5 === 0 && plants.length !== 0 ? checkAchievements() : console.log(false)\n  }, [plants])\n\n\n  const sowPlant = ( event ) => {\n    if (chosenSeed) {\n      console.log(\"SOW PLANT\")\n      const position = [event.point.x, event.point.y, event.point.z]\n      const plant = new Plant(props.id, position, chosenSeed)\n      const plantComponent = createPlantComponent(plant)\n      setPlants( (prev) => {\n        return [plantComponent, ...prev]\n      })\n      removeSeed()\n      addPlant(plant)\n    }\n  }\n\n  const removeSeed = () => {\n    console.log(\"REMOVE SEED\")\n    setChosenseed(\"\")\n    updateSeeds(-1, chosenSeed)\n    console.log(seeds)\n  }\n\n  const selectSeed = (selectedSeed) => {\n    const seed = seeds.find(selected => selected.type === selectedSeed)\n    if (seed.quantity > 0) {\n      setChosenseed(selectedSeed)\n    }\n  }\n\n  const updateSeeds = (increment, type) => {\n    console.log(\"UPDATE SEEDS...\")\n    const index = seeds.findIndex(seed => seed.type === type)\n    if (index === -1) {\n      console.log(\"NEW SEED in UPDATE SEEDS\")\n      console.log(\"adding newSeed \" + type)\n      setSeeds( (prev) => {\n        return [...prev, {type: type, quantity: increment}]\n      })\n      addSeeds(props.id, type, increment)\n    } else {\n      console.log(\"INCREMENT SEEDS\")\n      let amendedSeed = seeds[index]\n      console.log(amendedSeed)\n      amendedSeed.quantity += increment\n      setSeeds( (prev) => {\n        return [...prev.filter(seed => seed.type !== type), amendedSeed]\n      })\n      updateSeed(props.id, amendedSeed)\n    }\n  }\n\n\n\n  const checkAchievements = () => {\n    console.log(\"CHECK ACHIEVEMENTS\")\n    let achievementCount = plants.length / 5\n    let startingSeeds = 2\n    if (seeds.length < achievementCount + startingSeeds) {\n      const newSeed = calculateAchievement(seeds, props.id, plants.length)\n      if (newSeed !== null ) { updateSeeds(0, newSeed.type) }\n      }\n    }\n\n  const sendFriendRequest = (sentence) => {\n    makeFriendRequest(props.id, props.userName, sentence, props.world)\n  }\n\n  const acceptFriend = (friendName) => {\n    makeFriends(props.id, props.userName, friendName, props.world)\n  }\n\n  const sendPlant = (friendName, friendId) =>{\n    if (chosenSeed) {\n      const message = `${props.userName} sent you ${'\\n'} a ${chosenSeed} seed!`\n      sendBalloon(friendId, chosenSeed, 1, message, props.userName)\n      console.log(`Sending ${chosenSeed} to ${friendName} ${friendId}`)\n      removeSeed()\n    } else {\n      console.log(\"No seed selected\")\n    }\n\n  }\n\n  const buyBalloon = (colour) => {\n    const seed = sample(seeds)\n    const message = `Bought: ${seed.type} x 3!`\n    sendBalloon(props.id, seed.type, 3, message, \"SeedBank\", colour)\n  }\n\n\n\n  return (\n  <div className=\"App\">\n    <Canvas id=\"canvas\" >\n      <Camera />\n      <Suspense fallback={console.log(\"loading\")}>\n      <Garden\n      friend={false}\n      sowPlant={sowPlant}\n      position={[0, 0, 0]}\n      world={props.world}\n      seeds={seeds}\n       />\n      {plants}\n      <Sun />\n      <Firmament />\n      <Friends sendPlant={sendPlant} userId={props.id}/>\n     </Suspense>\n     {props.worldChosen ?\n       <>\n       <Balloons\n        updateSeeds={updateSeeds}\n        acceptFriend={acceptFriend}\n        userId={props.id}\n        today={props.today}\n        lastLogin={props.lastLogin}\n        seeds={seeds} />\n       <Clouds\n        seeds={seeds}\n        chosenSeed={chosenSeed}\n        buyBalloon={buyBalloon}\n        position={[0, -0.8, 1]}\n        sendFriendRequest={sendFriendRequest}\n        selectSeed={selectSeed} />\n        </> :\n        < IntroBalloons\n          saveWorld={props.saveWorld}\n          newWorld={props.newWorld}\n        /> }\n    </Canvas>\n  </div>\n  );\n}\n\nexport default SeedBank;\n"]},"metadata":{},"sourceType":"module"}