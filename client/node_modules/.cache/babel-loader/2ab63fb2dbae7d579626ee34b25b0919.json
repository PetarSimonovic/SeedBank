{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/SeedBox.jsx\",\n    _s = $RefreshSig$();\n\nimport { RoundedBox, Text } from '@react-three/drei';\nimport React, { useRef, useState } from \"react\"; // Creates a button that 'clicks'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SeedBox(props) {\n  _s();\n\n  const mesh = useRef();\n  const [clickScale, setClickscale] = useState(1);\n  const [seedindex, setSeedindex] = useState(0);\n\n  const handleClick = () => {\n    setClickscale(0.97);\n    let index = seedindex + 1;\n    seedindex >= props.seeds.length - 1 ? setSeedindex(0) : setSeedindex(index);\n    setTimeout(() => {\n      setClickscale(1);\n    }, 100);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      onClick: handleClick,\n      scale: clickScale,\n      children: /*#__PURE__*/_jsxDEV(RoundedBox, {\n        args: [0.2, 0.2, 0.2],\n        radius: 0.05,\n        smoothness: 4,\n        ...props,\n        children: /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n          attach: \"material\",\n          color: \"#212529\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, this), seedSelectors(props)]\n  }, void 0, true);\n}\n\n_s(SeedBox, \"rwWRrC1JRcMSVhHmxPtW7wBDIjU=\");\n\n_c = SeedBox;\n\nfunction seedSelectors(props) {\n  let seedSelectors = [];\n\n  for (let index = 0; index < props.seeds.length; index++) {\n    let seed = props.seeds[index];\n    seedSelectors.push( /*#__PURE__*/_jsxDEV(Text, {\n      outlineWidth: 0.04,\n      outlineColor: \"#b1b5c8\",\n      color: \"#293241\",\n      rotation: [0, 0, 0],\n      children: [\"seed: \", seed.type, \" \", '\\n', \"quantity: \", seed.quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 26\n    }, this));\n  }\n}\n\nexport default SeedBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeedBox\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/SeedBox.jsx"],"names":["RoundedBox","Text","React","useRef","useState","SeedBox","props","mesh","clickScale","setClickscale","seedindex","setSeedindex","handleClick","index","seeds","length","setTimeout","seedSelectors","seed","push","type","quantity"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,IAArB,QAAiC,mBAAjC;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC,C,CAGA;;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEtB,QAAMC,IAAI,GAAGJ,MAAM,EAAnB;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxBH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAII,KAAK,GAAGH,SAAS,GAAG,CAAxB;AACAA,IAAAA,SAAS,IAAIJ,KAAK,CAACQ,KAAN,CAAYC,MAAZ,GAAqB,CAAlC,GAAsCJ,YAAY,CAAC,CAAD,CAAlD,GAAwDA,YAAY,CAACE,KAAD,CAApE;AACAG,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,aAAa,CAAC,CAAD,CAAb;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAPD;;AAUF,sBACE;AAAA,4BACA,qBACIH,KADJ;AAEA,MAAA,GAAG,EAAEC,IAFL;AAGA,MAAA,OAAO,EAAEK,WAHT;AAIA,MAAA,KAAK,EAAEJ,UAJP;AAAA,6BAMA,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAlB;AAAmC,QAAA,MAAM,EAAE,IAA3C;AAAiD,QAAA,UAAU,EAAE,CAA7D;AAAA,WAAoEF,KAApE;AAAA,+BACA;AAAkB,UAAA,MAAM,EAAC,UAAzB;AAAoC,UAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA,YADA,EAWCW,aAAa,CAACX,KAAD,CAXd;AAAA,kBADF;AAiBC;;GAlCQD,O;;KAAAA,O;;AAoCT,SAASY,aAAT,CAAuBX,KAAvB,EAA8B;AAC5B,MAAIW,aAAa,GAAG,EAApB;;AACA,OAAK,IAAIJ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAxC,EAAgDF,KAAK,EAArD,EAAyD;AACvD,QAAIK,IAAI,GAAGZ,KAAK,CAACQ,KAAN,CAAYD,KAAZ,CAAX;AACAI,IAAAA,aAAa,CAACE,IAAd,eAAqB,QAAC,IAAD;AAAM,MAAA,YAAY,EAAE,IAApB;AAA0B,MAAA,YAAY,EAAC,SAAvC;AAAiD,MAAA,KAAK,EAAC,SAAvD;AAAiE,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA3E;AAAA,2BACZD,IAAI,CAACE,IADO,OACA,IADA,gBAERF,IAAI,CAACG,QAFG;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB;AAID;AACF;;AAED,eAAehB,OAAf","sourcesContent":["import { RoundedBox, Text } from '@react-three/drei'\nimport React, { useRef, useState } from \"react\";\n\n\n// Creates a button that 'clicks'\n\nfunction SeedBox(props) {\n\n  const mesh = useRef()\n  const [clickScale, setClickscale] = useState(1)\n\n  const [seedindex, setSeedindex] = useState(0)\n\n  const handleClick = () => {\n    setClickscale(0.97)\n    let index = seedindex + 1\n    seedindex >= props.seeds.length - 1 ? setSeedindex(0) : setSeedindex(index)\n    setTimeout(() => {\n      setClickscale(1)\n    }, 100)\n  };\n\n\nreturn (\n  <>\n  <mesh\n  {...props}\n  ref={mesh}\n  onClick={handleClick}\n  scale={clickScale}\n  >\n  <RoundedBox args={[0.2, 0.2, 0.2]} radius={0.05} smoothness={4} {...props}>\n  <meshToonMaterial attach=\"material\" color=\"#212529\" />\n  </RoundedBox>\n  </mesh>\n  {seedSelectors(props)}\n  </>\n\n\n)\n}\n\nfunction seedSelectors(props) {\n  let seedSelectors = []\n  for (let index = 0; index < props.seeds.length; index++) {\n    let seed = props.seeds[index]\n    seedSelectors.push(  <Text outlineWidth={0.04} outlineColor=\"#b1b5c8\" color=\"#293241\" rotation={[0, 0, 0]}>\n      seed: {seed.type} {'\\n'}\n      quantity: {seed.quantity}\n      </Text>)\n  }\n}\n\nexport default SeedBox\n"]},"metadata":{},"sourceType":"module"}