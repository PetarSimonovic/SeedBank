{"ast":null,"code":"import _slicedToArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useRef}from\"react\";import{createId}from'../functions';import{Grass,SeedBox}from'./';// The plane on which plants grow\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Garden(props){// This reference will give us direct access to the mesh\nvar mesh=useRef();// Set up state for the hovered and active state\n// Rotate mesh every frame, this is outside of React without overhead\n// useFrame(() => (mesh.current.rotation.y += 0.002))\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,children:createStalactites(props)}))});}function createStalactites(props){var world=props.world;var createdStalactites=[];for(var index=0;index<world.stalactites.length;index++){var stalactite=world.stalactites[index];createdStalactites.push(/*#__PURE__*/_jsx(Stalactite,{sowPlant:props.sowPlant,args:stalactite.geometry,position:stalactite.position,colour:stalactite.colour},createId()));}return createdStalactites;}function Stalactite(props){var mesh=useRef();var _props$args=_slicedToArray(props.args,4),top=_props$args[0],bottom=_props$args[1],depth=_props$args[2],sections=_props$args[3];var handleClick=function handleClick(event){event.stopPropagation();};return/*#__PURE__*/_jsx(\"group\",{children:/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,onClick:function onClick(event){return handleClick(event);},children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:props.args}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:props.colour}),/*#__PURE__*/_jsx(Grass,{sowPlant:props.sowPlant,position:[0,depth/2,0],args:[top,top,0.01,sections]})]}))});}export default Garden;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Garden.jsx"],"names":["React","useRef","createId","Grass","SeedBox","Garden","props","mesh","createStalactites","world","createdStalactites","index","stalactites","length","stalactite","push","sowPlant","geometry","position","colour","Stalactite","args","top","bottom","depth","sections","handleClick","event","stopPropagation"],"mappings":"ydAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,OAASC,KAAT,CAAgBC,OAAhB,KAA+B,IAA/B,CAGA;6IAEA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACrB;AACA,GAAMC,CAAAA,IAAI,CAAGN,MAAM,EAAnB,CACA;AACA;AACA;AAKA,mBACE,sCACA,2CACMK,KADN,MAEE,GAAG,CAAEC,IAFP,CAGE,KAAK,CAAE,CAHT,UAKGC,iBAAiB,CAACF,KAAD,CALpB,GADA,EADF,CAWD,CAED,QAASE,CAAAA,iBAAT,CAA2BF,KAA3B,CAAkC,CAChC,GAAMG,CAAAA,KAAK,CAAGH,KAAK,CAACG,KAApB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,EAA3B,CAEA,IAAK,GAAIC,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGF,KAAK,CAACG,WAAN,CAAkBC,MAA9C,CAAsDF,KAAK,EAA3D,CAA+D,CAC7D,GAAMG,CAAAA,UAAU,CAAGL,KAAK,CAACG,WAAN,CAAkBD,KAAlB,CAAnB,CACAD,kBAAkB,CAACK,IAAnB,cAAyB,KAAC,UAAD,EAA6B,QAAQ,CAAET,KAAK,CAACU,QAA7C,CAAuD,IAAI,CAAEF,UAAU,CAACG,QAAxE,CAAkF,QAAQ,CAAEH,UAAU,CAACI,QAAvG,CAAiH,MAAM,CAAEJ,UAAU,CAACK,MAApI,EAAiBjB,QAAQ,EAAzB,CAAzB,EACD,CAED,MAAOQ,CAAAA,kBAAP,CACD,CAED,QAASU,CAAAA,UAAT,CAAoBd,KAApB,CAA2B,CACzB,GAAMC,CAAAA,IAAI,CAAGN,MAAM,EAAnB,CACA,+BAAqCK,KAAK,CAACe,IAA3C,IAAKC,GAAL,gBAAUC,MAAV,gBAAkBC,KAAlB,gBAAyBC,QAAzB,gBAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7BA,KAAK,CAACC,eAAN,GACD,CAFD,CAIA,mBACE,oCACA,4CACMtB,KADN,MAEE,GAAG,CAAEC,IAFP,CAGE,KAAK,CAAE,CAHT,CAIE,OAAO,CAAE,iBAACoB,KAAD,QAAWD,CAAAA,WAAW,CAACC,KAAD,CAAtB,EAJX,wBAME,yBAAkB,IAAI,CAAErB,KAAK,CAACe,IAA9B,EANF,cAOE,yBAAkB,KAAK,CAAEf,KAAK,CAACa,MAA/B,EAPF,cAQE,KAAC,KAAD,EAAO,QAAQ,CAAEb,KAAK,CAACU,QAAvB,CAAiC,QAAQ,CAAE,CAAC,CAAD,CAAIQ,KAAK,CAAC,CAAV,CAAa,CAAb,CAA3C,CAA4D,IAAI,CAAE,CAACF,GAAD,CAAMA,GAAN,CAAW,IAAX,CAAiBG,QAAjB,CAAlE,EARF,IADA,EADF,CAcD,CAGD,cAAepB,CAAAA,MAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { createId } from '../functions'\nimport { Grass, SeedBox } from './'\n\n\n// The plane on which plants grow\n\nfunction Garden(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n\n\n\n  return (\n    <>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      >\n      {createStalactites(props)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createStalactites(props) {\n  const world = props.world\n  const createdStalactites = []\n\n  for (let index = 0; index < world.stalactites.length; index++) {\n    const stalactite = world.stalactites[index]\n    createdStalactites.push( <Stalactite key={createId()} sowPlant={props.sowPlant} args={stalactite.geometry} position={stalactite.position} colour={stalactite.colour} />)\n  }\n\n  return createdStalactites\n}\n\nfunction Stalactite(props) {\n  const mesh = useRef()\n  let [top, bottom, depth, sections] = props.args\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n  }\n\n  return (\n    <group>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      >\n      <cylinderGeometry args={props.args} />\n      <meshToonMaterial color={props.colour}  />\n      <Grass sowPlant={props.sowPlant} position={[0, depth/2, 0]} args={[top, top, 0.01, sections]} />\n    </mesh>\n    </group>\n  )\n}\n\n\nexport default Garden\n"]},"metadata":{},"sourceType":"module"}