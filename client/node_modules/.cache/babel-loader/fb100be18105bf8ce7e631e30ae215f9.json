{"ast":null,"code":"import { sample, randomiser, createId, calculateDays } from '../functions';\nimport { Balloon } from './';\nimport api from '../api';\nexport default async function getBalloons(garden, seeds, login, today, id) {\n  const dateDifference = calculateDays(login, today);\n  let balloons = []; // if (calculateDays(login, today) === 0 ) {\n  //   return balloons\n  // }\n\n  let balloonData = [];\n  console.log(\"BALLOON COMING!\");\n  const newSeeds = sample(seeds);\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`;\n  balloons.push(new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage));\n  await api.getBalloons(id).then(res => {\n    console.log(\"BALLOONS ARE:\");\n    console.log(res);\n    let balloonData = res.data.data.balloons;\n    console.log(balloonData);\n  });\n\n  for (let index = 0; index < balloonData; index++) {\n    const balloon = balloonData[index];\n    balloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message));\n  }\n\n  console.log(balloons);\n}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/gameObjects/getBalloons.js"],"names":["sample","randomiser","createId","calculateDays","Balloon","api","getBalloons","garden","seeds","login","today","id","dateDifference","balloons","balloonData","console","log","newSeeds","dailyMessage","quantity","type","push","then","res","data","index","balloon","message"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,aAAtC,QAA0D,cAA1D;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAIA,eAAe,eAAeC,WAAf,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,KAAjD,EAAwDC,EAAxD,EAA4D;AACzE,QAAMC,cAAc,GAAGT,aAAa,CAACM,KAAD,EAAQC,KAAR,CAApC;AACA,MAAIG,QAAQ,GAAG,EAAf,CAFyE,CAGzE;AACA;AACA;;AACA,MAAIC,WAAW,GAAG,EAAlB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,QAAMC,QAAQ,GAAGjB,MAAM,CAACQ,KAAD,CAAvB;AACA,QAAMU,YAAY,GAAI,GAAED,QAAQ,CAACE,QAAS,MAAKF,QAAQ,CAACG,IAAK,GAA7D;AACAP,EAAAA,QAAQ,CAACQ,IAAT,CAAc,IAAIjB,OAAJ,CAAYa,QAAQ,CAACG,IAArB,EAA2BH,QAAQ,CAACE,QAApC,EAA8CD,YAA9C,CAAd;AACA,QAAMb,GAAG,CAACC,WAAJ,CAAgBK,EAAhB,EAAoBW,IAApB,CAAyBC,GAAG,IAAI;AAClCR,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACA,QAAIT,WAAW,GAAGS,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcX,QAAhC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACH,GALK,CAAN;;AAOA,OAAK,IAAIW,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGX,WAA5B,EAAyCW,KAAK,EAA9C,EAAkD;AAChD,UAAMC,OAAO,GAAGZ,WAAW,CAACW,KAAD,CAA3B;AACAZ,IAAAA,QAAQ,CAACQ,IAAT,CAAc,IAAIjB,OAAJ,CAAYsB,OAAO,CAACN,IAApB,EAA0BM,OAAO,CAACP,QAAlC,EAA4CO,OAAO,CAACC,OAApD,CAAd;AACD;;AACDZ,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD","sourcesContent":["import {sample, randomiser, createId, calculateDays} from '../functions'\nimport { Balloon } from './'\nimport api from '../api';\n\n\n\nexport default async function getBalloons(garden, seeds, login, today, id) {\n  const dateDifference = calculateDays(login, today)\n  let balloons = []\n  // if (calculateDays(login, today) === 0 ) {\n  //   return balloons\n  // }\n  let balloonData = []\n\n  console.log(\"BALLOON COMING!\")\n  const newSeeds = sample(seeds)\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`\n  balloons.push(new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage))\n  await api.getBalloons(id).then(res => {\n      console.log(\"BALLOONS ARE:\")\n      console.log(res)\n      let balloonData = res.data.data.balloons\n      console.log(balloonData)\n  })\n\n  for (let index = 0; index < balloonData; index++) {\n    const balloon = balloonData[index]\n    balloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message))\n  }\n  console.log(balloons)\n}\n"]},"metadata":{},"sourceType":"module"}