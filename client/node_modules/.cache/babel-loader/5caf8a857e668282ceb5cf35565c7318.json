{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Earth.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions';\nimport * as THREE from \"three\"; // The plane on which plants grow\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Earth(props) {\n  _s();\n\n  // This reference will give us direct access to the mesh\n  const world = props.world;\n  const mesh = useRef(); // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  const handleClick = event => {\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      onClick: event => handleClick(event),\n      children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n        args: world.earth.geometry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n        color: world.earth.colour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), createStalactites(world)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Earth, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c = Earth;\n\nfunction createStalactites(world) {\n  return [/*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite1.geometry,\n    position: world.stalactite1.position,\n    colour: world.stalactite1.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite2.geometry,\n    position: world.stalactite2.position,\n    colour: world.stalactite2.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite3.geometry,\n    position: world.stalactite3.position,\n    colour: world.stalactite3.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite4.geometry,\n    position: world.stalactite4.position,\n    colour: world.stalactite4.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite5.geometry,\n    position: world.stalactite5.position,\n    colour: world.stalactite5.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite6.geometry,\n    position: world.stalactite6.position,\n    colour: world.stalactite6.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite7.geometry,\n    position: world.stalactite7.position,\n    colour: world.stalactite7.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite8.geometry,\n    position: world.stalactite8.position,\n    colour: world.stalactite8.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite9.geometry,\n    position: world.stalactite9.position,\n    colour: world.stalactite9.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: world.stalactite10.geometry,\n    position: world.stalactite10.position,\n    colour: world.stalactite10.colour\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this)];\n}\n\nfunction Stalactite(props) {\n  _s2();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    scale: 1,\n    children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n      args: props.args\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: props.colour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Stalactite, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c2 = Stalactite;\nexport default Earth;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Earth\");\n$RefreshReg$(_c2, \"Stalactite\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Earth.jsx"],"names":["React","useRef","useState","useMemo","useFrame","createId","THREE","Earth","props","world","mesh","handleClick","event","stopPropagation","earth","geometry","colour","createStalactites","stalactite1","position","stalactite2","stalactite3","stalactite4","stalactite5","stalactite6","stalactite7","stalactite8","stalactite9","stalactite10","Stalactite","args"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,OAAlC,QAAiD,OAAjD;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAGA;;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAMC,IAAI,GAAGT,MAAM,EAAnB,CAHoB,CAIpB;AACA;AACA;;AAEA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,eAAN;AACD,GAFD;;AAKA,sBACE;AAAA,2BACA,qBACML,KADN;AAEE,MAAA,GAAG,EAAEE,IAFP;AAGE,MAAA,KAAK,EAAE,CAHT;AAIE,MAAA,OAAO,EAAGE,KAAD,IAAWD,WAAW,CAACC,KAAD,CAJjC;AAAA,8BAME;AAAkB,QAAA,IAAI,EAAEH,KAAK,CAACK,KAAN,CAAYC;AAApC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAkB,QAAA,KAAK,EAAEN,KAAK,CAACK,KAAN,CAAYE;AAArC;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGC,iBAAiB,CAACR,KAAD,CARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAcD;;GA3BQF,K;;KAAAA,K;;AA6BT,SAASU,iBAAT,CAA2BR,KAA3B,EAAkC;AAChC,SAAO,cACL,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEA,KAAK,CAACS,WAAN,CAAkBH,QAArD;AAA+D,IAAA,QAAQ,EAAEN,KAAK,CAACS,WAAN,CAAkBC,QAA3F;AAAqG,IAAA,MAAM,EAAEV,KAAK,CAACS,WAAN,CAAkBF;AAA/H,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UADK,eAEL,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEI,KAAK,CAACW,WAAN,CAAkBL,QAArD;AAA+D,IAAA,QAAQ,EAAEN,KAAK,CAACW,WAAN,CAAkBD,QAA3F;AAAqG,IAAA,MAAM,EAAEV,KAAK,CAACW,WAAN,CAAkBJ;AAA/H,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UAFK,eAGL,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEI,KAAK,CAACY,WAAN,CAAkBN,QAArD;AAA+D,IAAA,QAAQ,EAAEN,KAAK,CAACY,WAAN,CAAkBF,QAA3F;AAAqG,IAAA,MAAM,EAAEV,KAAK,CAACY,WAAN,CAAkBL;AAA/H,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UAHK,eAIL,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEI,KAAK,CAACa,WAAN,CAAkBP,QAArD;AAA+D,IAAA,QAAQ,EAAEN,KAAK,CAACa,WAAN,CAAkBH,QAA3F;AAAqG,IAAA,MAAM,EAAEV,KAAK,CAACa,WAAN,CAAkBN;AAA/H,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UAJK,eAKL,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEI,KAAK,CAACc,WAAN,CAAkBR,QAArD;AAA+D,IAAA,QAAQ,EAAEN,KAAK,CAACc,WAAN,CAAkBJ,QAA3F;AAAqG,IAAA,MAAM,EAAEV,KAAK,CAACc,WAAN,CAAkBP;AAA/H,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UALK,eAML,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEI,KAAK,CAACe,WAAN,CAAkBT,QAArD;AAA+D,IAAA,QAAQ,EAAEN,KAAK,CAACe,WAAN,CAAkBL,QAA3F;AAAqG,IAAA,MAAM,EAAEV,KAAK,CAACe,WAAN,CAAkBR;AAA/H,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UANK,eAOL,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEI,KAAK,CAACgB,WAAN,CAAkBV,QAArD;AAA+D,IAAA,QAAQ,EAAEN,KAAK,CAACgB,WAAN,CAAkBN,QAA3F;AAAqG,IAAA,MAAM,EAAEV,KAAK,CAACgB,WAAN,CAAkBT;AAA/H,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UAPK,eAQL,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEI,KAAK,CAACiB,WAAN,CAAkBX,QAArD;AAA+D,IAAA,QAAQ,EAAEN,KAAK,CAACiB,WAAN,CAAkBP,QAA3F;AAAqG,IAAA,MAAM,EAAEV,KAAK,CAACiB,WAAN,CAAkBV;AAA/H,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UARK,eASL,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEI,KAAK,CAACkB,WAAN,CAAkBZ,QAArD;AAA+D,IAAA,QAAQ,EAAEN,KAAK,CAACkB,WAAN,CAAkBR,QAA3F;AAAqG,IAAA,MAAM,EAAEV,KAAK,CAACkB,WAAN,CAAkBX;AAA/H,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UATK,eAUL,QAAC,UAAD;AAA6B,IAAA,IAAI,EAAEI,KAAK,CAACmB,YAAN,CAAmBb,QAAtD;AAAgE,IAAA,QAAQ,EAAEN,KAAK,CAACmB,YAAN,CAAmBT,QAA7F;AAAuG,IAAA,MAAM,EAAEV,KAAK,CAACmB,YAAN,CAAmBZ;AAAlI,KAAiBX,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,UAVK,CAAP;AAYD;;AAED,SAASwB,UAAT,CAAoBrB,KAApB,EAA2B;AAAA;;AACzB,QAAME,IAAI,GAAGT,MAAM,EAAnB;AAEA,sBACE,qBACMO,KADN;AAEE,IAAA,GAAG,EAAEE,IAFP;AAGE,IAAA,KAAK,EAAE,CAHT;AAAA,4BAKE;AAAkB,MAAA,IAAI,EAAEF,KAAK,CAACsB;AAA9B;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAkB,MAAA,KAAK,EAAEtB,KAAK,CAACQ;AAA/B;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;IAbQa,U;;MAAAA,U;AAeT,eAAetB,KAAf","sourcesContent":["import React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions'\nimport * as THREE from \"three\";\n\n\n// The plane on which plants grow\n\nfunction Earth(props) {\n  // This reference will give us direct access to the mesh\n  const world = props.world\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n  }\n\n\n  return (\n    <>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      >\n      <cylinderGeometry args={world.earth.geometry}  />\n      <meshToonMaterial color={world.earth.colour} />\n      {createStalactites(world)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createStalactites(world) {\n  return [\n    <Stalactite key={createId()} args={world.stalactite1.geometry} position={world.stalactite1.position} colour={world.stalactite1.colour}/>,\n    <Stalactite key={createId()} args={world.stalactite2.geometry} position={world.stalactite2.position} colour={world.stalactite2.colour}/>,\n    <Stalactite key={createId()} args={world.stalactite3.geometry} position={world.stalactite3.position} colour={world.stalactite3.colour}/>,\n    <Stalactite key={createId()} args={world.stalactite4.geometry} position={world.stalactite4.position} colour={world.stalactite4.colour}/>,\n    <Stalactite key={createId()} args={world.stalactite5.geometry} position={world.stalactite5.position} colour={world.stalactite5.colour}/>,\n    <Stalactite key={createId()} args={world.stalactite6.geometry} position={world.stalactite6.position} colour={world.stalactite6.colour}/>,\n    <Stalactite key={createId()} args={world.stalactite7.geometry} position={world.stalactite7.position} colour={world.stalactite7.colour}/>,\n    <Stalactite key={createId()} args={world.stalactite8.geometry} position={world.stalactite8.position} colour={world.stalactite8.colour}/>,\n    <Stalactite key={createId()} args={world.stalactite9.geometry} position={world.stalactite9.position} colour={world.stalactite9.colour}/>,\n    <Stalactite key={createId()} args={world.stalactite10.geometry} position={world.stalactite10.position} colour={world.stalactite10.colour}/>,\n  ]\n}\n\nfunction Stalactite(props) {\n  const mesh = useRef()\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      >\n      <cylinderGeometry args={props.args} />\n      <meshToonMaterial color={props.colour} />\n    </mesh>\n  )\n}\n\nexport default Earth\n"]},"metadata":{},"sourceType":"module"}