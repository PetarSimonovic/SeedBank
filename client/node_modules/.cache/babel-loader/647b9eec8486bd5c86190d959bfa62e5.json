{"ast":null,"code":"import{Plant}from'../components';import{setDate,calculateDays}from'../functions';// Reads a saved Garden and creates an array of plants ready to render\nimport{jsx as _jsx}from\"react/jsx-runtime\";export default function loadGarden(garden){var parsedGarden=[];var today=setDate(Date()).stamp;for(var plant=0;plant<garden.length;plant++){var parsedPlant=garden[plant];console.log(\"Plant is\");console.log(parsedPlant);var growth=calculateGrowth(parsedPlant.date,today);parsedGarden.push(/*#__PURE__*/_jsx(Plant,{growth:growth,date:parsedPlant.date,position:parsedPlant.position,type:parsedPlant.type},parsedPlant.key));}console.log(parsedGarden);return parsedGarden;}function calculateGrowth(plantDate,today){console.log(\"Plant date is\");console.log(plantDate.stamp);console.log(\"Today is\");console.log(today);var days=calculateDays(plantDate.stamp,today);console.log(\"\".concat(days,\" days have passed\"));return days;}//module.exports = parseGarden;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/LoadGarden.js"],"names":["Plant","setDate","calculateDays","loadGarden","garden","parsedGarden","today","Date","stamp","plant","length","parsedPlant","console","log","growth","calculateGrowth","date","push","position","type","key","plantDate","days"],"mappings":"AAAA,OAASA,KAAT,KAAsB,eAAtB,CACA,OAASC,OAAT,CAAkBC,aAAlB,KAAuC,cAAvC,CAEA;2CAEA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,MAApB,CAA4B,CACzC,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CACA,GAAMC,CAAAA,KAAK,CAAGL,OAAO,CAACM,IAAI,EAAL,CAAP,CAAgBC,KAA9B,CACA,IAAK,GAAIC,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGL,MAAM,CAACM,MAAnC,CAA2CD,KAAK,EAAhD,CAAsD,CACpD,GAAME,CAAAA,WAAW,CAAGP,MAAM,CAACK,KAAD,CAA1B,CACAG,OAAO,CAACC,GAAR,CAAY,UAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,WAAZ,EACA,GAAMG,CAAAA,MAAM,CAAGC,eAAe,CAACJ,WAAW,CAACK,IAAb,CAAmBV,KAAnB,CAA9B,CACAD,YAAY,CAACY,IAAb,cAAkB,KAAC,KAAD,EAA6B,MAAM,CAAEH,MAArC,CAA6C,IAAI,CAAEH,WAAW,CAACK,IAA/D,CAAqE,QAAQ,CAAEL,WAAW,CAACO,QAA3F,CAAqG,IAAI,CAAEP,WAAW,CAACQ,IAAvH,EAAYR,WAAW,CAACS,GAAxB,CAAlB,EACD,CACDR,OAAO,CAACC,GAAR,CAAYR,YAAZ,EACA,MAAOA,CAAAA,YAAP,CACD,CAED,QAASU,CAAAA,eAAT,CAAyBM,SAAzB,CAAoCf,KAApC,CAA2C,CACzCM,OAAO,CAACC,GAAR,CAAY,eAAZ,EACAD,OAAO,CAACC,GAAR,CAAYQ,SAAS,CAACb,KAAtB,EACAI,OAAO,CAACC,GAAR,CAAY,UAAZ,EACAD,OAAO,CAACC,GAAR,CAAYP,KAAZ,EACA,GAAMgB,CAAAA,IAAI,CAAGpB,aAAa,CAACmB,SAAS,CAACb,KAAX,CAAkBF,KAAlB,CAA1B,CACAM,OAAO,CAACC,GAAR,WAAeS,IAAf,uBACA,MAAOA,CAAAA,IAAP,CACD,CAKD","sourcesContent":["import { Plant } from '../components'\nimport { setDate, calculateDays } from '../functions'\n\n// Reads a saved Garden and creates an array of plants ready to render\n\nexport default function loadGarden(garden) {\n  let parsedGarden = []\n  const today = setDate(Date()).stamp\n  for (let plant = 0; plant < garden.length; plant ++ ) {\n    const parsedPlant = garden[plant]\n    console.log(\"Plant is\")\n    console.log(parsedPlant)\n    const growth = calculateGrowth(parsedPlant.date, today)\n    parsedGarden.push(<Plant key={parsedPlant.key} growth={growth} date={parsedPlant.date} position={parsedPlant.position} type={parsedPlant.type}/>)\n  }\n  console.log(parsedGarden)\n  return parsedGarden\n}\n\nfunction calculateGrowth(plantDate, today) {\n  console.log(\"Plant date is\")\n  console.log(plantDate.stamp)\n  console.log(\"Today is\")\n  console.log(today)\n  const days = calculateDays(plantDate.stamp, today)\n  console.log(`${days} days have passed`)\n  return days\n}\n\n\n\n\n//module.exports = parseGarden;\n"]},"metadata":{},"sourceType":"module"}