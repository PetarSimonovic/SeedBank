{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/CloudKeyBoard.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Text, Billboard } from '@react-three/drei';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nconst alphabet = characters.split('');\nconst cloudKeyboardColours = {\n  text: \"#293241\",\n  outline: \"#b1b5c8\"\n};\nconst fontSize = 0.1;\nconst fontZ = 3;\n\nfunction CloudKeyBoard(props) {\n  _s();\n\n  console.log(\"Props in FriendCloud\");\n  console.log(props);\n  const [sentence, setSentence] = useState([]);\n\n  const buildSentence = character => {\n    setSentence(prev => {\n      return [...prev, character];\n    });\n    console.log(sentence);\n  };\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: createCloudKeyboard(props, buildSentence)\n  }, void 0, false);\n}\n\n_s(CloudKeyBoard, \"/F3Xcf57RWenr4rIHJqSUG7S+WQ=\");\n\n_c = CloudKeyBoard;\n\nfunction createCloudKeyboard(props, buildSentence) {\n  let cloudKeyboard = [];\n  console.log(alphabet);\n  let fontX = 0.5;\n  let fontY = 3;\n  let column = 1;\n\n  for (let char = 0; char < alphabet.length; char++) {\n    let character = alphabet[char];\n    fontX += 0.3;\n    cloudKeyboard.push( /*#__PURE__*/_jsxDEV(CloudKey, {\n      buildSentence: buildSentence,\n      character: character,\n      fontX: fontX,\n      fontY: fontY\n    }, createId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this));\n\n    if (column % 6 === 0) {\n      fontY -= 0.3;\n      fontX = 0.5;\n    }\n\n    column++;\n  }\n\n  console.log(cloudKeyboard);\n  return cloudKeyboard;\n}\n\nfunction CloudKey(props) {\n  _s2();\n\n  const mesh = useRef();\n\n  const handleClick = (event, character) => {\n    event.stopPropagation();\n    console.log(character);\n    props.buildSentence(character);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event, props.character),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudKeyboardColours.outline,\n        color: cloudKeyboardColours.text,\n        children: props.character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CloudKey, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c2 = CloudKey;\nexport default CloudKeyBoard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CloudKeyBoard\");\n$RefreshReg$(_c2, \"CloudKey\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/CloudKeyBoard.jsx"],"names":["Text","Billboard","React","useRef","useState","useEffect","createId","characters","alphabet","split","cloudKeyboardColours","text","outline","fontSize","fontZ","CloudKeyBoard","props","console","log","sentence","setSentence","buildSentence","character","prev","mesh","createCloudKeyboard","cloudKeyboard","fontX","fontY","column","char","length","push","CloudKey","handleClick","event","stopPropagation"],"mappings":"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","sourcesContent":["\nimport { Text, Billboard } from '@react-three/drei'\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions'\n\n\n\nconst characters = \"abcdefghijklmnopqrstuvwxyz0123456789\"\nconst alphabet = characters.split('')\nconst cloudKeyboardColours = {text: \"#293241\", outline: \"#b1b5c8\"}\nconst fontSize = 0.1\nconst fontZ = 3\n\n\n\n\nfunction CloudKeyBoard(props) {\n\n  console.log(\"Props in FriendCloud\")\n  console.log(props)\n  const [sentence, setSentence] = useState([])\n\n  const buildSentence = (character) => {\n    setSentence( (prev) => {\n      return [...prev, character]\n    })\n    console.log(sentence)\n  }\n\n  const mesh = useRef()\n\n\n\n  return (\n  <>\n  {createCloudKeyboard(props, buildSentence)}\n  </>\n\n)\n}\n\nfunction createCloudKeyboard(props, buildSentence) {\n  let cloudKeyboard = []\n  console.log(alphabet)\n  let fontX = 0.5\n  let fontY = 3\n  let column = 1\n  for (let char = 0; char < alphabet.length; char++) {\n    let character = alphabet[char]\n    fontX += 0.3\n    cloudKeyboard.push( < CloudKey key={createId()} buildSentence={buildSentence} character={character} fontX={fontX} fontY={fontY} /> )\n    if (column % 6 === 0) {\n      fontY -= 0.3\n      fontX = 0.5\n    }\n    column++\n\n  }\n  console.log(cloudKeyboard)\n  return cloudKeyboard\n\n}\n\nfunction CloudKey(props) {\n\n    const mesh = useRef()\n\n    const handleClick = (event, character) => {\n      event.stopPropagation()\n      console.log(character)\n      props.buildSentence(character)\n    }\n\n    return (\n        <mesh\n          {...props}\n          ref={mesh}\n          onClick={(event) => handleClick(event, props.character)}\n          >\n          <Billboard\n          follow={true}\n          lockX={false}\n          lockY={false}\n          lockZ={false} >\n          < Text\n          fontSize={fontSize}\n          position={[props.fontX, props.fontY, fontZ]}\n          outlineWidth={fontSize}\n          outlineColor={cloudKeyboardColours.outline}\n          color={cloudKeyboardColours.text}\n           >\n           {props.character}\n          </ Text>\n          </ Billboard>\n        </mesh>\n        )\n      }\n\nexport default CloudKeyBoard\n"]},"metadata":{},"sourceType":"module"}