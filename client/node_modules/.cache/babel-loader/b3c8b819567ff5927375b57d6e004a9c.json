{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Cloud/FriendCloud.jsx\",\n    _s = $RefreshSig$();\n\nimport { Text, Billboard } from '@react-three/drei';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../../functions';\nimport { Cloud, CloudKeyBoard } from '../';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FriendCloud(props) {\n  _s();\n\n  //const seedTypes = getSeedTypes(props.seeds)\n  const [option, setOption] = useState(0);\n  const [text, setText] = useState('seeds');\n  const [on, setOn] = useState(false);\n  const mesh = useRef(); // eventhandler for Cloud\n\n  const handleClick = () => {\n    setOn(prev => !prev);\n    option > props.seeds.length - 1 ? closeDown() : updateOption();\n    console.log(option, props.seeds.length);\n  };\n\n  const updateOption = () => {\n    setOption(prev => prev + 1);\n    setText(props.seeds[option].type);\n  };\n\n  const closeDown = () => {\n    setOn(false);\n    setOption(0);\n    setText('seeds');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      position: [0, 0.5, 0],\n      ref: mesh,\n      scale: 1,\n      children: [/*#__PURE__*/_jsxDEV(Cloud, {\n        handleClick: handleClick,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), on ? /*#__PURE__*/_jsxDEV(CloudKeyBoard, {\n        handleSubmit: props.sendFriendRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : '', \" //-1 offsets for \\\"seeds\\\" text - this could prob be neater\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(FriendCloud, \"zeIHvsbZAsXPhsPgX6e9LnOecRg=\");\n\n_c = FriendCloud;\nexport default FriendCloud;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendCloud\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Cloud/FriendCloud.jsx"],"names":["Text","Billboard","React","useRef","useState","useEffect","createId","Cloud","CloudKeyBoard","FriendCloud","props","option","setOption","text","setText","on","setOn","mesh","handleClick","prev","seeds","length","closeDown","updateOption","console","log","type","sendFriendRequest"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAoC,KAApC;;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAE1B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACW,EAAD,EAAKC,KAAL,IAAcZ,QAAQ,CAAC,KAAD,CAA5B;AACA,QAAMa,IAAI,GAAGd,MAAM,EAAnB,CAN0B,CAQ1B;;AAEA,QAAMe,WAAW,GAAG,MAAM;AACxBF,IAAAA,KAAK,CAACG,IAAI,IAAI,CAACA,IAAV,CAAL;AACAR,IAAAA,MAAM,GAAGD,KAAK,CAACU,KAAN,CAAYC,MAAZ,GAAqB,CAA9B,GAAkCC,SAAS,EAA3C,GAAgDC,YAAY,EAA5D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ,EAAoBD,KAAK,CAACU,KAAN,CAAYC,MAAhC;AAED,GALD;;AAOA,QAAME,YAAY,GAAG,MAAM;AACzBX,IAAAA,SAAS,CAACO,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAT;AACAL,IAAAA,OAAO,CAACJ,KAAK,CAACU,KAAN,CAAYT,MAAZ,EAAoBe,IAArB,CAAP;AACD,GAHD;;AAKA,QAAMJ,SAAS,GAAG,MAAM;AACtBN,IAAAA,KAAK,CAAC,KAAD,CAAL;AACAJ,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAE,IAAAA,OAAO,CAAC,OAAD,CAAP;AACD,GAJD;;AAOA,sBACA;AAAA,2BACA,qBACMJ,KADN;AAEE,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAFZ;AAGE,MAAA,GAAG,EAAEO,IAHP;AAIE,MAAA,KAAK,EAAE,CAJT;AAAA,8BAME,QAAC,KAAD;AAAO,QAAA,WAAW,EAAEC,WAApB;AAAiC,QAAA,IAAI,EAAEL;AAAvC;AAAA;AAAA;AAAA;AAAA,cANF,EAOGE,EAAE,gBAAG,QAAC,aAAD;AAAe,QAAA,YAAY,EAAEL,KAAK,CAACiB;AAAnC;AAAA;AAAA;AAAA;AAAA,cAAH,GAA8D,EAPnE;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AAcD;;GA3CQlB,W;;KAAAA,W;AA6CT,eAAeA,WAAf","sourcesContent":["import { Text, Billboard } from '@react-three/drei'\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../../functions'\nimport { Cloud, CloudKeyBoard} from '../'\n\n\nfunction FriendCloud(props) {\n\n  //const seedTypes = getSeedTypes(props.seeds)\n  const [option, setOption] = useState(0)\n  const [text, setText] = useState('seeds')\n  const [on, setOn] = useState(false)\n  const mesh = useRef()\n\n  // eventhandler for Cloud\n\n  const handleClick = () => {\n    setOn(prev => !prev)\n    option > props.seeds.length - 1 ? closeDown() : updateOption()\n    console.log(option, props.seeds.length)\n\n  }\n\n  const updateOption = () => {\n    setOption(prev => prev + 1)\n    setText(props.seeds[option].type)\n  }\n\n  const closeDown = () => {\n    setOn(false)\n    setOption(0)\n    setText('seeds')\n  }\n\n\n  return (\n  <>\n  <mesh\n    {...props}\n    position={[0, 0.5, 0]}\n    ref={mesh}\n    scale={1}\n    >\n    <Cloud handleClick={handleClick} text={text} />\n    {on ? <CloudKeyBoard handleSubmit={props.sendFriendRequest} /> : '' } //-1 offsets for \"seeds\" text - this could prob be neater\n  </mesh>\n  </>\n\n)\n}\n\nexport default FriendCloud\n"]},"metadata":{},"sourceType":"module"}