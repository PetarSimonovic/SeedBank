{"ast":null,"code":"import _objectSpread from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useEffect,useState}from\"react\";import{createId}from'../../functions';import{Grass,SeedBox,FakeGrass}from'../';import{Text,Billboard}from'@react-three/drei';// The plane on which plants grow\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Garden(props){// This reference will give us direct access to the mesh\nvar mesh=useRef();// Set up state for the hovered and active state\n// Rotate mesh every frame, this is outside of React without overhead\n// useFrame(() => (mesh.current.rotation.y += 0.002))\nvar _useState=useState(true),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var handleClick=function handleClick(event){if(props.friend){//  setName(prev => !prev)\nevent.stopPropagation();props.sendPlant(props.name,props.friendId);}};useEffect(function(){setName(name);});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,onClick:function onClick(event){return handleClick(event);},children:[createStalactites(props),name&&props.friend?/*#__PURE__*/_jsx(GardenText,{name:props.name,position:[0,2,0]}):'']}))});}function createStalactites(props){var world=props.world;var createdStalactites=[];for(var index=0;index<world.stalactites.length;index++){var stalactite=world.stalactites[index];createdStalactites.push(/*#__PURE__*/_jsx(Stalactite,{friend:props.friend,sowPlant:props.sowPlant,args:stalactite.geometry,position:stalactite.position,colour:stalactite.colour},createId()));}return createdStalactites;}function Stalactite(props){var mesh=useRef();var _props$args=_slicedToArray(props.args,4),top=_props$args[0],bottom=_props$args[1],depth=_props$args[2],sections=_props$args[3];var handleClick=function handleClick(event){props.friend?console.log(\"friend island click\"):event.stopPropagation();};return/*#__PURE__*/_jsx(\"group\",{children:/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,onClick:function onClick(event){return handleClick(event);},children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:props.args}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:props.colour}),props.friend?/*#__PURE__*/_jsx(FakeGrass,{position:[0,depth/2,0],args:[top,top,0.01,sections]}):/*#__PURE__*/_jsx(Grass,{sowPlant:props.sowPlant,position:[0,depth/2,0],args:[top,top,0.01,sections]})]}))});}function GardenText(props){var gardenTextColor={message:\"#293241\",outline:\"#b1b5c8\"};var mesh=useRef();return/*#__PURE__*/_jsx(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:0.8,children:/*#__PURE__*/_jsx(Billboard,{follow:true,lockX:false,lockY:false,lockZ:false,children:/*#__PURE__*/_jsxs(Text,{fontSize:1.4,outlineWidth:0.6,outlineColor:gardenTextColor.outline,color:gardenTextColor.message,children:[\" \",props.name,\" \"]})})}));}export default Garden;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Garden/Garden.jsx"],"names":["React","useRef","useEffect","useState","createId","Grass","SeedBox","FakeGrass","Text","Billboard","Garden","props","mesh","name","setName","handleClick","event","friend","stopPropagation","sendPlant","friendId","createStalactites","world","createdStalactites","index","stalactites","length","stalactite","push","sowPlant","geometry","position","colour","Stalactite","args","top","bottom","depth","sections","console","log","GardenText","gardenTextColor","message","outline"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { createId } from '../../functions'\nimport { Grass, SeedBox, FakeGrass } from '../'\nimport { Text, Billboard } from '@react-three/drei'\n\n\n// The plane on which plants grow\n\nfunction Garden(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  const [name, setName] = useState(true)\n\n  const handleClick = (event) => {\n    if (props.friend) {\n  //  setName(prev => !prev)\n    event.stopPropagation()\n    props.sendPlant(props.name, props.friendId)\n    }\n  }\n\n  useEffect(() => {\n    setName(name)\n  })\n\n\n  return (\n    <>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      >\n      {createStalactites(props)}\n      {name && props.friend ? <GardenText name={props.name} position={[0, 2, 0]} /> : ''}\n    </mesh>\n    </>\n  )\n}\n\nfunction createStalactites(props) {\n  const world = props.world\n  const createdStalactites = []\n\n  for (let index = 0; index < world.stalactites.length; index++) {\n    const stalactite = world.stalactites[index]\n    createdStalactites.push( <Stalactite key={createId()} friend={props.friend} sowPlant={props.sowPlant} args={stalactite.geometry} position={stalactite.position} colour={stalactite.colour} />)\n  }\n\n  return createdStalactites\n}\n\nfunction Stalactite(props) {\n  const mesh = useRef()\n  let [top, bottom, depth, sections] = props.args\n\n  const handleClick = (event) => {\n    props.friend ? console.log(\"friend island click\") : event.stopPropagation()\n  }\n\n  return (\n    <group>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      >\n      <cylinderGeometry args={props.args} />\n      <meshToonMaterial color={props.colour}  />\n      {props.friend ? <FakeGrass position={[0, depth/2, 0]} args={[top, top, 0.01, sections]} /> : <Grass sowPlant={props.sowPlant} position={[0, depth/2, 0]} args={[top, top, 0.01, sections]} />}\n    </mesh>\n    </group>\n  )\n}\n\nfunction GardenText(props) {\n\n\n  const gardenTextColor = {\n    message: \"#293241\",\n    outline: \"#b1b5c8\"\n  }\n\n  const mesh = useRef()\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={0.8}\n      >\n      <Billboard\n      follow={true}\n      lockX={false}\n      lockY={false}\n      lockZ={false} >\n      <Text fontSize={1.4} outlineWidth={0.6} outlineColor={gardenTextColor.outline} color={gardenTextColor.message} > {props.name } </Text>\n      </Billboard>\n      </mesh>\n  )\n}\n\nexport default Garden\n"]},"metadata":{},"sourceType":"module"}