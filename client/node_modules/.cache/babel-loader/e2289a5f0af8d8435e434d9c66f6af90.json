{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/LoadGarden.js\";\nimport { Plant } from '../components';\nimport { setDate, calculateDays } from '../functions'; // Reads a saved Garden and creates an array of plants ready to render\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function loadGarden(garden) {\n  let parsedGarden = [];\n  const today = setDate(Date()).stamp;\n\n  for (let plant = 0; plant < garden.length; plant++) {\n    const parsedPlant = garden[plant];\n    console.log(\"Plant is\");\n    console.log(parsedPlant);\n    const growth = calculateGrowth(parsedPlant.date, today);\n    parsedGarden.push( /*#__PURE__*/_jsxDEV(Plant, {\n      growth: growth,\n      date: parsedPlant.date,\n      position: parsedPlant.position,\n      type: parsedPlant.type\n    }, parsedPlant.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 23\n    }, this));\n  }\n\n  console.log(parsedGarden);\n  return parsedGarden;\n}\n\nfunction calculateGrowth(plantDate, today) {\n  console.log(\"Plant date is\");\n  console.log(plantDate.stamp);\n  console.log(\"Today is\");\n  console.log(today);\n  const days = calculateDays(plantDate.stamp, today);\n  console.log(`${days} days have passed`);\n  return days;\n} //module.exports = parseGarden;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/LoadGarden.js"],"names":["Plant","setDate","calculateDays","loadGarden","garden","parsedGarden","today","Date","stamp","plant","length","parsedPlant","console","log","growth","calculateGrowth","date","push","position","type","key","plantDate","days"],"mappings":";AAAA,SAASA,KAAT,QAAsB,eAAtB;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,cAAvC,C,CAEA;;;AAEA,eAAe,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AACzC,MAAIC,YAAY,GAAG,EAAnB;AACA,QAAMC,KAAK,GAAGL,OAAO,CAACM,IAAI,EAAL,CAAP,CAAgBC,KAA9B;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGL,MAAM,CAACM,MAAnC,EAA2CD,KAAK,EAAhD,EAAsD;AACpD,UAAME,WAAW,GAAGP,MAAM,CAACK,KAAD,CAA1B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,UAAMG,MAAM,GAAGC,eAAe,CAACJ,WAAW,CAACK,IAAb,EAAmBV,KAAnB,CAA9B;AACAD,IAAAA,YAAY,CAACY,IAAb,eAAkB,QAAC,KAAD;AAA6B,MAAA,MAAM,EAAEH,MAArC;AAA6C,MAAA,IAAI,EAAEH,WAAW,CAACK,IAA/D;AAAqE,MAAA,QAAQ,EAAEL,WAAW,CAACO,QAA3F;AAAqG,MAAA,IAAI,EAAEP,WAAW,CAACQ;AAAvH,OAAYR,WAAW,CAACS,GAAxB;AAAA;AAAA;AAAA;AAAA,YAAlB;AACD;;AACDR,EAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACA,SAAOA,YAAP;AACD;;AAED,SAASU,eAAT,CAAyBM,SAAzB,EAAoCf,KAApC,EAA2C;AACzCM,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAS,CAACb,KAAtB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,QAAMgB,IAAI,GAAGpB,aAAa,CAACmB,SAAS,CAACb,KAAX,EAAkBF,KAAlB,CAA1B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAES,IAAK,mBAApB;AACA,SAAOA,IAAP;AACD,C,CAKD","sourcesContent":["import { Plant } from '../components'\nimport { setDate, calculateDays } from '../functions'\n\n// Reads a saved Garden and creates an array of plants ready to render\n\nexport default function loadGarden(garden) {\n  let parsedGarden = []\n  const today = setDate(Date()).stamp\n  for (let plant = 0; plant < garden.length; plant ++ ) {\n    const parsedPlant = garden[plant]\n    console.log(\"Plant is\")\n    console.log(parsedPlant)\n    const growth = calculateGrowth(parsedPlant.date, today)\n    parsedGarden.push(<Plant key={parsedPlant.key} growth={growth} date={parsedPlant.date} position={parsedPlant.position} type={parsedPlant.type}/>)\n  }\n  console.log(parsedGarden)\n  return parsedGarden\n}\n\nfunction calculateGrowth(plantDate, today) {\n  console.log(\"Plant date is\")\n  console.log(plantDate.stamp)\n  console.log(\"Today is\")\n  console.log(today)\n  const days = calculateDays(plantDate.stamp, today)\n  console.log(`${days} days have passed`)\n  return days\n}\n\n\n\n\n//module.exports = parseGarden;\n"]},"metadata":{},"sourceType":"module"}