{"ast":null,"code":"import _objectSpread from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useRef}from\"react\";import{useFrame}from\"@react-three/fiber\";import{createId}from'../functions';import{Balloon}from'./';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Balloons(props){// This reference will give us direct access to the mesh\nvar mesh=useRef();// Set up state for the hovered and active state\n// Rotate mesh every frame, this is outside of React without overhead\n// useFrame(() => (mesh.current.rotation.y += 0.002))\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,children:createBalloons(props)}))});}function createBalloons(props){var balloonCollection=[];var balloons=props.balloons,removeBalloon=props.removeBalloon,updateSeeds=props.updateSeeds,seeds=props.seeds;var _loop=function _loop(index){var balloon=balloons[index];var handleClick=function handleClick(props){if(!balloon.claimed){var seedChoice=Math.floor(Math.random()*seeds.length);updateSeeds(3,seedChoice);removeBalloon(index);}};balloonCollection.push(/*#__PURE__*/_jsx(Balloon,{claimed:balloon.claimed,seeds:seeds,position:balloon.position,index:index,handleClick:handleClick,colour:balloon.colour},createId()));};for(var index=0;index<balloons.length;index++){_loop(index);}return balloonCollection;}export default Balloons;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Balloons.jsx"],"names":["React","useRef","useFrame","createId","Balloon","Balloons","props","mesh","createBalloons","balloonCollection","balloons","removeBalloon","updateSeeds","seeds","index","balloon","handleClick","claimed","seedChoice","Math","floor","random","length","push","position","colour"],"mappings":"4OAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,OAASC,OAAT,KAAwB,IAAxB,C,gGAIA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB;AACA,GAAMC,CAAAA,IAAI,CAAGN,MAAM,EAAnB,CACA;AACA;AACA;AAEA,mBACE,sCACA,2CACMK,KADN,MAEE,GAAG,CAAEC,IAFP,CAGE,KAAK,CAAE,CAHT,UAKGC,cAAc,CAACF,KAAD,CALjB,GADA,EADF,CAWD,CAED,QAASE,CAAAA,cAAT,CAAwBF,KAAxB,CAA+B,CAC7B,GAAMG,CAAAA,iBAAiB,CAAG,EAA1B,CACA,GAAOC,CAAAA,QAAP,CAAsDJ,KAAtD,CAAOI,QAAP,CAAiBC,aAAjB,CAAsDL,KAAtD,CAAiBK,aAAjB,CAAgCC,WAAhC,CAAsDN,KAAtD,CAAgCM,WAAhC,CAA6CC,KAA7C,CAAsDP,KAAtD,CAA6CO,KAA7C,CAF6B,yBAIpBC,KAJoB,EAK7B,GAAMC,CAAAA,OAAO,CAAGL,QAAQ,CAACI,KAAD,CAAxB,CAEA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACV,KAAD,CAAW,CAC7B,GAAI,CAACS,OAAO,CAACE,OAAb,CAAsB,CACtB,GAAMC,CAAAA,UAAU,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBR,KAAK,CAACS,MAAjC,CAAnB,CACAV,WAAW,CAAC,CAAD,CAAIM,UAAJ,CAAX,CACAP,aAAa,CAACG,KAAD,CAAb,CACD,CACA,CAND,CAQAL,iBAAiB,CAACc,IAAlB,cACE,KAAC,OAAD,EAEA,OAAO,CAAER,OAAO,CAACE,OAFjB,CAGA,KAAK,CAAEJ,KAHP,CAIA,QAAQ,CAAEE,OAAO,CAACS,QAJlB,CAKA,KAAK,CAAEV,KALP,CAMA,WAAW,CAAEE,WANb,CAOA,MAAM,CAAED,OAAO,CAACU,MAPhB,EACKtB,QAAQ,EADb,CADF,EAf6B,EAI7B,IAAK,GAAIW,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGJ,QAAQ,CAACY,MAArC,CAA6CR,KAAK,EAAlD,CAAsD,OAA7CA,KAA6C,EAqBrD,CACD,MAAOL,CAAAA,iBAAP,CACD,CAGD,cAAeJ,CAAAA,QAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions'\nimport { Balloon } from './'\n\n\n\nfunction Balloons(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  return (\n    <>\n    <mesh\n      {...props }\n      ref={mesh}\n      scale={1}\n      >\n      {createBalloons(props)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createBalloons(props) {\n  const balloonCollection = []\n  const {balloons, removeBalloon, updateSeeds, seeds} = props\n\n  for (let index = 0; index < balloons.length; index++) {\n  const balloon = balloons[index]\n\n  const handleClick = (props) => {\n    if (!balloon.claimed) {\n    const seedChoice = Math.floor(Math.random() * seeds.length)\n    updateSeeds(3, seedChoice)\n    removeBalloon(index)\n  }\n  }\n\n  balloonCollection.push(\n    <Balloon\n    key={createId()}\n    claimed={balloon.claimed}\n    seeds={seeds}\n    position={balloon.position}\n    index={index}\n    handleClick={handleClick}\n    colour={balloon.colour} />\n  )\n  }\n  return balloonCollection\n}\n\n\nexport default Balloons\n"]},"metadata":{},"sourceType":"module"}