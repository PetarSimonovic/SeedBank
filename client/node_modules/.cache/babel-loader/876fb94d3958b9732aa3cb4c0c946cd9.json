{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx\",\n    _s = $RefreshSig$();\n\nimport '../style/App.css';\nimport api from '../api';\nimport React, { useRef, useState, useMemo, useEffect, Suspense } from \"react\";\nimport { Canvas, useFrame, extend } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { Grass, Plant, Camera, Sun, SkyBox, Seeds, Garden, Worlds } from '../components';\nimport { setDate, parseGarden, saveGarden, createId, createPlant } from '../functions';\nimport styled from 'styled-components';\nimport { EffectComposer, DepthOfField, Bloom, Noise, Vignette } from 'react-postprocessing'; // Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SeedBank(props) {\n  _s();\n\n  const [plants, setPlants] = useState(props.garden);\n  const [seed, setSeed] = useState(null);\n  const [seeds, setSeeds] = useState(props.seeds);\n\n  const sowPlant = event => {\n    if (seed) {\n      const newPlant = createPlant(event, seed);\n      setSeed(null);\n      setPlants(prev => {\n        return [newPlant, ...prev];\n      });\n    }\n  };\n\n  const selectSeed = (selectedSeed, index) => {\n    console.log(\"IN SELECTED SEED\");\n    let updatedSeed = seeds[index];\n    console.log(updatedSeed);\n    updatedSeed.quantity--;\n    console.log(updatedSeed);\n    setSeed(selectedSeed);\n    let newSeeds = [...seeds]; // copy old seeds Array\n\n    newSeeds[index] = updatedSeed;\n    console.log(\"NEW SEEDS\");\n    console.log(newSeeds);\n    setSeeds(newSeeds);\n  };\n\n  useEffect(() => {\n    //\n    console.log(\"Calling saveGarden\");\n    saveGarden(props.id, plants, props.world, props.worldChosen, props.seeds);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Garden, {\n      plants: plants,\n      world: props.world,\n      selectSeed: props.selectSeed,\n      sowPlant: sowPlant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), props.worldChosen ? /*#__PURE__*/_jsxDEV(Seeds, {\n      seeds: props.seeds,\n      className: \"App-header\",\n      selectSeed: selectSeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(Worlds, {\n      className: \"App-header\",\n      newWorld: props.newWorld,\n      saveWorld: props.saveWorld\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 105\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SeedBank, \"Nnnjgi4Mz7mCOuZe1+V2t4FRq5s=\");\n\n_c = SeedBank;\nexport default SeedBank;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeedBank\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx"],"names":["api","React","useRef","useState","useMemo","useEffect","Suspense","Canvas","useFrame","extend","THREE","Grass","Plant","Camera","Sun","SkyBox","Seeds","Garden","Worlds","setDate","parseGarden","saveGarden","createId","createPlant","styled","EffectComposer","DepthOfField","Bloom","Noise","Vignette","SeedBank","props","plants","setPlants","garden","seed","setSeed","seeds","setSeeds","sowPlant","event","newPlant","prev","selectSeed","selectedSeed","index","console","log","updatedSeed","quantity","newSeeds","id","world","worldChosen","newWorld","saveWorld"],"mappings":"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","sourcesContent":["import '../style/App.css';\nimport api from '../api';\nimport React, { useRef, useState, useMemo, useEffect, Suspense } from \"react\";\nimport { Canvas, useFrame, extend } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { Grass, Plant, Camera, Sun, SkyBox, Seeds, Garden, Worlds } from '../components';\nimport { setDate, parseGarden, saveGarden, createId, createPlant } from '../functions'\nimport styled from 'styled-components';\nimport { EffectComposer, DepthOfField, Bloom, Noise, Vignette } from 'react-postprocessing'\n\n\n\n// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\nfunction SeedBank(props) {\n\n\n  const [plants, setPlants] = useState(props.garden)\n  const [seed, setSeed] = useState(null)\n  const [seeds, setSeeds] = useState(props.seeds)\n\n  const sowPlant = ( event ) => {\n    if (seed) {\n      const newPlant = createPlant(event, seed)\n      setSeed(null)\n      setPlants( (prev) => {\n        return [newPlant, ...prev]\n      })\n    }\n  }\n\n  const selectSeed = (selectedSeed, index) => {\n    console.log(\"IN SELECTED SEED\")\n    let updatedSeed = seeds[index]\n    console.log(updatedSeed)\n    updatedSeed.quantity--\n    console.log(updatedSeed)\n    setSeed(selectedSeed)\n    let newSeeds = [...seeds] // copy old seeds Array\n    newSeeds[index] = updatedSeed\n    console.log(\"NEW SEEDS\")\n    console.log(newSeeds)\n    setSeeds(newSeeds)\n  }\n\n\n\n\n\n  useEffect(() => {\n    //\n    console.log(\"Calling saveGarden\")\n    saveGarden(props.id, plants, props.world, props.worldChosen, props.seeds)\n  });\n\n\n  return (\n  <div className=\"App\">\n    <Garden plants={plants} world={props.world} selectSeed={props.selectSeed} sowPlant={sowPlant} />\n    {props.worldChosen ? <Seeds seeds={props.seeds} className=\"App-header\" selectSeed={selectSeed} /> : <Worlds className=\"App-header\" newWorld={props.newWorld} saveWorld={ props.saveWorld } />}\n  </div>\n  );\n}\n\nexport default SeedBank;\n"]},"metadata":{},"sourceType":"module"}