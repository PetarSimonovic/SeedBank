{"ast":null,"code":"import { sample, randomiser, createId, calculateDays } from './';\nimport { Balloon } from '../gameObjects';\nimport api from '../api';\nexport default async function loadBalloons(seeds, login, id, today) {\n  const dateDifference = calculateDays(login, today);\n  let loadedBalloons = await api.getBalloons(id);\n  let balloonData = loadedBalloons.data.data.balloons;\n\n  if (seeds.length !== 0) {\n    const newSeeds = sample(seeds);\n    const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`;\n    balloons.push(dailyBalloon(seeds));\n  }\n\n  let balloons = parseBalloons(balloonData);\n  console.log(\"LOADED BALLOONS\");\n  console.log(balloons);\n  return balloons;\n}\n\nfunction parseBalloons(balloonData) {\n  let parsedBalloons = [];\n\n  for (let index = 0; index < balloonData.length; index++) {\n    const balloon = balloonData[index];\n    console.log(balloon);\n    parsedBalloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message));\n  }\n\n  return parsedBalloons;\n}\n\nfunction dailyBalloon(seeds) {\n  const newSeeds = sample(seeds);\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`;\n  return new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage);\n}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/LoadBalloons.js"],"names":["sample","randomiser","createId","calculateDays","Balloon","api","loadBalloons","seeds","login","id","today","dateDifference","loadedBalloons","getBalloons","balloonData","data","balloons","length","newSeeds","dailyMessage","quantity","type","push","dailyBalloon","parseBalloons","console","log","parsedBalloons","index","balloon","message"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,aAAtC,QAA0D,IAA1D;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAIA,eAAe,eAAeC,YAAf,CAA4BC,KAA5B,EAAmCC,KAAnC,EAA0CC,EAA1C,EAA8CC,KAA9C,EAAqD;AAElE,QAAMC,cAAc,GAAGR,aAAa,CAACK,KAAD,EAAQE,KAAR,CAApC;AACA,MAAIE,cAAc,GAAG,MAAMP,GAAG,CAACQ,WAAJ,CAAgBJ,EAAhB,CAA3B;AACA,MAAIK,WAAW,GAAGF,cAAc,CAACG,IAAf,CAAoBA,IAApB,CAAyBC,QAA3C;;AAIA,MAAIT,KAAK,CAACU,MAAN,KAAgB,CAApB,EAAuB;AAAC,UAAMC,QAAQ,GAAGlB,MAAM,CAACO,KAAD,CAAvB;AACtB,UAAMY,YAAY,GAAI,GAAED,QAAQ,CAACE,QAAS,MAAKF,QAAQ,CAACG,IAAK,GAA7D;AACAL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,YAAY,CAAChB,KAAD,CAA1B;AACD;;AAED,MAAIS,QAAQ,GAAGQ,aAAa,CAACV,WAAD,CAA5B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACA,SAAOA,QAAP;AACD;;AAED,SAASQ,aAAT,CAAuBV,WAAvB,EAAoC;AAClC,MAAIa,cAAc,GAAG,EAArB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGd,WAAW,CAACG,MAAxC,EAAgDW,KAAK,EAArD,EAAyD;AACvD,UAAMC,OAAO,GAAGf,WAAW,CAACc,KAAD,CAA3B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACAF,IAAAA,cAAc,CAACL,IAAf,CAAoB,IAAIlB,OAAJ,CAAYyB,OAAO,CAACR,IAApB,EAA0BQ,OAAO,CAACT,QAAlC,EAA4CS,OAAO,CAACC,OAApD,CAApB;AACD;;AACD,SAAOH,cAAP;AACD;;AAED,SAASJ,YAAT,CAAsBhB,KAAtB,EAA6B;AAC3B,QAAMW,QAAQ,GAAGlB,MAAM,CAACO,KAAD,CAAvB;AACA,QAAMY,YAAY,GAAI,GAAED,QAAQ,CAACE,QAAS,MAAKF,QAAQ,CAACG,IAAK,GAA7D;AACA,SAAO,IAAIjB,OAAJ,CAAYc,QAAQ,CAACG,IAArB,EAA2BH,QAAQ,CAACE,QAApC,EAA8CD,YAA9C,CAAP;AACD","sourcesContent":["import {sample, randomiser, createId, calculateDays} from './'\nimport { Balloon } from '../gameObjects'\nimport api from '../api';\n\n\n\nexport default async function loadBalloons(seeds, login, id, today) {\n\n  const dateDifference = calculateDays(login, today)\n  let loadedBalloons = await api.getBalloons(id)\n  let balloonData = loadedBalloons.data.data.balloons\n\n\n\n  if (seeds.length !==0) {const newSeeds = sample(seeds)\n    const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`\n    balloons.push(dailyBalloon(seeds))\n  }\n\n  let balloons = parseBalloons(balloonData)\n  console.log(\"LOADED BALLOONS\")\n  console.log(balloons)\n  return balloons\n}\n\nfunction parseBalloons(balloonData) {\n  let parsedBalloons = []\n  for (let index = 0; index < balloonData.length; index++) {\n    const balloon = balloonData[index]\n    console.log(balloon)\n    parsedBalloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message))\n  }\n  return parsedBalloons\n}\n\nfunction dailyBalloon(seeds) {\n  const newSeeds = sample(seeds)\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`\n  return new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage)\n}\n"]},"metadata":{},"sourceType":"module"}