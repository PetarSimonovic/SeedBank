{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Earth.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\"; // The plane on which plants grow\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Earth(props) {\n  _s();\n\n  // This reference will give us direct access to the mesh\n  const mesh = useRef(); // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  const handleClick = event => {\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      onClick: event => handleClick(event),\n      children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n        args: [1.65, 1, 1, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n        color: '#947352'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      onClick: event => handleClick(event),\n      position: [-0.3, -1, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [-1.3, -1.6, 3],\n        rotateZ: 73.00\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n        color: '#947352'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      onClick: event => handleClick(event),\n      position: [-0.3, -2, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [-0.2, -1.6, 2],\n        rotateZ: 73.00\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n        color: '#947352'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      onClick: event => handleClick(event),\n      position: [-0.3, -2, 0],\n      children: /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n        color: '#947352'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Earth, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c = Earth;\n\nfunction createStalactite() {\n  return [/*#__PURE__*/_jsxDEV(Stalactite, {\n    args: [1.6, -1.6, 3],\n    position: [0, -1, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stalactite, {\n    args: [1.6, -1.6, 3],\n    position: [0, -1, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this)];\n}\n\nfunction Stalactite(props) {\n  _s2();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    scale: 1,\n    position: [0, -1, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n      args: [1.6, -1.6, 3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: '#947352'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Stalactite, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c2 = Stalactite;\nexport default Earth;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Earth\");\n$RefreshReg$(_c2, \"Stalactite\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Earth.jsx"],"names":["React","useRef","useState","useMemo","useFrame","THREE","Earth","props","mesh","handleClick","event","stopPropagation","createStalactite","Stalactite"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\n\n\n// The plane on which plants grow\n\nfunction Earth(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n  }\n\n\n  return (\n    <>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      >\n      <cylinderGeometry args={[1.65, 1, 1, 10]}  />\n      <meshToonMaterial color={'#947352'} />\n    </mesh>\n\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      position={[-0.3, -1, 0]}\n      >\n      <coneGeometry args={[-1.3, -1.6, 3]} rotateZ={73.00} />\n      <meshToonMaterial color={'#947352'} />\n    </mesh>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      position={[-0.3, -2, 0]}\n      >\n      <coneGeometry args={[-0.2, -1.6, 2]} rotateZ={73.00} />\n      <meshToonMaterial color={'#947352'} />\n    </mesh>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      position={[-0.3, -2, 0]}\n      >\n      <meshToonMaterial color={'#947352'} />\n    </mesh>\n\n    </>\n  )\n}\n\nfunction createStalactite() {\n  return [\n    <Stalactite args={[1.6, -1.6, 3]} position={[0, -1, 0]} />,\n    <Stalactite args={[1.6, -1.6, 3]} position={[0, -1, 0]} />\n  ]\n}\n\nfunction Stalactite(props) {\n  const mesh = useRef()\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      position={[0, -1, 0]}\n      >\n      <coneGeometry args={[1.6, -1.6, 3]} />\n      <meshToonMaterial color={'#947352'} />\n    </mesh>\n  )\n}\n\nexport default Earth\n"]},"metadata":{},"sourceType":"module"}