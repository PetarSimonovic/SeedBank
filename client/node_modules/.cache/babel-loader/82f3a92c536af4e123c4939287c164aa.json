{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Balloons.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId, loadBalloons, updateBalloons } from '../functions';\nimport { Balloon } from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Balloons(props) {\n  _s();\n\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  const [balloons, setBalloons] = useState([]);\n  console.log(\"Balloons in balloons\");\n  console.log(balloons);\n  useEffect(() => {\n    loadBalloons(props.seeds, props.lastLogin, props.userId, props.today).then(data => setBalloons(data));\n  }, []); // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      children: createBalloons(props, balloons)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Balloons, \"pYXjzEKZMtO68fH0F9ODG7nzSd4=\");\n\n_c = Balloons;\n\nfunction createBalloons(props, balloons) {\n  console.log(\"Balloons in createballoons\");\n  console.log(balloons);\n  const balloonCollection = [];\n  const {\n    removeBalloon,\n    updateSeeds,\n    seeds\n  } = props;\n\n  for (let index = 0; index < balloons.length; index++) {\n    const balloon = balloons[index]; // handleClick for seed balloons\n\n    const handleClick = props => {\n      updateSeeds(balloon.quantity, balloon.type);\n    };\n\n    balloonCollection.push( /*#__PURE__*/_jsxDEV(Balloon, {\n      seeds: seeds,\n      position: balloon.position,\n      index: index,\n      handleClick: handleClick,\n      colour: balloon.colour,\n      type: balloon.type,\n      quantity: balloon.quantity,\n      message: balloon.message\n    }, balloon.balloonId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this));\n  }\n\n  console.log(\"Balloon collection\");\n  console.log(balloonCollection);\n  return balloonCollection;\n}\n\nexport default Balloons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balloons\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Balloons.jsx"],"names":["React","useRef","useState","useEffect","useFrame","createId","loadBalloons","updateBalloons","Balloon","Balloons","props","mesh","balloons","setBalloons","console","log","seeds","lastLogin","userId","today","then","data","createBalloons","balloonCollection","removeBalloon","updateSeeds","index","length","balloon","handleClick","quantity","type","push","position","colour","message","balloonId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,cAAjC,QAAuD,cAAvD;AACA,SAASC,OAAT,QAAwB,IAAxB;;;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB;AACA,QAAMC,IAAI,GAAGV,MAAM,EAAnB;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAACI,KAAK,CAACM,KAAP,EAAcN,KAAK,CAACO,SAApB,EAA+BP,KAAK,CAACQ,MAArC,EAA6CR,KAAK,CAACS,KAAnD,CAAZ,CAAsEC,IAAtE,CAA2EC,IAAI,IAAIR,WAAW,CAACQ,IAAD,CAA9F;AACD,GAFQ,EAEN,EAFM,CAAT,CAPuB,CAYvB;AACA;AACA;;AAEA,sBACE;AAAA,2BACA,qBACMX,KADN;AAEE,MAAA,GAAG,EAAEC,IAFP;AAGE,MAAA,KAAK,EAAE,CAHT;AAAA,gBAKGW,cAAc,CAACZ,KAAD,EAAQE,QAAR;AALjB;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAWD;;GA3BQH,Q;;KAAAA,Q;;AA6BT,SAASa,cAAT,CAAwBZ,KAAxB,EAA+BE,QAA/B,EAAyC;AACvCE,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAMW,iBAAiB,GAAG,EAA1B;AACA,QAAM;AAACC,IAAAA,aAAD;AAAgBC,IAAAA,WAAhB;AAA6BT,IAAAA;AAA7B,MAAsCN,KAA5C;;AAEA,OAAK,IAAIgB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGd,QAAQ,CAACe,MAArC,EAA6CD,KAAK,EAAlD,EAAsD;AACtD,UAAME,OAAO,GAAGhB,QAAQ,CAACc,KAAD,CAAxB,CADsD,CAGtD;;AAEA,UAAMG,WAAW,GAAInB,KAAD,IAAW;AAC7Be,MAAAA,WAAW,CAACG,OAAO,CAACE,QAAT,EAAmBF,OAAO,CAACG,IAA3B,CAAX;AACD,KAFD;;AAKAR,IAAAA,iBAAiB,CAACS,IAAlB,eACE,QAAC,OAAD;AAEA,MAAA,KAAK,EAAEhB,KAFP;AAGA,MAAA,QAAQ,EAAEY,OAAO,CAACK,QAHlB;AAIA,MAAA,KAAK,EAAEP,KAJP;AAKA,MAAA,WAAW,EAAEG,WALb;AAMA,MAAA,MAAM,EAAED,OAAO,CAACM,MANhB;AAOA,MAAA,IAAI,EAAEN,OAAO,CAACG,IAPd;AAQA,MAAA,QAAQ,EAAEH,OAAO,CAACE,QARlB;AASA,MAAA,OAAO,EAAEF,OAAO,CAACO;AATjB,OACKP,OAAO,CAACQ,SADb;AAAA;AAAA;AAAA;AAAA,YADF;AAYC;;AACDtB,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYQ,iBAAZ;AACA,SAAOA,iBAAP;AACD;;AAGD,eAAed,QAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId, loadBalloons, updateBalloons } from '../functions'\nimport { Balloon } from './'\n\n\n\nfunction Balloons(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  const [balloons, setBalloons] = useState([])\n  console.log(\"Balloons in balloons\")\n  console.log(balloons)\n\n  useEffect(() => {\n    loadBalloons(props.seeds, props.lastLogin, props.userId, props.today).then(data => setBalloons(data))\n  }, [])\n\n\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  return (\n    <>\n    <mesh\n      {...props }\n      ref={mesh}\n      scale={1}\n      >\n      {createBalloons(props, balloons)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createBalloons(props, balloons) {\n  console.log(\"Balloons in createballoons\")\n  console.log(balloons)\n  const balloonCollection = []\n  const {removeBalloon, updateSeeds, seeds} = props\n\n  for (let index = 0; index < balloons.length; index++) {\n  const balloon = balloons[index]\n\n  // handleClick for seed balloons\n\n  const handleClick = (props) => {\n    updateSeeds(balloon.quantity, balloon.type)\n  }\n\n\n  balloonCollection.push(\n    <Balloon\n    key={balloon.balloonId}\n    seeds={seeds}\n    position={balloon.position}\n    index={index}\n    handleClick={handleClick}\n    colour={balloon.colour}\n    type={balloon.type}\n    quantity={balloon.quantity}\n    message={balloon.message} />\n  )\n  }\n  console.log(\"Balloon collection\")\n  console.log(balloonCollection)\n  return balloonCollection\n}\n\n\nexport default Balloons\n"]},"metadata":{},"sourceType":"module"}