{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx\",\n    _s = $RefreshSig$();\n\nimport '../style/App.css';\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport { calculateAchievement, saveGarden, createPlant, loadBalloons, makeFriendRequest, makeFriends } from '../functions';\nimport { Balloon } from '../gameObjects';\nimport { Canvas } from \"@react-three/fiber\";\nimport { Garden, Camera, Sun, World, Firmament, Friends, Cloud, Balloons, SeedBox, IntroBalloons } from '../components'; // Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SeedBank(props) {\n  _s();\n\n  const [plants, setPlants] = useState(props.garden); //  an array of plant components\n\n  const [chosenSeed, setChosenseed] = useState(\"\"); // contains the type of seed if chosen, or null if no seed is currently selected\n\n  const [seeds, setSeeds] = useState(props.seeds); //  an array of the player's available seeds\n\n  const [seedIndex, setSeedindex] = useState(null); //  the index within seeds of the chosenSeed\n\n  const [balloons, setBalloons] = useState([]);\n\n  const sowPlant = event => {\n    if (chosenSeed) {\n      const newPlant = createPlant(event, chosenSeed);\n      setChosenseed(\"\");\n      setPlants(prev => {\n        return [newPlant, ...prev];\n      });\n      updateSeeds(-1, chosenSeed);\n    }\n  };\n\n  const selectSeed = (selectedSeed, index) => {\n    const seed = seeds[index];\n\n    if (seeds[index].quantity > 0) {\n      setChosenseed(selectedSeed);\n      setSeedindex(index);\n    }\n  };\n\n  const updateSeeds = (increment, type) => {\n    const updatedSeeds = [...seeds];\n    const index = updatedSeeds.findIndex(seed => seed.type === type);\n\n    if (index === -1) {\n      console.log(\"adding newSeed \" + type);\n      setSeeds(prev => {\n        return [...prev, {\n          type: type,\n          quantity: increment\n        }];\n      });\n    } else {\n      updatedSeeds[index].quantity += increment;\n      setSeeds(updatedSeeds);\n    }\n\n    console.log(seeds);\n    setSeedindex(null);\n    console.log(plants.length);\n  };\n\n  const checkAchievements = () => {\n    console.log(\"CHECKING ACHIEVEMENTS\");\n    const plantCount = plants.length;\n    console.log(\"Plants \" + plantCount);\n    console.log(\"Seeds \" + seeds.length);\n    console.log(plantCount);\n    const fivePlants = plantCount % 5;\n    const achievementCount = plantCount / 5; // how many multuples of five?\n\n    const startingSeeds = 2; // offset for the starting seeds\n\n    const achievementTracker = achievementCount + startingSeeds;\n    console.log(\"AchievementTracker \" + achievementTracker);\n\n    if (fivePlants === 0 && plantCount !== 0 && seeds.length < achievementTracker) {\n      // if statement checks if plantCount is multiple of 5 and whether the seeds for that multiple have been awarded\n      console.log(\"Achievement!\");\n      const newSeed = calculateAchievement(seeds, props.id, plantCount);\n      console.log(newSeed);\n      setSeeds(prev => {\n        return [...prev, {\n          type: newSeed.type,\n          quantity: 0\n        }];\n      });\n    }\n  };\n\n  const sendFriendRequest = sentence => {\n    makeFriendRequest(props.id, props.userName, sentence, props.world);\n  };\n\n  const acceptFriend = friendName => {\n    makeFriends(props.id, props.userName, friendName, props.world);\n  };\n\n  const sendPlant = friendName => {\n    console.log(\"Sending plant to \" + friendName);\n  };\n\n  useEffect(() => {\n    console.log(\"in uSEEFFECT\");\n    console.log(seeds);\n    console.log(plants.length);\n    console.log(\"Calling saveGarden\");\n    saveGarden(props.id, plants, props.world, props.worldChosen, seeds);\n    checkAchievements();\n  }, [plants, seeds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      id: \"canvas\",\n      camera: {\n        position: [0, 2, 3.5]\n      },\n      children: [/*#__PURE__*/_jsxDEV(Camera, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: console.log(\"loading\"),\n        children: [/*#__PURE__*/_jsxDEV(Garden, {\n          friend: false,\n          sowPlant: sowPlant,\n          position: [0, 0, 0],\n          world: props.world,\n          seeds: seeds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this), plants, /*#__PURE__*/_jsxDEV(Sun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Firmament, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Friends, {\n          sendPlant: sendPlant,\n          userId: props.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), props.worldChosen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Balloons, {\n          updateSeeds: updateSeeds,\n          acceptFriend: acceptFriend,\n          userId: props.id,\n          today: props.today,\n          lastLogin: props.lastLogin,\n          seeds: seeds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Cloud, {\n          seeds: seeds,\n          chosenSeed: chosenSeed,\n          position: [0, -0.8, 1],\n          sendFriendRequest: sendFriendRequest,\n          selectSeed: selectSeed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(IntroBalloons, {\n        saveWorld: props.saveWorld,\n        newWorld: props.newWorld\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SeedBank, \"3XUIf7DVO4CnLv8k9wM/uz9w7R0=\");\n\n_c = SeedBank;\nexport default SeedBank;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeedBank\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx"],"names":["React","useState","useEffect","Suspense","calculateAchievement","saveGarden","createPlant","loadBalloons","makeFriendRequest","makeFriends","Balloon","Canvas","Garden","Camera","Sun","World","Firmament","Friends","Cloud","Balloons","SeedBox","IntroBalloons","SeedBank","props","plants","setPlants","garden","chosenSeed","setChosenseed","seeds","setSeeds","seedIndex","setSeedindex","balloons","setBalloons","sowPlant","event","newPlant","prev","updateSeeds","selectSeed","selectedSeed","index","seed","quantity","increment","type","updatedSeeds","findIndex","console","log","length","checkAchievements","plantCount","fivePlants","achievementCount","startingSeeds","achievementTracker","newSeed","id","sendFriendRequest","sentence","userName","world","acceptFriend","friendName","sendPlant","worldChosen","position","today","lastLogin","saveWorld","newWorld"],"mappings":"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","sourcesContent":["import '../style/App.css';\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport { calculateAchievement, saveGarden, createPlant, loadBalloons, makeFriendRequest, makeFriends } from '../functions'\nimport { Balloon } from '../gameObjects'\nimport { Canvas } from \"@react-three/fiber\";\nimport { Garden, Camera, Sun, World, Firmament, Friends, Cloud, Balloons, SeedBox, IntroBalloons } from '../components';\n\n\n\n// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\n\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\n\nfunction SeedBank(props) {\n\n\n  const [plants, setPlants] = useState(props.garden) //  an array of plant components\n  const [chosenSeed, setChosenseed] = useState(\"\") // contains the type of seed if chosen, or null if no seed is currently selected\n  const [seeds, setSeeds] = useState(props.seeds) //  an array of the player's available seeds\n  const [seedIndex, setSeedindex] = useState(null) //  the index within seeds of the chosenSeed\n  const [balloons, setBalloons] = useState([])\n\n\n  const sowPlant = ( event ) => {\n    if (chosenSeed) {\n      const newPlant = createPlant(event, chosenSeed)\n      setChosenseed(\"\")\n      setPlants( (prev) => {\n        return [newPlant, ...prev]\n      })\n      updateSeeds(-1, chosenSeed)\n    }\n  }\n\n  const selectSeed = (selectedSeed, index) => {\n    const seed = seeds[index]\n    if (seeds[index].quantity > 0) {\n      setChosenseed(selectedSeed)\n      setSeedindex(index)\n    }\n  }\n\n  const updateSeeds = (increment, type) => {\n    const updatedSeeds = [...seeds]\n    const index = updatedSeeds.findIndex(seed => seed.type === type)\n    if (index === -1) {\n      console.log(\"adding newSeed \" + type)\n      setSeeds( (prev) => {\n        return [...prev, {type: type, quantity: increment}]\n      })\n    } else {\n      updatedSeeds[index].quantity += increment\n      setSeeds(updatedSeeds)\n    }\n    console.log(seeds)\n    setSeedindex(null)\n    console.log(plants.length)\n  }\n\n\n  const checkAchievements = () => {\n    console.log(\"CHECKING ACHIEVEMENTS\")\n    const plantCount = plants.length\n    console.log(\"Plants \" + plantCount)\n    console.log(\"Seeds \" + seeds.length)\n    console.log(plantCount)\n    const fivePlants = plantCount % 5\n    const achievementCount = plantCount / 5 // how many multuples of five?\n    const startingSeeds = 2 // offset for the starting seeds\n    const achievementTracker = achievementCount + startingSeeds\n    console.log(\"AchievementTracker \" + achievementTracker)\n    if (fivePlants === 0 && plantCount !== 0 && seeds.length < achievementTracker) { // if statement checks if plantCount is multiple of 5 and whether the seeds for that multiple have been awarded\n      console.log(\"Achievement!\")\n      const newSeed = calculateAchievement(seeds, props.id, plantCount)\n      console.log(newSeed)\n      setSeeds( (prev) => {\n        return [...prev, {type: newSeed.type, quantity: 0}]\n      })\n    }\n  }\n\n  const sendFriendRequest = (sentence) => {\n    makeFriendRequest(props.id, props.userName, sentence, props.world)\n  }\n\n  const acceptFriend = (friendName) => {\n    makeFriends(props.id, props.userName, friendName, props.world)\n  }\n\n  const sendPlant = (friendName) =>{\n    console.log(\"Sending plant to \" + friendName)\n  }\n\n  useEffect(() => {\n    console.log(\"in uSEEFFECT\")\n    console.log(seeds)\n    console.log(plants.length)\n    console.log(\"Calling saveGarden\")\n    saveGarden(props.id, plants, props.world, props.worldChosen, seeds)\n    checkAchievements()\n  }, [plants, seeds]);\n\n\n  return (\n  <div className=\"App\">\n    <Canvas id=\"canvas\" camera={{ position: [0, 2, 3.5] }}>\n      <Camera />\n      <Suspense fallback={console.log(\"loading\")}>\n      <Garden\n      friend={false}\n      sowPlant={sowPlant}\n      position={[0, 0, 0]}\n      world={props.world}\n      seeds={seeds}\n       />\n      {plants}\n      <Sun />\n      <Firmament />\n      <Friends sendPlant={sendPlant} userId={props.id}/>\n     </Suspense>\n     {props.worldChosen ?\n       <>\n       <Balloons\n        updateSeeds={updateSeeds}\n        acceptFriend={acceptFriend}\n        userId={props.id}\n        today={props.today}\n        lastLogin={props.lastLogin}\n        seeds={seeds} />\n       <Cloud\n        seeds={seeds}\n        chosenSeed={chosenSeed}\n        position={[0, -0.8, 1]}\n        sendFriendRequest={sendFriendRequest}\n        selectSeed={selectSeed} />\n        </> :\n        < IntroBalloons\n          saveWorld={props.saveWorld}\n          newWorld={props.newWorld}\n        /> }\n    </Canvas>\n  </div>\n  );\n}\n\nexport default SeedBank;\n"]},"metadata":{},"sourceType":"module"}