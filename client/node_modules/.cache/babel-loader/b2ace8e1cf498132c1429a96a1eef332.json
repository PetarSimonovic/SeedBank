{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Friends.jsx\",\n    _s = $RefreshSig$();\n\nimport { Billboard, Text } from '@react-three/drei';\nimport React, { Component, useState, useRef, useEffect } from 'react';\nimport { loadFriends } from '../functions';\nimport { Garden } from './'; // generates a floating garden for each friend and places it in the background\n// uses the same Garden generation code as the user garden, except FakeGrass can't be planted (probably could merge this with Grass)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Friends(props) {\n  _s();\n\n  const [friends, setFriends] = useState([]);\n  const mesh = useRef();\n  useEffect(() => {\n    loadFriends(props.userId).then(data => setFriends(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      children: createFriends(props, friends)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Friends, \"h2JkTToi2v1QbggLCBvOxmvLmPw=\");\n\n_c = Friends;\n\nfunction createFriends(props, friends) {\n  const friendCollection = [];\n\n  for (let index = 0; index < friends.length; index++) {\n    const friend = friends[index];\n    friendCollection.push( /*#__PURE__*/_jsxDEV(Garden, {\n      sendPlant: props.sendPlant,\n      friend: true,\n      position: friend.position,\n      name: friend.name,\n      friendId: friend.friendId,\n      world: friend.world\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this));\n  }\n\n  return friendCollection;\n}\n\nexport default Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Friends.jsx"],"names":["Billboard","Text","React","Component","useState","useRef","useEffect","loadFriends","Garden","Friends","props","friends","setFriends","mesh","userId","then","data","createFriends","friendCollection","index","length","friend","push","sendPlant","position","name","friendId","world"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,MAAT,QAAuB,IAAvB,C,CAEA;AACA;;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMS,IAAI,GAAGR,MAAM,EAAnB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CAACG,KAAK,CAACI,MAAP,CAAX,CAA0BC,IAA1B,CAA+BC,IAAI,IAAIJ,UAAU,CAACI,IAAD,CAAjD;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACA,qBACMN,KADN;AAEE,MAAA,GAAG,EAAEG,IAFP;AAGE,MAAA,KAAK,EAAE,CAHT;AAAA,gBAKGI,aAAa,CAACP,KAAD,EAAQC,OAAR;AALhB;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAWD;;GApBQF,O;;KAAAA,O;;AAsBT,SAASQ,aAAT,CAAuBP,KAAvB,EAA8BC,OAA9B,EAAuC;AACrC,QAAMO,gBAAgB,GAAG,EAAzB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGR,OAAO,CAACS,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACnD,UAAME,MAAM,GAAGV,OAAO,CAACQ,KAAD,CAAtB;AACAD,IAAAA,gBAAgB,CAACI,IAAjB,eAAsB,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEZ,KAAK,CAACa,SAAzB;AAAoC,MAAA,MAAM,EAAE,IAA5C;AAAkD,MAAA,QAAQ,EAAEF,MAAM,CAACG,QAAnE;AAA6E,MAAA,IAAI,EAAEH,MAAM,CAACI,IAA1F;AAAgG,MAAA,QAAQ,EAAEJ,MAAM,CAACK,QAAjH;AAA2H,MAAA,KAAK,EAAEL,MAAM,CAACM;AAAzI;AAAA;AAAA;AAAA;AAAA,YAAtB;AACD;;AACD,SAAOT,gBAAP;AACD;;AAGD,eAAeT,OAAf","sourcesContent":["import { Billboard, Text } from '@react-three/drei'\nimport React, { Component, useState, useRef, useEffect } from 'react';\nimport { loadFriends } from '../functions'\nimport { Garden } from './'\n\n// generates a floating garden for each friend and places it in the background\n// uses the same Garden generation code as the user garden, except FakeGrass can't be planted (probably could merge this with Grass)\n\nfunction Friends(props) {\n\n  const [friends, setFriends] = useState([])\n  const mesh = useRef()\n\n  useEffect(() => {\n    loadFriends(props.userId).then(data => setFriends(data))\n  }, [])\n\n  return (\n    <>\n    <mesh\n      {...props }\n      ref={mesh}\n      scale={1}\n      >\n      {createFriends(props, friends)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createFriends(props, friends) {\n  const friendCollection = []\n  for (let index = 0; index < friends.length; index++) {\n    const friend = friends[index]\n    friendCollection.push(<Garden sendPlant={props.sendPlant} friend={true} position={friend.position} name={friend.name} friendId={friend.friendId} world={friend.world} />)\n  }\n  return friendCollection\n}\n\n\nexport default Friends\n"]},"metadata":{},"sourceType":"module"}