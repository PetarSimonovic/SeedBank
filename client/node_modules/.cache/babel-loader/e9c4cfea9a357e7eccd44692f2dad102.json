{"ast":null,"code":"import _toConsumableArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'../style/App.css';import React,{useState,useEffect,Suspense}from\"react\";import{calculateAchievement,saveGarden,createPlant}from'../functions';import{getBalloons,Balloon}from'../gameObjects';import{Canvas}from\"@react-three/fiber\";import{Garden,Camera,Sun,World,Firmament,Cloud,Balloons,SeedBox,IntroBalloons}from'../components';// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SeedBank(props){var _useState=useState(props.garden),_useState2=_slicedToArray(_useState,2),plants=_useState2[0],setPlants=_useState2[1];//  an array of plant components\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),chosenSeed=_useState4[0],setChosenseed=_useState4[1];// contains the type of seed if chosen, or null if no seed is currently selected\nvar _useState5=useState(props.seeds),_useState6=_slicedToArray(_useState5,2),seeds=_useState6[0],setSeeds=_useState6[1];//  an array of the player's available seeds\nvar _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),seedIndex=_useState8[0],setSeedindex=_useState8[1];//  the index within seeds of the chosenSeed\nvar _useState9=useState(getBalloons(plants,seeds,props.lastLogin,props.today)),_useState10=_slicedToArray(_useState9,2),balloons=_useState10[0],setBalloons=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),seedList=_useState12[0],setSeedlist=_useState12[1];var sowPlant=function sowPlant(event){if(chosenSeed){var newPlant=createPlant(event,chosenSeed);setChosenseed(\"\");setPlants(function(prev){return[newPlant].concat(_toConsumableArray(prev));});updateSeeds(-1);}};var selectSeed=function selectSeed(selectedSeed,index){var seed=seeds[index];if(seeds[index].quantity>0){setChosenseed(selectedSeed);setSeedindex(index);}};var updateSeeds=function updateSeeds(increment){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:seedIndex;var updatedSeeds=_toConsumableArray(seeds);updatedSeeds[index].quantity+=increment;setSeeds(updatedSeeds);setSeedindex(null);};var removeBalloon=function removeBalloon(index){var removedBalloon=balloons[index];console.log(\"REMOVED BALLOON\");console.log(removedBalloon);removedBalloon.claimed=true;// setBalloons: creates a new array based on the previous one, removing the initial balloon, then adds a copy of the old balloon with 'claimed' set to true\nsetBalloons(function(prev){return[prev.filter(function(balloon){return balloon.id!==removedBalloon.id;}),removedBalloon];});};var checkAchievements=function checkAchievements(){console.log(\"Checking achievements\");console.log(plants.length);var fivePlants=plants.length%5;var achievementCount=plants.length/5;// how many multuples of five?\nvar startingSeeds=2;// offset for the starting seeds\nif(fivePlants===0&&plants.length>0&&seeds.length<achievementCount+startingSeeds){console.log(\"Achievement!\");var newSeeds=calculateAchievement(seeds);console.log(\"New seeds is\");console.log(newSeeds);setSeeds(newSeeds);}};var toggleSeeds=function toggleSeeds(){setSeedlist(function(prevState){return!prevState;});console.log(\"TOGGLE \"+seedList);};useEffect(function(){//\nconsole.log(\"Calling saveGarden\");saveGarden(props.id,plants,props.world,props.worldChosen,seeds);setSeedlist(seedList);checkAchievements();});return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Canvas,{id:\"canvas\",camera:{position:[0,2,3.5]},children:[/*#__PURE__*/_jsx(Camera,{}),/*#__PURE__*/_jsxs(Suspense,{fallback:console.log(\"loading\"),children:[/*#__PURE__*/_jsx(Garden,{sowPlant:sowPlant,position:[0,0,0],world:props.world,seeds:seeds}),plants,/*#__PURE__*/_jsx(Balloons,{removeBalloon:removeBalloon,updateSeeds:updateSeeds,balloons:balloons,seeds:seeds}),/*#__PURE__*/_jsx(Sun,{}),/*#__PURE__*/_jsx(Firmament,{})]}),props.worldChosen?/*#__PURE__*/_jsx(Cloud,{seeds:seeds,chosenSeed:chosenSeed,seedList:seedList,position:[-1,-1,1.9],selectSeed:selectSeed,toggleSeeds:toggleSeeds}):/*#__PURE__*/_jsx(IntroBalloons,{saveWorld:props.saveWorld,newWorld:props.newWorld})]})});}export default SeedBank;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx"],"names":["React","useState","useEffect","Suspense","calculateAchievement","saveGarden","createPlant","getBalloons","Balloon","Canvas","Garden","Camera","Sun","World","Firmament","Cloud","Balloons","SeedBox","IntroBalloons","SeedBank","props","garden","plants","setPlants","chosenSeed","setChosenseed","seeds","setSeeds","seedIndex","setSeedindex","lastLogin","today","balloons","setBalloons","seedList","setSeedlist","sowPlant","event","newPlant","prev","updateSeeds","selectSeed","selectedSeed","index","seed","quantity","increment","updatedSeeds","removeBalloon","removedBalloon","console","log","claimed","filter","balloon","id","checkAchievements","length","fivePlants","achievementCount","startingSeeds","newSeeds","toggleSeeds","prevState","world","worldChosen","position","saveWorld","newWorld"],"mappings":"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","sourcesContent":["import '../style/App.css';\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport { calculateAchievement, saveGarden, createPlant } from '../functions'\nimport { getBalloons, Balloon } from '../gameObjects'\nimport { Canvas } from \"@react-three/fiber\";\nimport { Garden, Camera, Sun, World, Firmament, Cloud, Balloons, SeedBox, IntroBalloons } from '../components';\n\n\n\n// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\n\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\n\nfunction SeedBank(props) {\n\n\n  const [plants, setPlants] = useState(props.garden) //  an array of plant components\n  const [chosenSeed, setChosenseed] = useState(\"\") // contains the type of seed if chosen, or null if no seed is currently selected\n  const [seeds, setSeeds] = useState(props.seeds) //  an array of the player's available seeds\n  const [seedIndex, setSeedindex] = useState(null) //  the index within seeds of the chosenSeed\n  const [balloons, setBalloons] = useState(getBalloons(plants, seeds, props.lastLogin, props.today))\n  const [seedList, setSeedlist] = useState(false)\n\n\n  const sowPlant = ( event ) => {\n    if (chosenSeed) {\n      const newPlant = createPlant(event, chosenSeed)\n      setChosenseed(\"\")\n      setPlants( (prev) => {\n        return [newPlant, ...prev]\n      })\n      updateSeeds(-1)\n    }\n  }\n\n  const selectSeed = (selectedSeed, index) => {\n    const seed = seeds[index]\n    if (seeds[index].quantity > 0) {\n      setChosenseed(selectedSeed)\n      setSeedindex(index)\n    }\n  }\n\n  const updateSeeds = (increment, index = seedIndex) => {\n    const updatedSeeds = [...seeds]\n    updatedSeeds[index].quantity += increment\n    setSeeds(updatedSeeds)\n    setSeedindex(null)\n  }\n\n  const removeBalloon = (index) => {\n    let removedBalloon = balloons[index]\n    console.log(\"REMOVED BALLOON\")\n    console.log(removedBalloon)\n    removedBalloon.claimed = true\n\n    // setBalloons: creates a new array based on the previous one, removing the initial balloon, then adds a copy of the old balloon with 'claimed' set to true\n    setBalloons(\n      (prev) => {\n        return [prev.filter(balloon => balloon.id !== removedBalloon.id), removedBalloon]\n      }\n    )\n  }\n\n  const checkAchievements = () => {\n    console.log(\"Checking achievements\")\n    console.log(plants.length)\n    const fivePlants = plants.length % 5\n    const achievementCount = plants.length / 5 // how many multuples of five?\n    const startingSeeds = 2 // offset for the starting seeds\n    if (fivePlants === 0 && plants.length > 0 && seeds.length < (achievementCount + startingSeeds)) {\n      console.log(\"Achievement!\")\n      const newSeeds = calculateAchievement(seeds)\n      console.log(\"New seeds is\")\n      console.log(newSeeds)\n      setSeeds(newSeeds)\n\n    }\n  }\n\n  const toggleSeeds = () => {\n    setSeedlist((prevState) => !prevState)\n    console.log(\"TOGGLE \" + seedList)\n  }\n\n\n  useEffect(() => {\n    //\n    console.log(\"Calling saveGarden\")\n    saveGarden(props.id, plants, props.world, props.worldChosen, seeds)\n    setSeedlist(seedList)\n    checkAchievements()\n  });\n\n\n  return (\n  <div className=\"App\">\n    <Canvas id=\"canvas\" camera={{ position: [0, 2, 3.5] }}>\n      <Camera />\n      <Suspense fallback={console.log(\"loading\")}>\n      <Garden\n      sowPlant={sowPlant}\n      position={[0, 0, 0]}\n      world={props.world}\n      seeds={seeds}\n       />\n      {plants}\n      <Balloons\n      removeBalloon={removeBalloon}\n      updateSeeds={updateSeeds}\n      balloons={balloons}\n      seeds={seeds} />\n      <Sun />\n      <Firmament />\n     </Suspense>\n     {props.worldChosen ? <Cloud seeds={seeds} chosenSeed={chosenSeed} seedList={seedList} position={[-1, -1, 1.9]} selectSeed={selectSeed} toggleSeeds={toggleSeeds} /> : < IntroBalloons saveWorld={props.saveWorld} newWorld={props.newWorld} /> }\n    </Canvas>\n  </div>\n  );\n}\n\nexport default SeedBank;\n"]},"metadata":{},"sourceType":"module"}