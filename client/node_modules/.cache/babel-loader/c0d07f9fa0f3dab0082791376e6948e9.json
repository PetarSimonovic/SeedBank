{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Plant.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Plant(props) {\n  _s();\n\n  console.log(\"Plant props\");\n  console.log(props);\n  const {\n    x,\n    y,\n    z\n  } = props; // This reference will give us direct access to the mesh\n\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  const [growth, setGrowth] = useState(0);\n\n  const handleClick = event => {\n    event.stopPropagation();\n    console.log(\"This plant is:\");\n    console.log(props);\n  }; // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  //useFrame(() => (mesh.current.rotation.y += 0.002))\n\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      onClick: event => handleClick(event),\n      onPointerOver: event => setHover(true),\n      onPointerOut: event => setHover(false),\n      children: buildPlant({\n        growth: 2,\n        bloom: 2,\n        date: Object,\n        position: [-0.4857805246115523, 0.15000000596046448, -0.83316294107687]\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Plant, \"E4GkNynxZO/D39h8dTdqBiaS5Yo=\");\n\n_c = Plant;\n\nfunction buildPlant(props) {\n  let {\n    growth,\n    bloom\n  } = props;\n  let flower = false;\n\n  if (growth >= bloom) {\n    flower = true;\n    growth = bloom;\n  }\n\n  const stemLength = growth / 6;\n  let plant = [/*#__PURE__*/_jsxDEV(Base, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stem, {\n    stemLength: stemLength\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this)];\n\n  for (let leaves = 0; leaves <= growth; leaves++) {\n    plant.push( /*#__PURE__*/_jsxDEV(Leaf, {\n      color: \"#377F34\",\n      position: [0.02, 0.15 + leaves / 12, 0.05]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Leaf, {\n      color: \"#377F34\",\n      position: [-0.02, 0.15 + leaves / 12, -0.05]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this));\n  }\n\n  if (growth >= bloom) {\n    plant.push( /*#__PURE__*/_jsxDEV(Flower, {\n      color: \"#832134\",\n      position: [0, 0.15 + growth / 8, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this));\n  }\n\n  return plant;\n}\n\nfunction Base(props) {\n  _s2();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: [/*#__PURE__*/_jsxDEV(\"dodecahedronGeometry\", {\n      args: [0.08, 2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: '#947352'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Base, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c2 = Base;\n\nfunction Stem(props) {\n  _s3();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n      args: [0.02, 0.02, 0.4 + props.stemLength, 7]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: '#499B4A'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(Stem, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c3 = Stem;\n\nfunction Leaf(props) {\n  _s4();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n      args: [0.02, 0.05, 0.02, 6]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(Leaf, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c4 = Leaf;\n\nfunction Flower(props) {\n  _s5();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: [/*#__PURE__*/_jsxDEV(\"dodecahedronGeometry\", {\n      args: [0.06]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(Flower, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c5 = Flower;\nexport default Plant;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Plant\");\n$RefreshReg$(_c2, \"Base\");\n$RefreshReg$(_c3, \"Stem\");\n$RefreshReg$(_c4, \"Leaf\");\n$RefreshReg$(_c5, \"Flower\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Plant.jsx"],"names":["React","useRef","useState","useMemo","useFrame","useThree","THREE","Plant","props","console","log","x","y","z","mesh","hovered","setHover","active","setActive","growth","setGrowth","handleClick","event","stopPropagation","buildPlant","bloom","date","Object","position","flower","stemLength","plant","leaves","push","Base","Stem","Leaf","color","Flower"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\n\n\nfunction Plant(props) {\n  console.log(\"Plant props\")\n  console.log(props)\n  const {x, y, z} = props\n\n\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  const [growth, setGrowth] = useState(0)\n\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n    console.log(\"This plant is:\")\n    console.log(props)\n  }\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  //useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  return (\n    <group>\n    <mesh\n      {...props}\n      ref={mesh}\n      onClick={(event) => handleClick(event)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)} >\n      {buildPlant({growth: 2, bloom: 2, date: Object, position: [-0.4857805246115523, 0.15000000596046448, -0.83316294107687]})}\n    </mesh>\n    </group>\n\n  )\n}\n\nfunction buildPlant(props) {\n\n  let {growth, bloom} = props\n  let flower = false\n  if (growth >= bloom) {\n    flower = true\n    growth = bloom\n  }\n\n\n  const stemLength = growth/6\n\n  let plant = [\n    <Base />,\n    <Stem stemLength={stemLength}/>,\n  ]\n\n  for (let leaves = 0; leaves <= growth; leaves++) {\n    plant.push(\n    <Leaf color=\"#377F34\" position={[0.02, 0.15 + (leaves/12), 0.05]}/>,\n    <Leaf color=\"#377F34\" position={[-0.02, 0.15 + (leaves/12), -0.05]}/>,\n  )\n  }\n\n  if (growth >= bloom) {\n  plant.push(\n    <Flower color=\"#832134\" position={[0, 0.15 + (growth/8), 0]} />\n  )\n}\n\n  return plant\n\n}\n\nfunction Base(props) {\n\n  const mesh = useRef()\n\n  return (\n  <mesh\n    {...props}\n    ref={mesh}\n     >\n    <dodecahedronGeometry args={[0.08, 2]} />\n    <meshToonMaterial color={'#947352'} />\n  </mesh>\n)\n\n\n}\n\nfunction Stem(props) {\n  const mesh = useRef()\n\n  return (\n  <mesh\n    {...props}\n    ref={mesh}\n    >\n    <cylinderGeometry args={[0.02, 0.02, 0.4 + props.stemLength, 7]} />\n    <meshToonMaterial color={'#499B4A'} />\n    </mesh>\n  )\n}\n\n\nfunction Leaf(props) {\n  const mesh = useRef()\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh} >\n      <cylinderGeometry args={[0.02, 0.05, 0.02, 6]} />\n      <meshToonMaterial color={props.color} />\n    </mesh>\n\n  )\n\n}\n\nfunction Flower(props) {\n\n  const mesh = useRef()\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh} >\n      <dodecahedronGeometry args={[0.06]} />\n      <meshToonMaterial color={props.color} />\n    </mesh>\n\n  )\n\n}\n\n\n\nexport default Plant\n"]},"metadata":{},"sourceType":"module"}