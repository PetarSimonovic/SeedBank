{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/app/index.js\";\nimport React from 'react';\nimport { WorldData } from '../gameObjects';\nimport { saveGarden, setDate } from '../functions';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { NavBar } from '../components';\nimport { SignUp, LogIn, SeedBank } from '../pages';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      id: 0,\n      garden: [],\n      world: {},\n      chosenWorld: false,\n      seeds: [],\n      lastLogin: \"\",\n      newUser: true\n    };\n    this.setUser = this.setUser.bind(this);\n    this.newWorld = this.newWorld.bind(this);\n    this.saveWorld = this.saveWorld.bind(this);\n    this.connecToServer = this.connecToServer.bind(this);\n  }\n\n  componentDidMount() {\n    this.connecToServer();\n  }\n\n  connecToServer() {\n    fetch('/');\n  }\n\n  setUser(userName, id, garden, world, worldChosen, seeds, lastLogin, newUser) {\n    this.setState({\n      userName: userName,\n      id: id,\n      garden: garden,\n      world: world,\n      worldChosen: worldChosen,\n      seeds: seeds,\n      lastLogin: lastLogin,\n      today: setDate().stamp,\n      newUser: newUser\n    });\n  }\n\n  newWorld() {\n    const newWorld = new WorldData();\n    this.setState({\n      world: newWorld\n    });\n  }\n\n  saveWorld() {\n    this.setState({\n      worldChosen: true\n    });\n    saveGarden(this.state.id, [], this.state.world, true, this.state.seeds);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(NavBar, {\n          user: this.state.userName,\n          setUser: this.setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), this.state.userName ? /*#__PURE__*/_jsxDEV(SeedBank, {\n        id: this.state.id,\n        userName: this.state.userNsme,\n        newWorld: this.newWorld,\n        world: this.state.world,\n        worldChosen: this.state.worldChosen,\n        saveWorld: this.saveWorld,\n        seeds: this.state.seeds,\n        garden: this.state.garden,\n        lastLogin: this.state.lastLogin,\n        today: this.state.today\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(LogIn, {\n          setUser: this.setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SignUp, {\n          setUser: this.setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/app/index.js"],"names":["React","WorldData","saveGarden","setDate","BrowserRouter","Router","NavBar","SignUp","LogIn","SeedBank","App","Component","constructor","props","state","userName","id","garden","world","chosenWorld","seeds","lastLogin","newUser","setUser","bind","newWorld","saveWorld","connecToServer","componentDidMount","fetch","worldChosen","setState","today","stamp","render","position","width","height","userNsme"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { WorldData } from '../gameObjects'\nimport { saveGarden, setDate } from '../functions'\n\n\nimport './App.css';\n\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { NavBar } from '../components'\nimport { SignUp, LogIn, SeedBank } from '../pages'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends React.Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        userName: \"\",\n        id: 0,\n        garden: [],\n        world: {},\n        chosenWorld: false,\n        seeds: [],\n        lastLogin: \"\",\n        newUser: true\n      }\n      this.setUser = this.setUser.bind(this)\n      this.newWorld = this.newWorld.bind(this)\n      this.saveWorld = this.saveWorld.bind(this)\n      this.connecToServer = this.connecToServer.bind(this)\n    }\n\n    componentDidMount() {\n      this.connecToServer();\n      }\n\n    connecToServer() {\n       fetch('/');\n     }\n\n\n    setUser(userName, id, garden, world, worldChosen, seeds, lastLogin, newUser) {\n      this.setState({\n        userName: userName,\n        id: id,\n        garden: garden,\n        world: world,\n        worldChosen: worldChosen,\n        seeds: seeds,\n        lastLogin: lastLogin,\n        today: setDate().stamp,\n        newUser: newUser\n      })\n        }\n\n    newWorld() {\n      const newWorld = new WorldData()\n      this.setState({\n        world: newWorld\n      })\n    }\n\n    saveWorld() {\n      this.setState({\n        worldChosen: true\n      })\n      saveGarden(this.state.id, [], this.state.world, true, this.state.seeds)\n    }\n\n\n\n    render() {\n    return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}>\n        <Router>\n            <NavBar user={this.state.userName} setUser={this.setUser} />\n          </Router>\n          {this.state.userName ?\n            <SeedBank\n              id={this.state.id}\n              userName={this.state.userNsme}\n              newWorld={this.newWorld}\n              world={this.state.world}\n              worldChosen={this.state.worldChosen}\n              saveWorld={this.saveWorld}\n              seeds={this.state.seeds}\n              garden={this.state.garden}\n              lastLogin={this.state.lastLogin}\n              today={this.state.today}\n            /> :\n            <div>\n              <LogIn setUser={this.setUser} />\n              <SignUp setUser={this.setUser} />\n            </div> }\n    </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}