{"ast":null,"code":"import _objectSpread from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useRef}from\"react\";// The plane on which plants grow\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Grass(props){// This reference will give us direct access to the mesh\nvar mesh=useRef();// Set up state for the hovered and active state\n// Rotate mesh every frame, this is outside of React without overhead\n// useFrame(() => (mesh.current.rotation.y += 0.002))\nreturn/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,onClick:function onClick(event){return props.sowPlant(event);},children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:props.args}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:'#a7c957'})]}));}export default Grass;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Garden/Grass.jsx"],"names":["React","useRef","Grass","props","mesh","event","sowPlant","args"],"mappings":"4OAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CAIA;wFAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACpB;AACA,GAAMC,CAAAA,IAAI,CAAGH,MAAM,EAAnB,CACA;AACA;AACA;AAGA,mBACE,4CACME,KADN,MAEE,GAAG,CAAEC,IAFP,CAGE,KAAK,CAAE,CAHT,CAIE,OAAO,CAAE,iBAACC,KAAD,QAAWF,CAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf,CAAX,EAJX,wBAME,yBAAkB,IAAI,CAAEF,KAAK,CAACI,IAA9B,EANF,cAOE,yBAAkB,KAAK,CAAE,SAAzB,EAPF,IADF,CAWD,CAED,cAAeL,CAAAA,KAAf","sourcesContent":["import React, { useRef } from \"react\";\n\n\n\n// The plane on which plants grow\n\nfunction Grass(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => props.sowPlant(event)}\n      >\n      <cylinderGeometry args={props.args} />\n      <meshToonMaterial color={'#a7c957'} />\n    </mesh>\n  )\n}\n\nexport default Grass\n"]},"metadata":{},"sourceType":"module"}