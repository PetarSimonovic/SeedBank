{"ast":null,"code":"import { sample, randomiser, createId, calculateDays } from '../functions';\nimport { Balloon } from './';\nimport api from '../api';\nexport default async function getBalloons(garden, seeds, login, today, id) {\n  const dateDifference = calculateDays(login, today); // if (calculateDays(login, today) === 0 ) {\n  //   return balloons\n  // }\n\n  let loadedBalloons = await api.getBalloons(id);\n  let balloonData = loadedBalloons.data.data.balloons;\n  balloons.push(dailyBalloon());\n  console.log(\"BALLOONS COMING!\");\n  const newSeeds = sample(seeds);\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`;\n  let balloons = parseBalloons(balloonData);\n  balloons.push(new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage)); // console.log(balloons)\n}\n\nfunction parseBalloons(balloonData) {\n  let parsedBalloons = [];\n\n  for (let index = 0; index < balloonData; index++) {\n    const balloon = balloonData[index];\n    parsedBalloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message));\n  }\n\n  return parsedBalloons;\n}\n\nfunction dailyBalloon(seeds) {\n  const newSeeds = sample(seeds);\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`;\n  return new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage);\n}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/gameObjects/getBalloons.js"],"names":["sample","randomiser","createId","calculateDays","Balloon","api","getBalloons","garden","seeds","login","today","id","dateDifference","loadedBalloons","balloonData","data","balloons","push","dailyBalloon","console","log","newSeeds","dailyMessage","quantity","type","parseBalloons","parsedBalloons","index","balloon","message"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,aAAtC,QAA0D,cAA1D;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAIA,eAAe,eAAeC,WAAf,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,KAAjD,EAAwDC,EAAxD,EAA4D;AACzE,QAAMC,cAAc,GAAGT,aAAa,CAACM,KAAD,EAAQC,KAAR,CAApC,CADyE,CAEzE;AACA;AACA;;AACA,MAAIG,cAAc,GAAG,MAAMR,GAAG,CAACC,WAAJ,CAAgBK,EAAhB,CAA3B;AACA,MAAIG,WAAW,GAAGD,cAAc,CAACE,IAAf,CAAoBA,IAApB,CAAyBC,QAA3C;AAEAA,EAAAA,QAAQ,CAACC,IAAT,CAAcC,YAAY,EAA1B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,QAAMC,QAAQ,GAAGrB,MAAM,CAACQ,KAAD,CAAvB;AACA,QAAMc,YAAY,GAAI,GAAED,QAAQ,CAACE,QAAS,MAAKF,QAAQ,CAACG,IAAK,GAA7D;AACA,MAAIR,QAAQ,GAAGS,aAAa,CAACX,WAAD,CAA5B;AACAE,EAAAA,QAAQ,CAACC,IAAT,CAAc,IAAIb,OAAJ,CAAYiB,QAAQ,CAACG,IAArB,EAA2BH,QAAQ,CAACE,QAApC,EAA8CD,YAA9C,CAAd,EAfyE,CAkBzE;AACD;;AAED,SAASG,aAAT,CAAuBX,WAAvB,EAAoC;AAClC,MAAIY,cAAc,GAAG,EAArB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGb,WAA5B,EAAyCa,KAAK,EAA9C,EAAkD;AAChD,UAAMC,OAAO,GAAGd,WAAW,CAACa,KAAD,CAA3B;AACAD,IAAAA,cAAc,CAACT,IAAf,CAAoB,IAAIb,OAAJ,CAAYwB,OAAO,CAACJ,IAApB,EAA0BI,OAAO,CAACL,QAAlC,EAA4CK,OAAO,CAACC,OAApD,CAApB;AACD;;AACD,SAAOH,cAAP;AACD;;AAED,SAASR,YAAT,CAAsBV,KAAtB,EAA6B;AAC3B,QAAMa,QAAQ,GAAGrB,MAAM,CAACQ,KAAD,CAAvB;AACA,QAAMc,YAAY,GAAI,GAAED,QAAQ,CAACE,QAAS,MAAKF,QAAQ,CAACG,IAAK,GAA7D;AACA,SAAO,IAAIpB,OAAJ,CAAYiB,QAAQ,CAACG,IAArB,EAA2BH,QAAQ,CAACE,QAApC,EAA8CD,YAA9C,CAAP;AACD","sourcesContent":["import {sample, randomiser, createId, calculateDays} from '../functions'\nimport { Balloon } from './'\nimport api from '../api';\n\n\n\nexport default async function getBalloons(garden, seeds, login, today, id) {\n  const dateDifference = calculateDays(login, today)\n  // if (calculateDays(login, today) === 0 ) {\n  //   return balloons\n  // }\n  let loadedBalloons = await api.getBalloons(id)\n  let balloonData = loadedBalloons.data.data.balloons\n\n  balloons.push(dailyBalloon())\n\n  console.log(\"BALLOONS COMING!\")\n\n  const newSeeds = sample(seeds)\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`\n  let balloons = parseBalloons(balloonData)\n  balloons.push(new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage))\n\n\n  // console.log(balloons)\n}\n\nfunction parseBalloons(balloonData) {\n  let parsedBalloons = []\n  for (let index = 0; index < balloonData; index++) {\n    const balloon = balloonData[index]\n    parsedBalloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message))\n  }\n  return parsedBalloons\n}\n\nfunction dailyBalloon(seeds) {\n  const newSeeds = sample(seeds)\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`\n  return new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage)\n}\n"]},"metadata":{},"sourceType":"module"}