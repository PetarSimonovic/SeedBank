{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx\",\n    _s = $RefreshSig$();\n\nimport '../style/App.css';\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport { Seeds, Garden, Worlds } from '../components';\nimport { calculateAchievement, saveGarden, createPlant } from '../functions';\nimport { getBalloons, Balloon } from '../gameObjects';\nimport { Canvas } from \"@react-three/fiber\";\nimport { Camera, Sun, World, Firmament, Noticeboard, Balloons, SeedBox } from '../components'; // Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SeedBank(props) {\n  _s();\n\n  const [plants, setPlants] = useState(props.garden); //  an array of plant components\n\n  const [chosenSeed, setChosenseed] = useState(\"\"); // contains the type of seed if chosen, or null if no seed is currently selected\n\n  const [seeds, setSeeds] = useState(props.seeds); //  an array of the player's available seeds\n\n  const [seedIndex, setSeedindex] = useState(null); //  the index within seeds of the chosenSeed\n\n  const [balloons, setBalloons] = useState(getBalloons(plants, seeds, props.lastLogin, props.today));\n  const [seedList, setSeedlist] = useState(false);\n\n  const sowPlant = event => {\n    if (chosenSeed) {\n      const newPlant = createPlant(event, chosenSeed);\n      setChosenseed(\"\");\n      setPlants(prev => {\n        return [newPlant, ...prev];\n      });\n      updateSeeds(-1);\n    }\n  };\n\n  const selectSeed = (selectedSeed, index) => {\n    const seed = seeds[index];\n\n    if (seeds[index].quantity > 0) {\n      console.log(\"In selectSeed\");\n      console.log(selectedSeed);\n      setChosenseed(selectedSeed);\n      setSeedindex(index);\n    }\n  };\n\n  const updateSeeds = (increment, index = seedIndex) => {\n    console.log(\"UPDATING SEEDS\");\n    console.log(seeds);\n    const updatedSeeds = [...seeds];\n    updatedSeeds[index].quantity += increment;\n    setSeeds(updatedSeeds);\n    setSeedindex(null);\n  };\n\n  const removeBalloon = index => {\n    let removedBalloon = balloons[index];\n    removedBalloon.claimed = true; // setBalloons: creates a new array based on the previous one, removing the initial balloon, then adds a copy of the old balloon with 'claimed' set to true\n\n    setBalloons(prev => {\n      return [prev.filter(balloon => balloon.id !== removedBalloon.id), removedBalloon];\n    });\n    console.log(balloons);\n  };\n\n  const checkAchievements = () => {\n    const fivePlants = plants.length % 5;\n    const achievementCount = plants.length / 5; // how many multuples of five?\n\n    const startingSeeds = 2; // offset for the starting seeds\n\n    console.log(achievementCount);\n    console.log(achievementCount + startingSeeds);\n    console.log(seeds.length);\n\n    if (fivePlants === 0 && plants.length > 0 && seeds.length < achievementCount + startingSeeds) {\n      console.log(\"Achievement!\");\n      const newSeeds = calculateAchievement(seeds);\n      console.log(\"New seeds is\");\n      console.log(newSeeds);\n      setSeeds(newSeeds);\n    }\n  };\n\n  const toggleSeeds = () => {\n    setSeedlist(!seedList);\n  };\n\n  useEffect(() => {\n    //\n    console.log(\"Calling saveGarden\");\n    saveGarden(props.id, plants, props.world, props.worldChosen, seeds);\n    checkAchievements();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      id: \"canvas\",\n      camera: {\n        position: [0, 2, 3.5]\n      },\n      children: [/*#__PURE__*/_jsxDEV(Camera, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: console.log(\"loading\"),\n        children: [/*#__PURE__*/_jsxDEV(World, {\n          sowPlant: sowPlant,\n          position: [0, 0, 0],\n          world: props.world,\n          seeds: seeds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(SeedBox, {\n          chosenSeed: chosenSeed,\n          seedList: seedList,\n          selectSeed: selectSeed,\n          toggleSeeds: toggleSeeds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 8\n        }, this), plants, /*#__PURE__*/_jsxDEV(Balloons, {\n          removeBalloon: removeBalloon,\n          updateSeeds: updateSeeds,\n          balloons: balloons,\n          seeds: seeds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Sun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Firmament, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Noticeboard, {\n          today: props.today\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), props.worldChosen ? /*#__PURE__*/_jsxDEV(Seeds, {\n      chosenSeed: chosenSeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(Worlds, {\n      className: \"App-header\",\n      newWorld: props.newWorld,\n      saveWorld: props.saveWorld\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SeedBank, \"6w933W3uuargERgbpRGhMIxv530=\");\n\n_c = SeedBank;\nexport default SeedBank;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeedBank\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx"],"names":["React","useState","useEffect","Suspense","Seeds","Garden","Worlds","calculateAchievement","saveGarden","createPlant","getBalloons","Balloon","Canvas","Camera","Sun","World","Firmament","Noticeboard","Balloons","SeedBox","SeedBank","props","plants","setPlants","garden","chosenSeed","setChosenseed","seeds","setSeeds","seedIndex","setSeedindex","balloons","setBalloons","lastLogin","today","seedList","setSeedlist","sowPlant","event","newPlant","prev","updateSeeds","selectSeed","selectedSeed","index","seed","quantity","console","log","increment","updatedSeeds","removeBalloon","removedBalloon","claimed","filter","balloon","id","checkAchievements","fivePlants","length","achievementCount","startingSeeds","newSeeds","toggleSeeds","world","worldChosen","position","newWorld","saveWorld"],"mappings":"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","sourcesContent":["import '../style/App.css';\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport { Seeds, Garden, Worlds } from '../components';\nimport { calculateAchievement, saveGarden, createPlant } from '../functions'\nimport { getBalloons, Balloon } from '../gameObjects'\nimport { Canvas } from \"@react-three/fiber\";\nimport {  Camera, Sun, World, Firmament, Noticeboard, Balloons, SeedBox } from '../components';\n\n\n\n// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\n\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\n\nfunction SeedBank(props) {\n\n\n  const [plants, setPlants] = useState(props.garden) //  an array of plant components\n  const [chosenSeed, setChosenseed] = useState(\"\") // contains the type of seed if chosen, or null if no seed is currently selected\n  const [seeds, setSeeds] = useState(props.seeds) //  an array of the player's available seeds\n  const [seedIndex, setSeedindex] = useState(null) //  the index within seeds of the chosenSeed\n  const [balloons, setBalloons] = useState(getBalloons(plants, seeds, props.lastLogin, props.today))\n  const [seedList, setSeedlist] = useState(false)\n\n\n  const sowPlant = ( event ) => {\n    if (chosenSeed) {\n      const newPlant = createPlant(event, chosenSeed)\n      setChosenseed(\"\")\n      setPlants( (prev) => {\n        return [newPlant, ...prev]\n      })\n      updateSeeds(-1)\n    }\n  }\n\n  const selectSeed = (selectedSeed, index) => {\n    const seed = seeds[index]\n    if (seeds[index].quantity > 0) {\n      console.log(\"In selectSeed\")\n      console.log(selectedSeed)\n      setChosenseed(selectedSeed)\n      setSeedindex(index)\n    }\n  }\n\n  const updateSeeds = (increment, index = seedIndex) => {\n    console.log(\"UPDATING SEEDS\")\n    console.log(seeds)\n    const updatedSeeds = [...seeds]\n    updatedSeeds[index].quantity += increment\n    setSeeds(updatedSeeds)\n    setSeedindex(null)\n  }\n\n  const removeBalloon = (index) => {\n    let removedBalloon = balloons[index]\n    removedBalloon.claimed = true\n    // setBalloons: creates a new array based on the previous one, removing the initial balloon, then adds a copy of the old balloon with 'claimed' set to true\n    setBalloons(\n      (prev) => {\n        return [prev.filter(balloon => balloon.id !== removedBalloon.id), removedBalloon]\n      }\n    )\n    console.log(balloons)\n  }\n\n  const checkAchievements = () => {\n    const fivePlants = plants.length % 5\n    const achievementCount = plants.length / 5 // how many multuples of five?\n    const startingSeeds = 2 // offset for the starting seeds\n    console.log(achievementCount)\n    console.log(achievementCount + startingSeeds)\n    console.log(seeds.length)\n    if (fivePlants === 0 && plants.length > 0 && seeds.length < (achievementCount + startingSeeds)) {\n      console.log(\"Achievement!\")\n      const newSeeds = calculateAchievement(seeds)\n      console.log(\"New seeds is\")\n      console.log(newSeeds)\n      setSeeds(newSeeds)\n\n    }\n  }\n\n  const toggleSeeds = () => {\n    setSeedlist(!seedList)\n  }\n\n\n  useEffect(() => {\n    //\n    console.log(\"Calling saveGarden\")\n    saveGarden(props.id, plants, props.world, props.worldChosen, seeds)\n    checkAchievements()\n  });\n\n\n  return (\n  <div className=\"App\">\n    <Canvas id=\"canvas\" camera={{ position: [0, 2, 3.5] }}>\n      <Camera />\n      <Suspense fallback={console.log(\"loading\")}>\n       <World\n       sowPlant={sowPlant}\n       position={[0, 0, 0]}\n       world={props.world}\n       seeds={seeds}\n        />\n       <SeedBox\n        chosenSeed={chosenSeed}\n        seedList={seedList}\n        selectSeed={selectSeed}\n        toggleSeeds={toggleSeeds}\n         />\n      {plants}\n      <Balloons\n      removeBalloon={removeBalloon}\n      updateSeeds={updateSeeds}\n      balloons={balloons}\n      seeds={seeds} />\n      <Sun />\n      <Firmament />\n      <Noticeboard today={props.today}/>\n     </Suspense>\n    </Canvas>\n    {props.worldChosen ? <Seeds chosenSeed={chosenSeed} /> : <Worlds className=\"App-header\" newWorld={props.newWorld} saveWorld={ props.saveWorld } />}\n  </div>\n  );\n}\n\nexport default SeedBank;\n"]},"metadata":{},"sourceType":"module"}