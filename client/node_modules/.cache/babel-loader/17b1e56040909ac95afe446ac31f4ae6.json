{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/CloudKeyBoard.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { Text, Billboard } from '@react-three/drei';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nconst alphabet = characters.split('');\nconst cloudKeyboardColours = {\n  text: \"#293241\",\n  outline: \"#b1b5c8\"\n};\nconst cloudFunctionButtonColours = {\n  text: \"#b1b5c8\",\n  outline: \"#293241\"\n};\nconst fontSize = 0.1;\nconst fontZ = 3;\n\nfunction CloudKeyBoard(props) {\n  _s();\n\n  const [sentenceArray, setSentencearray] = useState([]);\n  const [sentence, setSentence] = useState('');\n\n  const buildSentence = character => {\n    setSentencearray(prev => {\n      return [...prev, character];\n    });\n  };\n\n  const deleteCharacter = () => {\n    console.log(sentenceArray);\n    let previousLength = sentenceArray.length - 1;\n    console.log(previousLength);\n    setSentencearray(prev => {\n      return prev.filter((character, index) => index !== previousLength);\n    });\n    console.log(sentenceArray);\n  };\n\n  const submit = () => {\n    console.log(\"Final sentence\");\n    console.log(sentence);\n  };\n\n  useEffect(() => {\n    console.log(\"In useEffect\"); //\n\n    console.log(sentenceArray);\n    setSentence(sentenceArray.join(''));\n    console.log(sentence);\n  });\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [createCloudKeyboard(props, buildSentence, deleteCharacter, submit, sentence), \" />\"]\n  }, void 0, true);\n}\n\n_s(CloudKeyBoard, \"MtraisT9etQ3s6mcPxzdm9aAknA=\");\n\n_c = CloudKeyBoard;\n\nfunction createCloudKeyboard(props, buildSentence, deleteCharacter, sentence, submit) {\n  let cloudKeyboard = [];\n  let fontX = 0.5;\n  let fontY = 3;\n  let column = 1;\n\n  for (let char = 0; char < alphabet.length; char++) {\n    let character = alphabet[char];\n    fontX += 0.3;\n    cloudKeyboard.push( /*#__PURE__*/_jsxDEV(CloudKey, {\n      buildSentence: buildSentence,\n      character: character,\n      fontX: fontX,\n      fontY: fontY\n    }, createId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }, this));\n\n    if (column % 8 === 0) {\n      fontY -= 0.3;\n      fontX = 0.5;\n    }\n\n    column++;\n  }\n\n  cloudKeyboard.push( /*#__PURE__*/_jsxDEV(DeleteKey, {\n    deleteCharacter: deleteCharacter,\n    fontX: fontX + 0.3,\n    fontY: fontY\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this));\n  cloudKeyboard.push( /*#__PURE__*/_jsxDEV(DoneKey, {\n    submit: submit,\n    fontX: fontX + 0.6,\n    fontY: fontY\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 23\n  }, this));\n  cloudKeyboard.push( /*#__PURE__*/_jsxDEV(CloudText, {\n    sentence: sentence,\n    fontX: 0.8,\n    fontY: fontY - 0.3\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 23\n  }, this));\n  return cloudKeyboard;\n}\n\nfunction CloudKey(props) {\n  _s2();\n\n  const mesh = useRef();\n\n  const handleClick = (event, character) => {\n    event.stopPropagation();\n    console.log(character);\n    props.buildSentence(character);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event, props.character),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudKeyboardColours.outline,\n        color: cloudKeyboardColours.text,\n        children: props.character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CloudKey, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c2 = CloudKey;\n\nfunction DeleteKey(props) {\n  _s3();\n\n  const mesh = useRef();\n\n  const handleClick = event => {\n    event.stopPropagation();\n    props.deleteCharacter();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event, props.character),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudFunctionButtonColours.outline,\n        color: cloudFunctionButtonColours.text,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(DeleteKey, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c3 = DeleteKey;\n\nfunction DoneKey(props) {\n  _s4();\n\n  const mesh = useRef();\n\n  const handleClick = event => {\n    event.stopPropagation();\n    props.submit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event, props.character),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudFunctionButtonColours.outline,\n        color: cloudFunctionButtonColours.text,\n        children: \"''\\\\u2713'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 3\n  }, this);\n}\n\n_s4(DoneKey, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c4 = DoneKey;\n\nfunction CloudText(props) {\n  _s5();\n\n  const mesh = useRef();\n\n  const handleClick = (event, character) => {\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event, props.character),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudFunctionButtonColours.outline,\n        color: cloudFunctionButtonColours.text,\n        children: props.sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 9\n  }, this);\n}\n\n_s5(CloudText, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c5 = CloudText;\nexport default CloudKeyBoard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CloudKeyBoard\");\n$RefreshReg$(_c2, \"CloudKey\");\n$RefreshReg$(_c3, \"DeleteKey\");\n$RefreshReg$(_c4, \"DoneKey\");\n$RefreshReg$(_c5, \"CloudText\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/CloudKeyBoard.jsx"],"names":["Text","Billboard","React","useRef","useState","useEffect","createId","characters","alphabet","split","cloudKeyboardColours","text","outline","cloudFunctionButtonColours","fontSize","fontZ","CloudKeyBoard","props","sentenceArray","setSentencearray","sentence","setSentence","buildSentence","character","prev","deleteCharacter","console","log","previousLength","length","filter","index","submit","join","mesh","createCloudKeyboard","cloudKeyboard","fontX","fontY","column","char","push","CloudKey","handleClick","event","stopPropagation","DeleteKey","DoneKey","CloudText"],"mappings":"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","sourcesContent":["\nimport { Text, Billboard } from '@react-three/drei'\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions'\n\n\n\nconst characters = \"abcdefghijklmnopqrstuvwxyz0123456789\"\nconst alphabet = characters.split('')\nconst cloudKeyboardColours = {text: \"#293241\", outline: \"#b1b5c8\"}\nconst cloudFunctionButtonColours = {text: \"#b1b5c8\", outline: \"#293241\"}\nconst fontSize = 0.1\nconst fontZ = 3\n\n\n\n\nfunction CloudKeyBoard(props) {\n\n  const [sentenceArray, setSentencearray] = useState([])\n  const [sentence, setSentence] = useState('')\n\n  const buildSentence = (character) => {\n    setSentencearray( (prev) => {\n      return [...prev, character]\n    })\n  }\n\n  const deleteCharacter = () => {\n    console.log(sentenceArray)\n    let previousLength = sentenceArray.length - 1\n    console.log(previousLength)\n    setSentencearray (\n      (prev) => {\n        return prev.filter((character, index) => index !== previousLength)\n      }\n    )\n    console.log(sentenceArray)\n  }\n\n  const submit = () => {\n    console.log(\"Final sentence\")\n    console.log(sentence)\n  }\n\n  useEffect(() => {\n\n    console.log(\"In useEffect\")\n    //\n    console.log(sentenceArray)\n    setSentence(sentenceArray.join(''))\n    console.log(sentence)\n  });\n\n\n  const mesh = useRef()\n\n\n\n  return (\n  <>\n  {createCloudKeyboard(props, buildSentence, deleteCharacter, submit, sentence) } />\n  </>\n\n)\n}\n\nfunction createCloudKeyboard(props, buildSentence, deleteCharacter, sentence, submit) {\n  let cloudKeyboard = []\n  let fontX = 0.5\n  let fontY = 3\n  let column = 1\n  for (let char = 0; char < alphabet.length; char++) {\n    let character = alphabet[char]\n    fontX += 0.3\n    cloudKeyboard.push( < CloudKey key={createId()} buildSentence={buildSentence} character={character} fontX={fontX} fontY={fontY} /> )\n    if (column % 8 === 0) {\n      fontY -= 0.3\n      fontX = 0.5\n    }\n    column++\n\n  }\n  cloudKeyboard.push( < DeleteKey key={createId()} deleteCharacter={deleteCharacter} fontX={fontX + 0.3} fontY={fontY} /> )\n  cloudKeyboard.push( < DoneKey key={createId()} submit={submit} fontX={fontX + 0.6} fontY={fontY} /> )\n\n  cloudKeyboard.push( < CloudText key={createId()} sentence={sentence} fontX={0.8} fontY={fontY - 0.3} /> )\n\n  return cloudKeyboard\n\n\n}\n\nfunction CloudKey(props) {\n\n    const mesh = useRef()\n\n    const handleClick = (event, character) => {\n      event.stopPropagation()\n      console.log(character)\n      props.buildSentence(character)\n    }\n\n    return (\n        <mesh\n          {...props}\n          ref={mesh}\n          onClick={(event) => handleClick(event, props.character)}\n          >\n          <Billboard\n          follow={true}\n          lockX={false}\n          lockY={false}\n          lockZ={false} >\n          < Text\n          fontSize={fontSize}\n          position={[props.fontX, props.fontY, fontZ]}\n          outlineWidth={fontSize}\n          outlineColor={cloudKeyboardColours.outline}\n          color={cloudKeyboardColours.text}\n           >\n           {props.character}\n          </ Text>\n          </ Billboard>\n        </mesh>\n        )\n      }\n\nfunction DeleteKey(props) {\n\nconst mesh = useRef()\n\nconst handleClick = (event) => {\nevent.stopPropagation()\nprops.deleteCharacter()\n}\n\nreturn (\n  <mesh\n    {...props}\n    ref={mesh}\n    onClick={(event) => handleClick(event, props.character)}\n    >\n    <Billboard\n    follow={true}\n    lockX={false}\n    lockY={false}\n    lockZ={false} >\n    < Text\n    fontSize={fontSize}\n    position={[props.fontX, props.fontY, fontZ]}\n    outlineWidth={fontSize}\n    outlineColor={cloudFunctionButtonColours.outline}\n    color={cloudFunctionButtonColours.text}\n     >\n     X\n    </ Text>\n    </ Billboard>\n  </mesh>\n  )\n}\n\nfunction DoneKey(props) {\n\nconst mesh = useRef()\n\nconst handleClick = (event) => {\nevent.stopPropagation()\nprops.submit()\n}\n\nreturn (\n  <mesh\n    {...props}\n    ref={mesh}\n    onClick={(event) => handleClick(event, props.character)}\n    >\n    <Billboard\n    follow={true}\n    lockX={false}\n    lockY={false}\n    lockZ={false} >\n    < Text\n    fontSize={fontSize}\n    position={[props.fontX, props.fontY, fontZ]}\n    outlineWidth={fontSize}\n    outlineColor={cloudFunctionButtonColours.outline}\n    color={cloudFunctionButtonColours.text}\n     >\n     ''\\u2713'\n    </ Text>\n    </ Billboard>\n  </mesh>\n  )\n}\n\nfunction CloudText(props) {\n\n    const mesh = useRef()\n\n    const handleClick = (event, character) => {\n      event.stopPropagation()\n    }\n\n    return (\n        <mesh\n          {...props}\n          ref={mesh}\n          onClick={(event) => handleClick(event, props.character)}\n          >\n          <Billboard\n          follow={true}\n          lockX={false}\n          lockY={false}\n          lockZ={false} >\n          < Text\n          fontSize={fontSize}\n          position={[props.fontX, props.fontY, fontZ]}\n          outlineWidth={fontSize}\n          outlineColor={cloudFunctionButtonColours.outline}\n          color={cloudFunctionButtonColours.text}\n           >\n           {props.sentence}\n          </ Text>\n          </ Billboard>\n        </mesh>\n        )\n      }\n\nexport default CloudKeyBoard\n"]},"metadata":{},"sourceType":"module"}