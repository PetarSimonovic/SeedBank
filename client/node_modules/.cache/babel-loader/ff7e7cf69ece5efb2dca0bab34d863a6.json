{"ast":null,"code":"import api from '../api';\nimport { setDate } from './'; // strips out react components from the state garden array and saves plant props as an object that's easy to parse\n// Needs error handling!\n\nexport default async function saveGarden(id, newWorld, chosen) {\n  let savedGarden = extractPlants(plants);\n  const world = {\n    \"world\": JSON.stringify(newWorld)\n  };\n  const worldChosen = {\n    \"worldChosen\": chosen\n  };\n  const date = setDate();\n  const lastLogin = {\n    \"lastLogin\": date.stamp\n  };\n  const payload = {\n    garden,\n    world,\n    worldChosen,\n    lastLogin\n  };\n  console.log(payload);\n  await api.updateGarden(id, payload).then(res => {\n    console.log(res);\n    console.log('Garden updated successfully');\n  });\n}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/SaveGarden.js"],"names":["api","setDate","saveGarden","id","newWorld","chosen","savedGarden","extractPlants","plants","world","JSON","stringify","worldChosen","date","lastLogin","stamp","payload","garden","console","log","updateGarden","then","res"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,IAAxB,C,CAEA;AACA;;AAGA,eAAe,eAAeC,UAAf,CAA0BC,EAA1B,EAA8BC,QAA9B,EAAwCC,MAAxC,EAAgD;AAC7D,MAAIC,WAAW,GAAGC,aAAa,CAACC,MAAD,CAA/B;AACA,QAAMC,KAAK,GAAG;AAAC,aAAUC,IAAI,CAACC,SAAL,CAAeP,QAAf;AAAX,GAAd;AACA,QAAMQ,WAAW,GAAG;AAAC,mBAAgBP;AAAjB,GAApB;AACA,QAAMQ,IAAI,GAAGZ,OAAO,EAApB;AACA,QAAMa,SAAS,GAAI;AAAE,iBAAcD,IAAI,CAACE;AAArB,GAAnB;AACA,QAAMC,OAAO,GAAG;AAACC,IAAAA,MAAD;AAASR,IAAAA,KAAT;AAAgBG,IAAAA,WAAhB;AAA6BE,IAAAA;AAA7B,GAAhB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,QAAMhB,GAAG,CAACoB,YAAJ,CAAiBjB,EAAjB,EAAqBa,OAArB,EAA8BK,IAA9B,CAAmCC,GAAG,IAAI;AAC1CJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,GAHG,CAAN;AAID","sourcesContent":["import api from '../api';\nimport { setDate } from './'\n\n// strips out react components from the state garden array and saves plant props as an object that's easy to parse\n// Needs error handling!\n\n\nexport default async function saveGarden(id, newWorld, chosen) {\n  let savedGarden = extractPlants(plants)\n  const world = {\"world\" : JSON.stringify(newWorld)}\n  const worldChosen = {\"worldChosen\" : chosen}\n  const date = setDate()\n  const lastLogin  = { \"lastLogin\" : date.stamp }\n  const payload = {garden, world, worldChosen, lastLogin}\n  console.log(payload)\n  await api.updateGarden(id, payload).then(res => {\n        console.log(res)\n        console.log('Garden updated successfully')\n    })\n}\n"]},"metadata":{},"sourceType":"module"}