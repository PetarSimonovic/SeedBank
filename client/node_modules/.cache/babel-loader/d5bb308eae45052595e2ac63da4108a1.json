{"ast":null,"code":"import _objectSpread from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useRef,useState,useMemo}from\"react\";import{useFrame}from\"@react-three/fiber\";import{createId}from'../functions';import{Grass}from'./';import*as THREE from\"three\";// The plane on which plants grow\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Earth(props){// This reference will give us direct access to the mesh\nvar world=props.world;var mesh=useRef();console.log(\"WORLD in EARTH is\");console.log(world);// Set up state for the hovered and active state\n// Rotate mesh every frame, this is outside of React without overhead\n// useFrame(() => (mesh.current.rotation.y += 0.002))\nvar handleClick=function handleClick(event){event.stopPropagation();};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,onClick:function onClick(event){return handleClick(event);},children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:world.earth.geometry}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:world.earth.colour}),createStalactites(world)]}))});}function createStalactites(world){console.log(\"In create stalactites\");console.log(world);var createdStalactites=[];for(var index=0;index<world.stalactites.length;index++){var stalactite=world.stalactites[index];createdStalactites.push(/*#__PURE__*/_jsx(Stalactite,{args:stalactite.geometry,position:stalactite.position,colour:stalactite.colour},createId()));}return createdStalactites;}function Stalactite(props){var mesh=useRef();return/*#__PURE__*/_jsx(\"group\",{children:/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:props.args}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:props.colour})]}))});}export default Earth;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Earth.jsx"],"names":["React","useRef","useState","useMemo","useFrame","createId","Grass","THREE","Earth","props","world","mesh","console","log","handleClick","event","stopPropagation","earth","geometry","colour","createStalactites","createdStalactites","index","stalactites","length","stalactite","push","position","Stalactite","args"],"mappings":"4OAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,OAAlC,KAAiD,OAAjD,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,OAASC,KAAT,KAAsB,IAAtB,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CAGA;6IAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACpB;AACA,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACC,KAApB,CACA,GAAMC,CAAAA,IAAI,CAAGV,MAAM,EAAnB,CACAW,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACA;AACA;AACA;AAEA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7BA,KAAK,CAACC,eAAN,GACD,CAFD,CAKA,mBACE,sCACA,4CACMP,KADN,MAEE,GAAG,CAAEE,IAFP,CAGE,KAAK,CAAE,CAHT,CAIE,OAAO,CAAE,iBAACI,KAAD,QAAWD,CAAAA,WAAW,CAACC,KAAD,CAAtB,EAJX,wBAME,yBAAkB,IAAI,CAAEL,KAAK,CAACO,KAAN,CAAYC,QAApC,EANF,cAOE,yBAAkB,KAAK,CAAER,KAAK,CAACO,KAAN,CAAYE,MAArC,EAPF,CAQGC,iBAAiB,CAACV,KAAD,CARpB,IADA,EADF,CAcD,CAED,QAASU,CAAAA,iBAAT,CAA2BV,KAA3B,CAAkC,CAChCE,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACA,GAAMW,CAAAA,kBAAkB,CAAG,EAA3B,CAEA,IAAK,GAAIC,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGZ,KAAK,CAACa,WAAN,CAAkBC,MAA9C,CAAsDF,KAAK,EAA3D,CAA+D,CAC7D,GAAMG,CAAAA,UAAU,CAAGf,KAAK,CAACa,WAAN,CAAkBD,KAAlB,CAAnB,CACAD,kBAAkB,CAACK,IAAnB,cAAyB,KAAC,UAAD,EAA6B,IAAI,CAAED,UAAU,CAACP,QAA9C,CAAwD,QAAQ,CAAEO,UAAU,CAACE,QAA7E,CAAuF,MAAM,CAAEF,UAAU,CAACN,MAA1G,EAAiBd,QAAQ,EAAzB,CAAzB,EACD,CAED,MAAOgB,CAAAA,kBAAP,CACD,CAED,QAASO,CAAAA,UAAT,CAAoBnB,KAApB,CAA2B,CACzB,GAAME,CAAAA,IAAI,CAAGV,MAAM,EAAnB,CAEA,mBACE,oCACA,4CACMQ,KADN,MAEE,GAAG,CAAEE,IAFP,CAGE,KAAK,CAAE,CAHT,wBAKE,yBAAkB,IAAI,CAAEF,KAAK,CAACoB,IAA9B,EALF,cAME,yBAAkB,KAAK,CAAEpB,KAAK,CAACU,MAA/B,EANF,IADA,EADF,CAYD,CAED,cAAeX,CAAAA,KAAf","sourcesContent":["import React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions'\nimport { Grass } from './'\nimport * as THREE from \"three\";\n\n\n// The plane on which plants grow\n\nfunction Earth(props) {\n  // This reference will give us direct access to the mesh\n  const world = props.world\n  const mesh = useRef()\n  console.log(\"WORLD in EARTH is\")\n  console.log(world)\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n  }\n\n\n  return (\n    <>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      >\n      <cylinderGeometry args={world.earth.geometry}  />\n      <meshToonMaterial color={world.earth.colour} />\n      {createStalactites(world)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createStalactites(world) {\n  console.log(\"In create stalactites\")\n  console.log(world)\n  const createdStalactites = []\n\n  for (let index = 0; index < world.stalactites.length; index++) {\n    const stalactite = world.stalactites[index]\n    createdStalactites.push( <Stalactite key={createId()} args={stalactite.geometry} position={stalactite.position} colour={stalactite.colour} />)\n  }\n\n  return createdStalactites\n}\n\nfunction Stalactite(props) {\n  const mesh = useRef()\n\n  return (\n    <group>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      >\n      <cylinderGeometry args={props.args} />\n      <meshToonMaterial color={props.colour}  />\n    </mesh>\n    </group>\n  )\n}\n\nexport default Earth\n"]},"metadata":{},"sourceType":"module"}