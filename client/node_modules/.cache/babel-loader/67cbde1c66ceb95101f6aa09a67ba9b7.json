{"ast":null,"code":"import _objectSpread from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useMemo}from\"react\";import{useFrame}from\"@react-three/fiber\";import*as THREE from\"three\";// The plane on which plants grow\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Grass(props){// This reference will give us direct access to the mesh\nvar mesh=useRef();// Set up state for the hovered and active state\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),hovered=_useState2[0],setHover=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),active=_useState4[0],setActive=_useState4[1];// Rotate mesh every frame, this is outside of React without overhead\n// useFrame(() => (mesh.current.rotation.y += 0.002))\nreturn/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,onClick:function onClick(event){return props.sowPlant(event);},onPointerOver:function onPointerOver(event){return setHover(true);},onPointerOut:function onPointerOut(event){return setHover(false);},children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:props.args}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:'green'})]}));}export default Grass;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Grass.jsx"],"names":["React","useRef","useState","useMemo","useFrame","THREE","Grass","props","mesh","hovered","setHover","active","setActive","event","sowPlant","args"],"mappings":"ydAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,OAAlC,KAAiD,OAAjD,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CAIA;wFAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACpB;AACA,GAAMC,CAAAA,IAAI,CAAGP,MAAM,EAAnB,CACA;AACA,cAA4BC,QAAQ,CAAC,KAAD,CAApC,wCAAOO,OAAP,eAAgBC,QAAhB,eACA,eAA4BR,QAAQ,CAAC,KAAD,CAApC,yCAAOS,MAAP,eAAeC,SAAf,eACA;AACA;AAGA,mBACE,4CACML,KADN,MAEE,GAAG,CAAEC,IAFP,CAGE,KAAK,CAAE,CAHT,CAIE,OAAO,CAAE,iBAACK,KAAD,QAAWN,CAAAA,KAAK,CAACO,QAAN,CAAeD,KAAf,CAAX,EAJX,CAKE,aAAa,CAAE,uBAACA,KAAD,QAAWH,CAAAA,QAAQ,CAAC,IAAD,CAAnB,EALjB,CAME,YAAY,CAAE,sBAACG,KAAD,QAAWH,CAAAA,QAAQ,CAAC,KAAD,CAAnB,EANhB,wBAOE,yBAAkB,IAAI,CAAEH,KAAK,CAACQ,IAA9B,EAPF,cAQE,yBAAkB,KAAK,CAAE,OAAzB,EARF,IADF,CAYD,CAED,cAAeT,CAAAA,KAAf","sourcesContent":["import React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\n\n\n\n// The plane on which plants grow\n\nfunction Grass(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => props.sowPlant(event)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <cylinderGeometry args={props.args} />\n      <meshToonMaterial color={'green'} />\n    </mesh>\n  )\n}\n\nexport default Grass\n"]},"metadata":{},"sourceType":"module"}