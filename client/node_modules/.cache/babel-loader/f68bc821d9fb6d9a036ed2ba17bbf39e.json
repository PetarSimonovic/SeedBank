{"ast":null,"code":"import _regeneratorRuntime from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import api from'../api';import{Friend}from'./';export default function makeFriends(_x,_x2,_x3,_x4){return _makeFriends.apply(this,arguments);}function _makeFriends(){_makeFriends=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(myId,myName,friendName,myWorld){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return api.getUser(friendName).then(function(res){var friendId=res.data.data._id;var friendWorld=res.data.data.world;var friendName=res.data.data.name;var me=new Friend(friendId,myId,myName,JSON.stringify(myWorld));// my details to be saved in friend's db\n// my details to be saved in friend's db\nvar friend=new Friend(myId,friendId,friendName,friendWorld);// friend's details to be saved in my db\n// friend's details to be saved in my db\napi.addFriends(me).then(function(res){console.log(\"ME \".concat(me.friendName,\" is friends with \").concat(friend.friendName));});api.addFriends(friend).then(function(res){console.log(\"\\\"FRIEND \\\"\".concat(friend.friendName,\" is friends with \").concat(me.friendName));});});case 2:case\"end\":return _context.stop();}}},_callee);}));return _makeFriends.apply(this,arguments);}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/MakeFriends.js"],"names":["api","Friend","makeFriends","myId","myName","friendName","myWorld","getUser","then","res","friendId","data","_id","friendWorld","world","name","me","JSON","stringify","friend","addFriends","console","log"],"mappings":"udAAA,MAAOA,CAAAA,GAAP,KAAgB,QAAhB,CACA,OAASC,MAAT,KAAuB,IAAvB,CAEA,uBAA8BC,CAAAA,WAA9B,4D,6FAAe,iBAA2BC,IAA3B,CAAiCC,MAAjC,CAAyCC,UAAzC,CAAqDC,OAArD,wIAIPN,CAAAA,GAAG,CAACO,OAAJ,CAAYF,UAAZ,EAAwBG,IAAxB,CAA6B,SAAAC,GAAG,CAAI,CACxC,GAAMC,CAAAA,QAAQ,CAAGD,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,GAA/B,CACA,GAAMC,CAAAA,WAAW,CAAGJ,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcG,KAAlC,CACA,GAAMT,CAAAA,UAAU,CAAGI,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcI,IAAjC,CACA,GAAMC,CAAAA,EAAE,CAAG,GAAIf,CAAAA,MAAJ,CAAWS,QAAX,CAAqBP,IAArB,CAA2BC,MAA3B,CAAmCa,IAAI,CAACC,SAAL,CAAeZ,OAAf,CAAnC,CAAX,CAAuE;AAAA;AACvE,GAAMa,CAAAA,MAAM,CAAG,GAAIlB,CAAAA,MAAJ,CAAWE,IAAX,CAAiBO,QAAjB,CAA2BL,UAA3B,CAAuCQ,WAAvC,CAAf,CAAmE;AAAA;AACnEb,GAAG,CAACoB,UAAJ,CAAeJ,EAAf,EAAmBR,IAAnB,CAAwB,SAAAC,GAAG,CAAI,CAACY,OAAO,CAACC,GAAR,cAAkBN,EAAE,CAACX,UAArB,6BAAmDc,MAAM,CAACd,UAA1D,GAAyE,CAAzG,EACAL,GAAG,CAACoB,UAAJ,CAAeD,MAAf,EAAuBX,IAAvB,CAA4B,SAAAC,GAAG,CAAI,CAACY,OAAO,CAACC,GAAR,sBAAwBH,MAAM,CAACd,UAA/B,6BAA6DW,EAAE,CAACX,UAAhE,GAA+E,CAAnH,EAED,CATK,CAJO,uD","sourcesContent":["import api from '../api';\nimport { Friend } from './'\n\nexport default async function makeFriends(myId, myName, friendName, myWorld) {\n\n\n\n  await api.getUser(friendName).then(res => {\n    const friendId = res.data.data._id\n    const friendWorld = res.data.data.world\n    const friendName = res.data.data.name\n    const me = new Friend(friendId, myId, myName, JSON.stringify(myWorld)) // my details to be saved in friend's db\n    const friend = new Friend(myId, friendId, friendName, friendWorld) // friend's details to be saved in my db\n    api.addFriends(me).then(res => {console.log(`ME ${me.friendName} is friends with ${friend.friendName}`) })\n    api.addFriends(friend).then(res => {console.log(`\"FRIEND \"${friend.friendName} is friends with ${me.friendName}`) })\n\n  })\n}\n"]},"metadata":{},"sourceType":"module"}