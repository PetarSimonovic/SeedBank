{"ast":null,"code":"import { sample } from '../functions';\nconst worldRadiusTop = 2.3;\nconst worldRadiusBottom = 1;\nconst worldScaler = 1.1;\nconst discHeight = 0.3;\nconst rockHeight = 0.6;\nexport default class World {\n  constructor(grass = createGrass(), earth = createEarth(), stalactites = createStalactites()) {\n    this.grass = grass;\n    this.earth = earth;\n    this.stalactites = stalactites;\n  }\n\n}\n\nfunction createGrass() {\n  return {\n    geometry: [worldRadiusTop, worldRadiusBottom, discHeight, 25],\n    colour: '#5AAB61'\n  }; // cylinder: [radiusTop, radiusBottom, height, radialSegments]\n}\n\nfunction createEarth() {\n  return {\n    geometry: [worldRadiusTop * worldScaler, worldRadiusBottom, rockHeight, 9],\n    colour: '#8a817c'\n  }; // cylinder: [radiusTop, radiusBottom, height, radialSegments]\n}\n\nfunction createStalactites() {\n  const stalactites = [];\n  let offset = 0;\n\n  for (let stalactite = 0; stalactite < 10; stalactite++) {\n    stalactites.push(generateStalactite(offset));\n    offset += 0.1;\n  }\n\n  return stalactites;\n}\n\nfunction terrainRandomiser(range) {\n  return Math.random() * (range.max - range.min) + range.min;\n}\n\nfunction earthColour() {\n  const colours = ['#6C6460', '#8a817c', '#6c757d'];\n  return sample(colours);\n}\n\nfunction generateStalactite(offset) {\n  return {\n    geometry: stalactiteGeometry(offset),\n    position: stalactitePosition(offset),\n    colour: earthColour()\n  };\n}\n\nfunction stalactiteGeometry(offset) {\n  const stalactiteMax = {\n    max: 2 - offset,\n    min: 1 - offset\n  };\n  const stalactiteMin = {\n    max: 0.8 - offset,\n    min: 0.05\n  };\n  const stalactiteDepth = {\n    max: 2.3,\n    min: 1\n  };\n  const stalactiteSegments = {\n    max: 12,\n    min: 6\n  };\n  return [terrainRandomiser(stalactiteMax), terrainRandomiser(stalactiteMin), terrainRandomiser(stalactiteDepth), terrainRandomiser(stalactiteSegments)];\n}\n\nfunction stalactitePosition(offset) {\n  const stalactiteY = {\n    max: 0.2 + offset,\n    min: 1.5 + offset\n  };\n  const stalactiteXZ = {\n    max: 0.8,\n    min: -0.8\n  };\n  return [terrainRandomiser(stalactiteXZ), -terrainRandomiser(stalactiteY), terrainRandomiser(stalactiteXZ)];\n}\n/*\n\nOriginal stalactite settings:\n\nEarth disc:\n<cylinderGeometry args={[1.65, 1, 0.68, 9]}  />\n<meshToonMaterial color={'#8a817c'} />\n\nfunction createStalactites() {\n  return [\n    <Stalactite args={[1.6, 0.8, 1, 8]} position={[0.1, -0.28, 0, ]} colour={'#6c757d'}/>,\n    <Stalactite args={[1.3, 0.7, 1, 7]} position={[0.12, -0.5, 0.1]} colour={'#8a817c'} />,\n    <Stalactite args={[1.4, 0.55, 1.3, 4]} position={[-0, -0.7, 0.05]} colour={'#6c757d'} />,\n    <Stalactite args={[0.8, 0.3, 2, 8]} position={[0, -0.9, -0.2]} colour={'#6c757d'} />,\n    <Stalactite args={[0.4, 0.01, 2, 4]} position={[0, -1.9, -0.5]} colour={'#6c757d'} />,\n    <Stalactite args={[0.4, 0.03, 2, 12]} position={[0, -0.9, 1.0]} colour={'#6c757d'} />,\n    <Stalactite args={[0.8, 0.2, 1, 8]} position={[-0, -1.3, .40]} colour={'#8a817c'} />,\n    <Stalactite args={[0.7, 0.1, 1, 9]} position={[-0, -1.9, 0.30]} colour={'#6c757d'}/>,\n    <Stalactite args={[0.4, 0.01, 3, 8]} position={[0, -2.3, 0]} colour={'#8a817c'} />,\n\n\n\n  ]\n}\n*/","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/gameObjects/World.js"],"names":["sample","worldRadiusTop","worldRadiusBottom","worldScaler","discHeight","rockHeight","World","constructor","grass","createGrass","earth","createEarth","stalactites","createStalactites","geometry","colour","offset","stalactite","push","generateStalactite","terrainRandomiser","range","Math","random","max","min","earthColour","colours","stalactiteGeometry","position","stalactitePosition","stalactiteMax","stalactiteMin","stalactiteDepth","stalactiteSegments","stalactiteY","stalactiteXZ"],"mappings":"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","sourcesContent":["import {sample} from '../functions'\n\n\nconst worldRadiusTop = 2.3\nconst worldRadiusBottom = 1\nconst worldScaler = 1.1\nconst discHeight = 0.3\nconst rockHeight = 0.6\n\nexport default class World {\n\n  constructor(grass = createGrass(), earth = createEarth(), stalactites = createStalactites())  {\n    this.grass = grass\n    this.earth = earth\n    this.stalactites = stalactites\n  }\n\n}\n\nfunction createGrass() {\n  return { geometry: [worldRadiusTop, worldRadiusBottom, discHeight, 25], colour: '#5AAB61'} // cylinder: [radiusTop, radiusBottom, height, radialSegments]\n}\n\nfunction createEarth() {\n  return { geometry: [worldRadiusTop * worldScaler, worldRadiusBottom, rockHeight, 9], colour: '#8a817c' } // cylinder: [radiusTop, radiusBottom, height, radialSegments]\n\n}\n\nfunction createStalactites() {\n  const stalactites = []\n  let offset = 0\n  for (let stalactite = 0; stalactite < 10; stalactite++) {\n    stalactites.push(generateStalactite(offset))\n    offset += 0.1\n  }\n  return stalactites\n}\n\nfunction terrainRandomiser(range) {\n  return Math.random() * (range.max - range.min) + range.min\n}\n\nfunction earthColour() {\n  const colours = [\n    '#6C6460',\n    '#8a817c',\n    '#6c757d',\n  ]\n\n    return sample(colours)\n}\n\nfunction generateStalactite(offset) {\n  return { geometry: stalactiteGeometry(offset), position: stalactitePosition(offset), colour: earthColour() }\n}\n\nfunction stalactiteGeometry(offset) {\n\n  const stalactiteMax = {max: 2 - offset, min: 1 - offset}\n  const stalactiteMin = {max: 0.8 - offset, min: 0.05}\n  const stalactiteDepth = {max: 2.3, min: 1}\n  const stalactiteSegments = {max: 12, min: 6}\n\n  return [\n    terrainRandomiser(stalactiteMax),\n    terrainRandomiser(stalactiteMin),\n    terrainRandomiser(stalactiteDepth),\n    terrainRandomiser(stalactiteSegments)\n  ]\n\n}\n\nfunction stalactitePosition(offset) {\n\n  const stalactiteY = {max: 0.2 + offset, min: 1.5 + offset }\n  const stalactiteXZ = {max: 0.8, min: -0.8 }\n  return [\n    terrainRandomiser(stalactiteXZ),\n    -terrainRandomiser(stalactiteY),\n    terrainRandomiser(stalactiteXZ)\n  ]\n\n}\n\n\n\n\n\n\n\n/*\n\nOriginal stalactite settings:\n\nEarth disc:\n<cylinderGeometry args={[1.65, 1, 0.68, 9]}  />\n<meshToonMaterial color={'#8a817c'} />\n\nfunction createStalactites() {\n  return [\n    <Stalactite args={[1.6, 0.8, 1, 8]} position={[0.1, -0.28, 0, ]} colour={'#6c757d'}/>,\n    <Stalactite args={[1.3, 0.7, 1, 7]} position={[0.12, -0.5, 0.1]} colour={'#8a817c'} />,\n    <Stalactite args={[1.4, 0.55, 1.3, 4]} position={[-0, -0.7, 0.05]} colour={'#6c757d'} />,\n    <Stalactite args={[0.8, 0.3, 2, 8]} position={[0, -0.9, -0.2]} colour={'#6c757d'} />,\n    <Stalactite args={[0.4, 0.01, 2, 4]} position={[0, -1.9, -0.5]} colour={'#6c757d'} />,\n    <Stalactite args={[0.4, 0.03, 2, 12]} position={[0, -0.9, 1.0]} colour={'#6c757d'} />,\n    <Stalactite args={[0.8, 0.2, 1, 8]} position={[-0, -1.3, .40]} colour={'#8a817c'} />,\n    <Stalactite args={[0.7, 0.1, 1, 9]} position={[-0, -1.9, 0.30]} colour={'#6c757d'}/>,\n    <Stalactite args={[0.4, 0.01, 3, 8]} position={[0, -2.3, 0]} colour={'#8a817c'} />,\n\n\n\n  ]\n}\n*/\n"]},"metadata":{},"sourceType":"module"}