{"ast":null,"code":"import api from '../api';\nimport { sendBalloon } from './';\nexport default async function makeFriendRequest(friendUsername, myId, myName) {\n  await api.getUser(friendUsername).then(res => {\n    console.log(myId);\n    console.log(res.data.data.name);\n    const friendId = res.data.data._id;\n    console.log(res.data.data._id);\n    const balloons = res.data.data.balloons;\n    const balloonContents = {\n      type: 'friendRequest',\n      from: myName,\n      message: `${myName} wants to connect`\n    };\n    balloons.push(ballonContents);\n    console.log(balloons);\n    sendBalloon(friendId, balloonContents);\n  }).catch(console.log(\"no user\"));\n}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/MakeFriendRequest.js"],"names":["api","sendBalloon","makeFriendRequest","friendUsername","myId","myName","getUser","then","res","console","log","data","name","friendId","_id","balloons","balloonContents","type","from","message","push","ballonContents","catch"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,WAAT,QAA4B,IAA5B;AAGA,eAAe,eAAeC,iBAAf,CAAiCC,cAAjC,EAAiDC,IAAjD,EAAuDC,MAAvD,EAA+D;AAC5E,QAAML,GAAG,CAACM,OAAJ,CAAYH,cAAZ,EAA4BI,IAA5B,CAAiCC,GAAG,IAAI;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,IAA1B;AACA,UAAMC,QAAQ,GAAGL,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcG,GAA/B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcG,GAA1B;AACA,UAAMC,QAAQ,GAAGP,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcI,QAA/B;AACA,UAAMC,eAAe,GAAG;AACtBC,MAAAA,IAAI,EAAE,eADgB;AAEtBC,MAAAA,IAAI,EAAEb,MAFgB;AAGtBc,MAAAA,OAAO,EAAG,GAAEd,MAAO;AAHG,KAAxB;AAKAU,IAAAA,QAAQ,CAACK,IAAT,CAAcC,cAAd;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAd,IAAAA,WAAW,CAACY,QAAD,EAAWG,eAAX,CAAX;AACD,GAdK,EAcHM,KAdG,CAcGb,OAAO,CAACC,GAAR,CAAY,SAAZ,CAdH,CAAN;AAeD","sourcesContent":["import api from '../api';\nimport { sendBalloon } from './'\n\n\nexport default async function makeFriendRequest(friendUsername, myId, myName) {\n  await api.getUser(friendUsername).then(res => {\n    console.log(myId)\n    console.log(res.data.data.name)\n    const friendId = res.data.data._id\n    console.log(res.data.data._id)\n    const balloons = res.data.data.balloons\n    const balloonContents = {\n      type: 'friendRequest',\n      from: myName,\n      message: `${myName} wants to connect`\n    }\n    balloons.push(ballonContents)\n    console.log(balloons)\n    sendBalloon(friendId, balloonContents)\n  }).catch(console.log(\"no user\"))\n}\n"]},"metadata":{},"sourceType":"module"}