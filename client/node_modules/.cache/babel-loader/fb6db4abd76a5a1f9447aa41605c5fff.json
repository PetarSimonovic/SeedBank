{"ast":null,"code":"import Plant from './Plant.js';\nexport default function parseGarden(garden, today) {\n  console.log(\"Garden loaded\");\n  let parsedGarden = [];\n\n  for (let plant = 0; plant < garden.length; plant++) {\n    let parsedPlant = Object.assign(new Plant(), garden[plant]);\n    console.log(parsedPlant.date);\n\n    if (today > parsedPlant.date && parsedPlant.planted) {\n      let newGrowth = today - parsedPlant.date;\n      console.log(parsedPlant.date);\n      console.log(\"newgrowth is \" + newGrowth);\n      parsedPlant.grow(newGrowth);\n    }\n\n    parsedGarden.push(parsedPlant);\n  }\n\n  return parsedGarden;\n} //module.exports = parseGarden;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/ParseGarden.js"],"names":["Plant","parseGarden","garden","today","console","log","parsedGarden","plant","length","parsedPlant","Object","assign","date","planted","newGrowth","grow","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAGA,eAAe,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,MAAIC,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGL,MAAM,CAACM,MAAnC,EAA2CD,KAAK,EAAhD,EAAsD;AACpD,QAAIE,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAIX,KAAJ,EAAd,EAAyBE,MAAM,CAACK,KAAD,CAA/B,CAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYI,WAAW,CAACG,IAAxB;;AACA,QAAIT,KAAK,GAAGM,WAAW,CAACG,IAApB,IAA4BH,WAAW,CAACI,OAA5C,EAAqD;AACnD,UAAIC,SAAS,GAAIX,KAAK,GAAGM,WAAW,CAACG,IAArC;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYI,WAAW,CAACG,IAAxB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBS,SAA9B;AACAL,MAAAA,WAAW,CAACM,IAAZ,CAAiBD,SAAjB;AACD;;AACDR,IAAAA,YAAY,CAACU,IAAb,CAAkBP,WAAlB;AACD;;AACD,SAAOH,YAAP;AACD,C,CAED","sourcesContent":["import Plant from './Plant.js'\n\n\nexport default function parseGarden(garden, today) {\n  console.log(\"Garden loaded\")\n  let parsedGarden = []\n  for (let plant = 0; plant < garden.length; plant ++ ) {\n    let parsedPlant = Object.assign(new Plant, garden[plant])\n    console.log(parsedPlant.date)\n    if (today > parsedPlant.date && parsedPlant.planted) {\n      let newGrowth = (today - parsedPlant.date)\n      console.log(parsedPlant.date)\n      console.log(\"newgrowth is \" + newGrowth)\n      parsedPlant.grow(newGrowth)\n    }\n    parsedGarden.push(parsedPlant)\n  }\n  return parsedGarden\n}\n\n//module.exports = parseGarden;\n"]},"metadata":{},"sourceType":"module"}