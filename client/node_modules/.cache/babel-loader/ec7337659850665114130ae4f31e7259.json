{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/app/index.js\";\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { NavBar, SignUpButton, Garden, Plant } from '../components';\nimport { SignUp, LogIn } from '../pages';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      userID: 0,\n      garden: [],\n      date: this.setDate()\n    };\n    this.setUser = this.setUser.bind(this);\n    this.connecToServer = this.connecToServer.bind(this);\n  }\n\n  componentDidMount() {\n    this.connecToServer();\n  }\n\n  connecToServer() {\n    fetch('/');\n  }\n\n  setUser(userName, id, garden) {\n    console.log(\"SETTING USER\");\n    this.setState({\n      userName: userName,\n      id: id,\n      garden: this.parseGarden(garden)\n    });\n    console.log(\"User is \" + this.state.id + \" \" + this.state.userName);\n  }\n\n  setDate() {\n    const date = new Date();\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    return Number(`${year}${month}${day}`);\n  }\n\n  parseGarden(garden) {\n    console.log(\"Garden loaded\");\n    let parsedGarden = [];\n\n    for (let plant = 0; plant < garden.length; plant++) {\n      let parsedPlant = Object.assign(new Plant(), garden[plant]);\n\n      if (this.state.date > parsedPlant.date) {\n        parsedPlant.grow();\n      }\n\n      parsedGarden.push(parsedPlant);\n    }\n\n    return parsedGarden;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        user: this.state.userName,\n        setUser: this.setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), this.state.userName ? /*#__PURE__*/_jsxDEV(Garden, {\n        size: 5,\n        date: this.state.date,\n        garden: this.state.garden,\n        userName: this.state.userName,\n        id: this.state.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(LogIn, {\n          setUser: this.setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 163\n        }, this), \" \", /*#__PURE__*/_jsxDEV(SignUp, {\n          setUser: this.setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 196\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 158\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/app/index.js"],"names":["React","BrowserRouter","Router","Route","Switch","NavBar","SignUpButton","Garden","Plant","SignUp","LogIn","App","Component","constructor","props","state","userName","userID","garden","date","setDate","setUser","bind","connecToServer","componentDidMount","fetch","id","console","log","setState","parseGarden","Date","day","getDate","month","getMonth","year","getFullYear","Number","parsedGarden","plant","length","parsedPlant","Object","assign","grow","push","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css';\n\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { NavBar, SignUpButton, Garden, Plant } from '../components'\nimport { SignUp, LogIn } from '../pages'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends React.Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        userName: \"\",\n        userID: 0,\n        garden: [],\n        date: this.setDate()\n      }\n      this.setUser = this.setUser.bind(this)\n      this.connecToServer = this.connecToServer.bind(this)\n    }\n\n    componentDidMount() {\n       this.connecToServer();\n      }\n\n    connecToServer() {\n       fetch('/');\n     }\n\n\n    setUser(userName, id, garden) {\n      console.log(\"SETTING USER\")\n      this.setState({\n        userName: userName,\n        id: id,\n        garden: this.parseGarden(garden)\n      })\n      console.log(\"User is \" + this.state.id + \" \" + this.state.userName)\n    }\n\n    setDate() {\n      const date = new Date()\n      const day = date.getDate()\n      const month = date.getMonth()\n      const year = date.getFullYear()\n      return Number(`${year}${month}${day}`)\n    }\n\n\n    parseGarden(garden) {\n      console.log(\"Garden loaded\")\n      let parsedGarden = []\n      for (let plant = 0; plant < garden.length; plant ++ ) {\n        let parsedPlant = Object.assign(new Plant, garden[plant])\n        if (this.state.date > parsedPlant.date) {\n          parsedPlant.grow()\n        }\n        parsedGarden.push(parsedPlant)\n\n\n      }\n      return parsedGarden\n    }\n\n    render() {\n    return (\n        <Router>\n            <NavBar user={this.state.userName} setUser={this.setUser} />\n            {this.state.userName ? <Garden size={5} date={this.state.date} garden={this.state.garden} userName={this.state.userName} id={this.state.id} /> : <div><LogIn setUser={this.setUser} /> <SignUp setUser={this.setUser} /></div>}\n          </Router>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}