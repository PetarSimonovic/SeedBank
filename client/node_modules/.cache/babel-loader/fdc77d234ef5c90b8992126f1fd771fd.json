{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Cloud/SeedCloud.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Text, Billboard } from '@react-three/drei';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../../functions'; // Creates a button that 'clicks'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst seedTextColours = {\n  type: \"#293241\",\n  outline: \"#b1b5c8\"\n};\nconst selectedSeedTextColours = {\n  type: \"#b1b5c8\",\n  outline: \"#293241\"\n};\nconst fontSize = 0.12;\nconst fontZ = 1;\nconst fontY = 2;\n\nfunction SeedCloud(props) {\n  _s();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        option: \"Choose Seed\",\n        fontSize: fontSize,\n        outlineWidth: fontSize,\n        outlineColor: seedTextColours.outline,\n        color: seedTextColours.message,\n        children: props.option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), seedSelectors(props)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(SeedCloud, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c = SeedCloud;\n\nfunction seedSelectors(props) {\n  let seedSelectors = [];\n  let fontX = 0;\n  let sortedSeeds = props.seeds.sort();\n\n  for (let index = 0; index < sortedSeeds.length; index++) {\n    let seed = sortedSeeds[index];\n\n    if (seed.quantity === 0) {\n      continue;\n    }\n\n    const x = 0.5 + Math.sin(Math.PI * index / sortedSeeds.length);\n    const y = 2 + Math.cos(Math.PI * index / (sortedSeeds.length * 1.9));\n    let colours = {};\n    seed.type === props.chosenSeed ? colours = selectedSeedTextColours : colours = seedTextColours;\n    seedSelectors.push( /*#__PURE__*/_jsxDEV(SeedText, {\n      position: [x, y, 0],\n      selectSeed: props.selectSeed,\n      toggleSeeds: props.toggleSeeds,\n      seed: seed,\n      colours: colours,\n      index: index\n    }, createId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this));\n  }\n\n  if (seedSelectors.length === 0) {\n    seedSelectors.push( /*#__PURE__*/_jsxDEV(NoSeedText, {\n      colours: seedTextColours,\n      index: 1\n    }, createId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this));\n  }\n\n  return seedSelectors;\n}\n\nfunction SeedText(props) {\n  _s2();\n\n  const seed = props.seed;\n  const mesh = useRef();\n  const [selected, setSelected] = useState(false);\n\n  const handleClick = event => {\n    event.stopPropagation();\n    console.log(\"Clicked on SeedCloud!\");\n    console.log(seed.type);\n    console.log(props.index);\n    props.selectSeed(seed.type, props.index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        onClick: event => handleClick(event),\n        outlineWidth: fontSize,\n        outlineColor: props.colours.outline,\n        color: props.colours.type,\n        rotation: [0, 0, 0],\n        children: [seed.type, \" \", '\\n', \"x \", seed.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(SeedText, \"SnFYePOToJlSUM/A10+S8mKt7G0=\");\n\n_c2 = SeedText;\n\nfunction NoSeedText(props) {\n  _s3();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 0.25,\n        position: [1, 3, 1],\n        outlineWidth: 0.25,\n        outlineColor: props.colours.outline,\n        color: props.colours.type,\n        rotation: [0, 0, 0],\n        children: \"No seeds available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 11\n  }, this);\n}\n\n_s3(NoSeedText, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c3 = NoSeedText;\nexport default SeedCloud;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SeedCloud\");\n$RefreshReg$(_c2, \"SeedText\");\n$RefreshReg$(_c3, \"NoSeedText\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Cloud/SeedCloud.jsx"],"names":["Text","Billboard","React","useRef","useState","useEffect","createId","seedTextColours","type","outline","selectedSeedTextColours","fontSize","fontZ","fontY","SeedCloud","props","mesh","message","option","seedSelectors","fontX","sortedSeeds","seeds","sort","index","length","seed","quantity","x","Math","sin","PI","y","cos","colours","chosenSeed","push","selectSeed","toggleSeeds","SeedText","selected","setSelected","handleClick","event","stopPropagation","console","log","NoSeedText"],"mappings":"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","sourcesContent":["import { Text, Billboard } from '@react-three/drei'\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../../functions'\n\n// Creates a button that 'clicks'\n\nconst seedTextColours = {type: \"#293241\", outline: \"#b1b5c8\"}\nconst selectedSeedTextColours = {type: \"#b1b5c8\", outline: \"#293241\"}\nconst fontSize = 0.12\nconst fontZ = 1\nconst fontY = 2\n\nfunction SeedCloud(props) {\n\n  const mesh = useRef()\n\n\n\n  return (\n  <>\n  <mesh\n    {...props}\n    ref={mesh}\n    scale={1}\n    >\n    <Text option=\"Choose Seed\" fontSize={fontSize} outlineWidth={fontSize} outlineColor={seedTextColours.outline} color={seedTextColours.message}>\n    {props.option}\n     </Text>\n\n   {seedSelectors(props)}\n  </mesh>\n  </>\n\n)\n}\n\nfunction seedSelectors(props) {\n  let seedSelectors = []\n  let fontX = 0\n  let sortedSeeds = props.seeds.sort()\n  for (let index = 0; index < sortedSeeds.length; index++) {\n    let seed = sortedSeeds[index]\n    if (seed.quantity === 0) { continue }\n    const x = 0.5 + Math.sin(Math.PI * index / sortedSeeds.length )\n    const y = 2 + Math.cos((Math.PI * index / (sortedSeeds.length * 1.9)  ))\n    let colours = {}\n    seed.type === props.chosenSeed ? colours = selectedSeedTextColours : colours = seedTextColours\n    seedSelectors.push( <SeedText key={createId()} position={[x, y, 0]} selectSeed={props.selectSeed} toggleSeeds={props.toggleSeeds} seed={seed} colours={colours} index={index}  />)\n  }\n  if (seedSelectors.length === 0) {\n    seedSelectors.push( <NoSeedText key={createId()} colours={seedTextColours} index={1} />)\n  }\n  return seedSelectors\n}\n\nfunction SeedText(props) {\n  const seed = props.seed\n  const mesh = useRef()\n  const [selected, setSelected] = useState(false)\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n    console.log(\"Clicked on SeedCloud!\")\n    console.log(seed.type)\n    console.log(props.index)\n    props.selectSeed(seed.type, props.index)\n  }\n\n\n  return (\n      <mesh\n        {...props}\n        ref={mesh}\n        >\n        <Billboard\n        follow={true}\n        lockX={false}\n        lockY={false}\n        lockZ={false} >\n        < Text\n        fontSize={fontSize}\n        onClick={(event) => handleClick(event)}\n        outlineWidth={fontSize}\n        outlineColor={props.colours.outline}\n        color={props.colours.type}\n        rotation={[0, 0, 0]} >\n          {seed.type} {'\\n'}\n          x {seed.quantity}\n        </ Text>\n        </ Billboard>\n      </mesh>\n      )\n    }\n\nfunction NoSeedText(props) {\n      const mesh = useRef()\n\n      return (\n          <mesh\n            {...props}\n            ref={mesh}\n            >\n            <Billboard\n            follow={true}\n            lockX={false}\n            lockY={false}\n            lockZ={false} >\n            < Text\n            fontSize={0.25}\n            position={[1, 3, 1]}\n            outlineWidth={0.25}\n            outlineColor={props.colours.outline}\n            color={props.colours.type}\n            rotation={[0, 0, 0]} >\n              No seeds available\n            </ Text>\n            </Billboard>\n          </mesh>\n        )\n  }\n\n\nexport default SeedCloud\n"]},"metadata":{},"sourceType":"module"}