{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/World.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions';\nimport { Grass } from './';\nimport * as THREE from \"three\"; // The plane on which plants grow\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction World(props) {\n  _s();\n\n  // This reference will give us direct access to the mesh\n  const mesh = useRef(); // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      children: createStalactites(props)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(World, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c = World;\n\nfunction createStalactites(props) {\n  const world = props.world;\n  const createdStalactites = [];\n\n  for (let index = 0; index < world.stalactites.length; index++) {\n    const stalactite = world.stalactites[index];\n    createdStalactites.push( /*#__PURE__*/_jsxDEV(Stalactite, {\n      sowPlant: props.sowPlant,\n      args: stalactite.geometry,\n      position: stalactite.position,\n      colour: stalactite.colour\n    }, createId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 30\n    }, this));\n  }\n\n  createdStalactites.push( /*#__PURE__*/_jsxDEV(SeedboxStalactite, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 27\n  }, this));\n  return createdStalactites;\n}\n\nfunction Stalactite(props) {\n  _s2();\n\n  const mesh = useRef();\n  let [top, bottom, depth, sections] = props.args;\n\n  const handleClick = event => {\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      onClick: event => handleClick(event),\n      children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n        args: props.args\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n        color: props.colour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grass, {\n        sowPlant: props.sowPlant,\n        position: [0, depth / 2, 0],\n        args: [top, top, 0.01, sections]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Stalactite, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c2 = Stalactite;\n\nfunction SeedBoxStalactite(props) {\n  _s3();\n\n  const mesh = useRef();\n\n  const handleClick = event => {\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      onClick: event => handleClick(event),\n      children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n        args: [2, 2, 2, 12]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n        color: 'FF0000'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grass, {\n        sowPlant: props.sowPlant,\n        position: [0, depth / 2, 0],\n        args: [top, top, 0.01, sections]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(SeedBoxStalactite, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c3 = SeedBoxStalactite;\nexport default World;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"World\");\n$RefreshReg$(_c2, \"Stalactite\");\n$RefreshReg$(_c3, \"SeedBoxStalactite\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/World.jsx"],"names":["React","useRef","useState","useMemo","useFrame","createId","Grass","THREE","World","props","mesh","createStalactites","world","createdStalactites","index","stalactites","length","stalactite","push","sowPlant","geometry","position","colour","Stalactite","top","bottom","depth","sections","args","handleClick","event","stopPropagation","SeedBoxStalactite"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions'\nimport { Grass } from './'\nimport * as THREE from \"three\";\n\n\n// The plane on which plants grow\n\nfunction World(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n\n\n\n  return (\n    <>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      >\n      {createStalactites(props)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createStalactites(props) {\n  const world = props.world\n  const createdStalactites = []\n\n  for (let index = 0; index < world.stalactites.length; index++) {\n    const stalactite = world.stalactites[index]\n    createdStalactites.push( <Stalactite key={createId()} sowPlant={props.sowPlant} args={stalactite.geometry} position={stalactite.position} colour={stalactite.colour} />)\n  }\n  createdStalactites.push(<SeedboxStalactite />)\n\n  return createdStalactites\n}\n\nfunction Stalactite(props) {\n  const mesh = useRef()\n  let [top, bottom, depth, sections] = props.args\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n  }\n\n  return (\n    <group>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      >\n      <cylinderGeometry args={props.args} />\n      <meshToonMaterial color={props.colour}  />\n      <Grass sowPlant={props.sowPlant} position={[0, depth/2, 0]} args={[top, top, 0.01, sections]} />\n    </mesh>\n    </group>\n  )\n}\n\nfunction SeedBoxStalactite(props) {\n  const mesh = useRef()\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n  }\n\n  return (\n    <group>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n      >\n      <cylinderGeometry args={[2, 2, 2, 12]} />\n      <meshToonMaterial color={'FF0000'}  />\n      <Grass sowPlant={props.sowPlant} position={[0, depth/2, 0]} args={[top, top, 0.01, sections]} />\n    </mesh>\n    </group>\n  )\n}\n\nexport default World\n"]},"metadata":{},"sourceType":"module"}