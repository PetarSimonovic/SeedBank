{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Seeds.jsx\";\nimport styled from 'styled-components';\nimport React from 'react';\nimport { createId } from '../functions'; // Generates a panel that contains buttons of available Seeds\n// PROTOTYPE ONLY: need to design an interface that coould contain an indefinite number of seeds or objects\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeedButton = styled.button`\ncolor: palevioletred;\nfont-size: 1em;\nmargin: 1em;\npadding: 0.25em 1em;\nborder: 2px solid palevioletred;\nborder-radius: 3px;\n`;\n_c = SeedButton;\nconst Panel = styled.div`\n  background-color: lightgrey;\n  `;\n_c2 = Panel;\n\nfunction Seeds(props) {\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    children: props.chosenSeed\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Seeds;\n\nfunction seedCollection(props) {\n  const {\n    seeds,\n    selectSeed\n  } = props;\n  let seedCollection = [];\n\n  for (let index = 0; index < seeds.length; index++) {\n    const seed = seeds[index];\n    seedCollection.push( /*#__PURE__*/_jsxDEV(SeedButton, {\n      onClick: event => selectSeed(seed.type, index),\n      selectSeedtype: seed.type,\n      quantity: seed.quantity,\n      children: [seed.type, \" \", seed.quantity]\n    }, createId(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this));\n  }\n\n  return seedCollection;\n}\n\nexport default Seeds;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SeedButton\");\n$RefreshReg$(_c2, \"Panel\");\n$RefreshReg$(_c3, \"Seeds\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Seeds.jsx"],"names":["styled","React","createId","SeedButton","button","Panel","div","Seeds","props","chosenSeed","seedCollection","seeds","selectSeed","index","length","seed","push","event","type","quantity"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;AACA;;;AAEA,MAAMC,UAAU,GAAGH,MAAM,CAACI,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,U;AASN,MAAME,KAAK,GAAGL,MAAM,CAACM,GAAI;AACzB;AACA,GAFA;MAAMD,K;;AAKN,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAEpB,sBACE,QAAC,KAAD;AAAA,cACGA,KAAK,CAACC;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MAPQF,K;;AAST,SAASG,cAAT,CAAwBF,KAAxB,EAA+B;AAE7B,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAsBJ,KAA5B;AACA,MAAIE,cAAc,GAAG,EAArB;;AAEA,OAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,KAAK,CAACG,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AACjD,UAAME,IAAI,GAAGJ,KAAK,CAACE,KAAD,CAAlB;AACAH,IAAAA,cAAc,CAACM,IAAf,eACE,QAAC,UAAD;AAA6B,MAAA,OAAO,EAAGC,KAAD,IAAWL,UAAU,CAACG,IAAI,CAACG,IAAN,EAAYL,KAAZ,CAA3D;AAA+E,MAAA,cAAc,EAAEE,IAAI,CAACG,IAApG;AAA0G,MAAA,QAAQ,EAAEH,IAAI,CAACI,QAAzH;AAAA,iBACCJ,IAAI,CAACG,IADN,OACaH,IAAI,CAACI,QADlB;AAAA,OAAiBjB,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAEC,SAAOQ,cAAP;AACH;;AAED,eAAeH,KAAf","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\nimport { createId } from '../functions'\n\n// Generates a panel that contains buttons of available Seeds\n// PROTOTYPE ONLY: need to design an interface that coould contain an indefinite number of seeds or objects\n\nconst SeedButton = styled.button`\ncolor: palevioletred;\nfont-size: 1em;\nmargin: 1em;\npadding: 0.25em 1em;\nborder: 2px solid palevioletred;\nborder-radius: 3px;\n`;\n\nconst Panel = styled.div`\n  background-color: lightgrey;\n  `;\n\n\nfunction Seeds(props) {\n\n  return (\n    <Panel>\n      {props.chosenSeed}\n    </Panel>\n  )\n}\n\nfunction seedCollection(props) {\n\n  const {seeds, selectSeed} = props\n  let seedCollection = []\n\n  for (let index = 0; index < seeds.length; index++) {\n    const seed = seeds[index]\n    seedCollection.push(\n      <SeedButton key={createId()} onClick={(event) => selectSeed(seed.type, index)} selectSeedtype={seed.type} quantity={seed.quantity} >\n      {seed.type} {seed.quantity}\n      </SeedButton>\n    )\n  }\n\n    return seedCollection\n}\n\nexport default Seeds\n"]},"metadata":{},"sourceType":"module"}