{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/CloudKeyBoard.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { Text, Billboard } from '@react-three/drei';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nconst alphabet = characters.split('');\nconst cloudKeyboardColours = {\n  text: \"#293241\",\n  outline: \"#b1b5c8\"\n};\nconst cloudFunctionButtonColours = {\n  text: \"#b1b5c8\",\n  outline: \"#293241\"\n};\nconst fontSize = 0.1;\nconst fontZ = 3;\n\nfunction CloudKeyBoard(props) {\n  _s();\n\n  console.log(\"CloudKeyBoard props\");\n  consoel.log(props);\n  const [sentenceArray, setSentencearray] = useState([]);\n  const [sentence, setSentence] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const buildSentence = character => {\n    setSentencearray(prev => {\n      return [...prev, character];\n    });\n  };\n\n  const deleteCharacter = () => {\n    console.log(sentenceArray);\n    let previousLength = sentenceArray.length - 1;\n    console.log(previousLength);\n    setSentencearray(prev => {\n      return prev.filter((character, index) => index !== previousLength);\n    });\n    console.log(sentenceArray);\n  };\n\n  const submit = () => {\n    setSubmitted(true);\n    props.handleSubmit(sentence);\n  };\n\n  useEffect(() => {\n    console.log(\"In useEffect\"); //\n\n    console.log(sentenceArray);\n    setSentence(sentenceArray.join(''));\n    setSubmitted(submitted);\n    console.log(submitted);\n  });\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [submitted ? /*#__PURE__*/_jsxDEV(CloudText, {\n      sentence: sentence,\n      fontX: 0.8,\n      fontY: 1.8\n    }, createId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this) : createCloudKeyboard(props, buildSentence, deleteCharacter, sentence, submit), \" />\"]\n  }, void 0, true);\n}\n\n_s(CloudKeyBoard, \"1aO9i/I/5WqDsOICEmaURtPDolg=\");\n\n_c = CloudKeyBoard;\n\nfunction createCloudKeyboard(props, buildSentence, deleteCharacter, sentence, submit) {\n  let cloudKeyboard = [];\n  let fontX = 0.5;\n  let fontY = 3;\n  let column = 1;\n\n  for (let char = 0; char < alphabet.length; char++) {\n    let character = alphabet[char];\n    fontX += 0.3;\n    cloudKeyboard.push( /*#__PURE__*/_jsxDEV(CloudKey, {\n      buildSentence: buildSentence,\n      character: character,\n      fontX: fontX,\n      fontY: fontY\n    }, createId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }, this));\n\n    if (column % 8 === 0) {\n      fontY -= 0.3;\n      fontX = 0.5;\n    }\n\n    column++;\n  }\n\n  cloudKeyboard.push( /*#__PURE__*/_jsxDEV(FunctionKey, {\n    handleClick: deleteCharacter,\n    fontX: fontX + 0.3,\n    fontY: fontY,\n    character: \"X\"\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 23\n  }, this));\n  cloudKeyboard.push( /*#__PURE__*/_jsxDEV(FunctionKey, {\n    handleClick: submit,\n    fontX: fontX + 0.6,\n    fontY: fontY,\n    character: \"+\"\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 23\n  }, this));\n  cloudKeyboard.push( /*#__PURE__*/_jsxDEV(CloudText, {\n    sentence: sentence,\n    fontX: 0.8,\n    fontY: fontY - 0.3\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 23\n  }, this));\n  return cloudKeyboard;\n}\n\nfunction CloudKey(props) {\n  _s2();\n\n  const mesh = useRef();\n\n  const handleClick = (event, character) => {\n    event.stopPropagation();\n    console.log(character);\n    props.buildSentence(character);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event, props.character),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudKeyboardColours.outline,\n        color: cloudKeyboardColours.text,\n        children: props.character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CloudKey, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c2 = CloudKey;\n\nfunction FunctionKey(props) {\n  _s3();\n\n  // Receives a 'handleclick' prop that can vary according to functions\n  // Varies in colour to cloudkey but other than that the two could prob be merged into single component\n  const mesh = useRef();\n\n  const handleClick = event => {\n    event.stopPropagation();\n    props.handleClick();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudFunctionButtonColours.outline,\n        color: cloudFunctionButtonColours.text,\n        children: props.character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(FunctionKey, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c3 = FunctionKey;\n\nfunction CloudText(props) {\n  _s4();\n\n  const mesh = useRef();\n\n  const handleClick = (event, character) => {\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    onClick: event => handleClick(event, props.character),\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        position: [props.fontX, props.fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: cloudFunctionButtonColours.outline,\n        color: cloudFunctionButtonColours.text,\n        children: props.sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n}\n\n_s4(CloudText, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c4 = CloudText;\nexport default CloudKeyBoard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CloudKeyBoard\");\n$RefreshReg$(_c2, \"CloudKey\");\n$RefreshReg$(_c3, \"FunctionKey\");\n$RefreshReg$(_c4, \"CloudText\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/CloudKeyBoard.jsx"],"names":["Text","Billboard","React","useRef","useState","useEffect","createId","characters","alphabet","split","cloudKeyboardColours","text","outline","cloudFunctionButtonColours","fontSize","fontZ","CloudKeyBoard","props","console","log","consoel","sentenceArray","setSentencearray","sentence","setSentence","submitted","setSubmitted","buildSentence","character","prev","deleteCharacter","previousLength","length","filter","index","submit","handleSubmit","join","mesh","createCloudKeyboard","cloudKeyboard","fontX","fontY","column","char","push","CloudKey","handleClick","event","stopPropagation","FunctionKey","CloudText"],"mappings":"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","sourcesContent":["\nimport { Text, Billboard } from '@react-three/drei'\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions'\n\n\n\nconst characters = \"abcdefghijklmnopqrstuvwxyz0123456789\"\nconst alphabet = characters.split('')\nconst cloudKeyboardColours = {text: \"#293241\", outline: \"#b1b5c8\"}\nconst cloudFunctionButtonColours = {text: \"#b1b5c8\", outline: \"#293241\"}\nconst fontSize = 0.1\nconst fontZ = 3\n\n\n\n\nfunction CloudKeyBoard(props) {\n  console.log(\"CloudKeyBoard props\")\n  consoel.log(props)\n\n  const [sentenceArray, setSentencearray] = useState([])\n  const [sentence, setSentence] = useState('')\n  const [submitted, setSubmitted] = useState(false)\n\n  const buildSentence = (character) => {\n    setSentencearray( (prev) => {\n      return [...prev, character]\n    })\n  }\n\n  const deleteCharacter = () => {\n    console.log(sentenceArray)\n    let previousLength = sentenceArray.length - 1\n    console.log(previousLength)\n    setSentencearray (\n      (prev) => {\n        return prev.filter((character, index) => index !== previousLength)\n      }\n    )\n    console.log(sentenceArray)\n  }\n\n  const submit = () => {\n    setSubmitted(true)\n    props.handleSubmit(sentence)\n  }\n\n  useEffect(() => {\n\n    console.log(\"In useEffect\")\n    //\n    console.log(sentenceArray)\n    setSentence(sentenceArray.join(''))\n    setSubmitted(submitted)\n    console.log(submitted)\n  });\n\n\n  const mesh = useRef()\n\n\n\n  return (\n  <>\n  {submitted ? < CloudText key={createId()} sentence={sentence} fontX={0.8} fontY={1.8} /> : createCloudKeyboard(props, buildSentence, deleteCharacter, sentence, submit) } />\n  </>\n\n)\n}\n\nfunction createCloudKeyboard(props, buildSentence, deleteCharacter, sentence, submit) {\n  let cloudKeyboard = []\n  let fontX = 0.5\n  let fontY = 3\n  let column = 1\n  for (let char = 0; char < alphabet.length; char++) {\n    let character = alphabet[char]\n    fontX += 0.3\n    cloudKeyboard.push( < CloudKey key={createId()} buildSentence={buildSentence} character={character} fontX={fontX} fontY={fontY} /> )\n    if (column % 8 === 0) {\n      fontY -= 0.3\n      fontX = 0.5\n    }\n    column++\n\n  }\n  cloudKeyboard.push( <FunctionKey key={createId()} handleClick={deleteCharacter} fontX={fontX + 0.3} fontY={fontY} character='X' /> )\n  cloudKeyboard.push( <FunctionKey key={createId()} handleClick={submit} fontX={fontX + 0.6} fontY={fontY} character='+'/>)\n  cloudKeyboard.push( < CloudText key={createId()} sentence={sentence} fontX={0.8} fontY={fontY - 0.3} /> )\n\n  return cloudKeyboard\n\n\n}\n\nfunction CloudKey(props) {\n\n    const mesh = useRef()\n\n    const handleClick = (event, character) => {\n      event.stopPropagation()\n      console.log(character)\n      props.buildSentence(character)\n    }\n\n    return (\n        <mesh\n          {...props}\n          ref={mesh}\n          onClick={(event) => handleClick(event, props.character)}\n          >\n          <Billboard\n          follow={true}\n          lockX={false}\n          lockY={false}\n          lockZ={false} >\n          < Text\n          fontSize={fontSize}\n          position={[props.fontX, props.fontY, fontZ]}\n          outlineWidth={fontSize}\n          outlineColor={cloudKeyboardColours.outline}\n          color={cloudKeyboardColours.text}\n           >\n           {props.character}\n          </ Text>\n          </ Billboard>\n        </mesh>\n        )\n      }\n\nfunction FunctionKey(props) {\n\n// Receives a 'handleclick' prop that can vary according to functions\n// Varies in colour to cloudkey but other than that the two could prob be merged into single component\n\nconst mesh = useRef()\n\nconst handleClick = (event) => {\nevent.stopPropagation()\nprops.handleClick()\n}\n\nreturn (\n  <mesh\n    {...props}\n    ref={mesh}\n    onClick={(event) => handleClick(event)}\n    >\n    <Billboard\n    follow={true}\n    lockX={false}\n    lockY={false}\n    lockZ={false} >\n    < Text\n    fontSize={fontSize}\n    position={[props.fontX, props.fontY, fontZ]}\n    outlineWidth={fontSize}\n    outlineColor={cloudFunctionButtonColours.outline}\n    color={cloudFunctionButtonColours.text}\n     >\n     {props.character}\n    </ Text>\n    </ Billboard>\n  </mesh>\n  )\n}\n\nfunction CloudText(props) {\n\n    const mesh = useRef()\n\n    const handleClick = (event, character) => {\n      event.stopPropagation()\n    }\n\n    return (\n        <mesh\n          {...props}\n          ref={mesh}\n          onClick={(event) => handleClick(event, props.character)}\n          >\n          <Billboard\n          follow={true}\n          lockX={false}\n          lockY={false}\n          lockZ={false} >\n          < Text\n          fontSize={fontSize}\n          position={[props.fontX, props.fontY, fontZ]}\n          outlineWidth={fontSize}\n          outlineColor={cloudFunctionButtonColours.outline}\n          color={cloudFunctionButtonColours.text}\n           >\n           {props.sentence}\n          </ Text>\n          </ Billboard>\n        </mesh>\n        )\n      }\n\nexport default CloudKeyBoard\n"]},"metadata":{},"sourceType":"module"}