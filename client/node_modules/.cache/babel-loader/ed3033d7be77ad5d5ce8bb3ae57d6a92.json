{"ast":null,"code":"import _regeneratorRuntime from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import api from'../api';import{sendBalloon}from'./';export default function makeFriendRequest(_x,_x2,_x3){return _makeFriendRequest.apply(this,arguments);}function _makeFriendRequest(){_makeFriendRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id,userName,friendName){var validRequest;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:validRequest=true;_context.next=3;return api.getFriendByName(friendName,id).then(function(res){console.log('Already friends?');console.log(res);if(res.data.data.friendName===friendName&&res.data.data.userId===id){console.log(\"YES ALREADY FRIENDS\");return;}else{sendFriendBalloon(id,userName,friendName);}});case 3:case\"end\":return _context.stop();}}},_callee);}));return _makeFriendRequest.apply(this,arguments);}function sendFriendBalloon(_x4,_x5,_x6){return _sendFriendBalloon.apply(this,arguments);}function _sendFriendBalloon(){_sendFriendBalloon=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,userName,friendName){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"Making friend request to \"+friendName+\"from\"+\" userName\");_context2.next=3;return api.getUser(friendName).then(function(res){var friendId=res.data.data._id;var type=\"friendRequest\";var quantity=1;var message=\"\".concat(userName,\" wants to connect!\");sendBalloon(friendId,type,quantity,message,userName);});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _sendFriendBalloon.apply(this,arguments);}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/MakeFriendRequest.js"],"names":["api","sendBalloon","makeFriendRequest","id","userName","friendName","validRequest","getFriendByName","then","res","console","log","data","userId","sendFriendBalloon","getUser","friendId","_id","type","quantity","message"],"mappings":"udAAA,MAAOA,CAAAA,GAAP,KAAgB,QAAhB,CACA,OAASC,WAAT,KAA4B,IAA5B,CAGA,uBAA8BC,CAAAA,iBAA9B,8D,yGAAe,iBAAiCC,EAAjC,CAAqCC,QAArC,CAA+CC,UAA/C,mIACTC,YADS,CACM,IADN,uBAIPN,CAAAA,GAAG,CAACO,eAAJ,CAAoBF,UAApB,CAAgCF,EAAhC,EAAoCK,IAApC,CAAyC,SAAAC,GAAG,CAAI,CACpDC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAIA,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcP,UAAd,GAA6BA,UAA7B,EAA2CI,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,MAAd,GAAyBV,EAAxE,CAA4E,CAC1EO,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACA,OACD,CAHD,IAGO,CACLG,iBAAiB,CAACX,EAAD,CAAKC,QAAL,CAAeC,UAAf,CAAjB,CACD,CACF,CATK,CAJO,uD,4DAgBAS,CAAAA,iB,wKAAf,kBAAiCX,EAAjC,CAAqCC,QAArC,CAA+CC,UAA/C,sHACEK,OAAO,CAACC,GAAR,CAAY,4BAA8BN,UAA9B,CAA2C,MAA3C,CAAoD,WAAhE,EADF,uBAEQL,CAAAA,GAAG,CAACe,OAAJ,CAAYV,UAAZ,EAAwBG,IAAxB,CAA6B,SAAAC,GAAG,CAAI,CACxC,GAAMO,CAAAA,QAAQ,CAAGP,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcK,GAA/B,CACA,GAAMC,CAAAA,IAAI,CAAG,eAAb,CACA,GAAMC,CAAAA,QAAQ,CAAG,CAAjB,CACA,GAAMC,CAAAA,OAAO,WAAMhB,QAAN,sBAAb,CACAH,WAAW,CAACe,QAAD,CAAWE,IAAX,CAAiBC,QAAjB,CAA2BC,OAA3B,CAAoChB,QAApC,CAAX,CACD,CANK,CAFR,yD","sourcesContent":["import api from '../api';\nimport { sendBalloon } from './'\n\n\nexport default async function makeFriendRequest(id, userName, friendName) {\n  let validRequest = true\n\n\n  await api.getFriendByName(friendName, id).then(res => {\n    console.log('Already friends?')\n    console.log(res)\n    if (res.data.data.friendName === friendName && res.data.data.userId === id) {\n      console.log(\"YES ALREADY FRIENDS\")\n      return\n    } else {\n      sendFriendBalloon(id, userName, friendName)\n    }\n  })\n}\n\nasync function sendFriendBalloon(id, userName, friendName) {\n  console.log(\"Making friend request to \" + friendName + \"from\" + \" userName\")\n  await api.getUser(friendName).then(res => {\n    const friendId = res.data.data._id\n    const type = \"friendRequest\"\n    const quantity = 1\n    const message = `${userName} wants to connect!`\n    sendBalloon(friendId, type, quantity, message, userName)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}