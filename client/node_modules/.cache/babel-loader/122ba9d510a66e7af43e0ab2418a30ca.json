{"ast":null,"code":"import _toConsumableArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'../style/App.css';import api from'../api';import React,{useRef,useState,useMemo,useEffect,Suspense}from\"react\";import{Canvas,useFrame,extend}from\"@react-three/fiber\";import*as THREE from\"three\";import{Grass,Plant,Camera,Sun,SkyBox,Seeds,Garden,Worlds}from'../components';import{setDate,parseGarden,saveGarden,createId,createPlant}from'../functions';import styled from'styled-components';import{EffectComposer,DepthOfField,Bloom,Noise,Vignette}from'react-postprocessing';// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SeedBank(props){var _useState=useState(props.garden),_useState2=_slicedToArray(_useState,2),plants=_useState2[0],setPlants=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),seed=_useState4[0],setSeed=_useState4[1];var sowPlant=function sowPlant(event){if(seed){var newPlant=createPlant(event,seed);setSeed(null);setPlants(function(prev){return[newPlant].concat(_toConsumableArray(prev));});}};var selectSeed=function selectSeed(selectedSeed){console.log(selectedSeed);setSeed(selectedSeed);console.log(seed);};useEffect(function(){//\nconsole.log(\"Calling saveGarden\");saveGarden(props.id,plants,props.world,props.worldChosen);});return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Garden,{plants:plants,world:props.world,newWorld:props.newWorld,sowPlant:sowPlant}),props.worldChosen?/*#__PURE__*/_jsx(Seeds,{className:\"App-header\",selectSeed:selectSeed}):/*#__PURE__*/_jsx(Worlds,{className:\"App-header\",newWorld:props.newWorld,saveWorld:props.saveWorld})]});}export default SeedBank;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx"],"names":["api","React","useRef","useState","useMemo","useEffect","Suspense","Canvas","useFrame","extend","THREE","Grass","Plant","Camera","Sun","SkyBox","Seeds","Garden","Worlds","setDate","parseGarden","saveGarden","createId","createPlant","styled","EffectComposer","DepthOfField","Bloom","Noise","Vignette","SeedBank","props","garden","plants","setPlants","seed","setSeed","sowPlant","event","newPlant","prev","selectSeed","selectedSeed","console","log","id","world","worldChosen","newWorld","saveWorld"],"mappings":"keAAA,MAAO,kBAAP,CACA,MAAOA,CAAAA,GAAP,KAAgB,QAAhB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,OAAlC,CAA2CC,SAA3C,CAAsDC,QAAtD,KAAsE,OAAtE,CACA,OAASC,MAAT,CAAiBC,QAAjB,CAA2BC,MAA3B,KAAyC,oBAAzC,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,KAAT,CAAgBC,KAAhB,CAAuBC,MAAvB,CAA+BC,GAA/B,CAAoCC,MAApC,CAA4CC,KAA5C,CAAmDC,MAAnD,CAA2DC,MAA3D,KAAyE,eAAzE,CACA,OAASC,OAAT,CAAkBC,WAAlB,CAA+BC,UAA/B,CAA2CC,QAA3C,CAAqDC,WAArD,KAAwE,cAAxE,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,cAAT,CAAyBC,YAAzB,CAAuCC,KAAvC,CAA8CC,KAA9C,CAAqDC,QAArD,KAAqE,sBAArE,CAIA;AACA;wFAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CAGvB,cAA4B5B,QAAQ,CAAC4B,KAAK,CAACC,MAAP,CAApC,wCAAOC,MAAP,eAAeC,SAAf,eACA,eAAwB/B,QAAQ,CAAC,IAAD,CAAhC,yCAAOgC,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAEC,KAAF,CAAa,CAC5B,GAAIH,IAAJ,CAAU,CACR,GAAMI,CAAAA,QAAQ,CAAGhB,WAAW,CAACe,KAAD,CAAQH,IAAR,CAA5B,CACAC,OAAO,CAAC,IAAD,CAAP,CACAF,SAAS,CAAE,SAACM,IAAD,CAAU,CACnB,OAAQD,QAAR,4BAAqBC,IAArB,GACD,CAFQ,CAAT,CAGD,CACF,CARD,CAUA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,YAAD,CAAkB,CACnCC,OAAO,CAACC,GAAR,CAAYF,YAAZ,EACAN,OAAO,CAACM,YAAD,CAAP,CACAC,OAAO,CAACC,GAAR,CAAYT,IAAZ,EACD,CAJD,CASA9B,SAAS,CAAC,UAAM,CACd;AACAsC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACAvB,UAAU,CAACU,KAAK,CAACc,EAAP,CAAWZ,MAAX,CAAmBF,KAAK,CAACe,KAAzB,CAAgCf,KAAK,CAACgB,WAAtC,CAAV,CACD,CAJQ,CAAT,CAOA,mBACA,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,MAAD,EAAQ,MAAM,CAAEd,MAAhB,CAAwB,KAAK,CAAEF,KAAK,CAACe,KAArC,CAA4C,QAAQ,CAAEf,KAAK,CAACiB,QAA5D,CAAsE,QAAQ,CAAEX,QAAhF,EADF,CAEGN,KAAK,CAACgB,WAAN,cAAoB,KAAC,KAAD,EAAO,SAAS,CAAC,YAAjB,CAA8B,UAAU,CAAEN,UAA1C,EAApB,cAA+E,KAAC,MAAD,EAAQ,SAAS,CAAC,YAAlB,CAA+B,QAAQ,CAAEV,KAAK,CAACiB,QAA/C,CAAyD,SAAS,CAAGjB,KAAK,CAACkB,SAA3E,EAFlF,GADA,CAMD,CAED,cAAenB,CAAAA,QAAf","sourcesContent":["import '../style/App.css';\nimport api from '../api';\nimport React, { useRef, useState, useMemo, useEffect, Suspense } from \"react\";\nimport { Canvas, useFrame, extend } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { Grass, Plant, Camera, Sun, SkyBox, Seeds, Garden, Worlds } from '../components';\nimport { setDate, parseGarden, saveGarden, createId, createPlant } from '../functions'\nimport styled from 'styled-components';\nimport { EffectComposer, DepthOfField, Bloom, Noise, Vignette } from 'react-postprocessing'\n\n\n\n// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\nfunction SeedBank(props) {\n\n\n  const [plants, setPlants] = useState(props.garden)\n  const [seed, setSeed] = useState(null)\n\n  const sowPlant = ( event ) => {\n    if (seed) {\n      const newPlant = createPlant(event, seed)\n      setSeed(null)\n      setPlants( (prev) => {\n        return [newPlant, ...prev]\n      })\n    }\n  }\n\n  const selectSeed = (selectedSeed) => {\n    console.log(selectedSeed)\n    setSeed(selectedSeed)\n    console.log(seed)\n  }\n\n\n\n\n  useEffect(() => {\n    //\n    console.log(\"Calling saveGarden\")\n    saveGarden(props.id, plants, props.world, props.worldChosen)\n  });\n\n\n  return (\n  <div className=\"App\">\n    <Garden plants={plants} world={props.world} newWorld={props.newWorld} sowPlant={sowPlant} />\n    {props.worldChosen ? <Seeds className=\"App-header\" selectSeed={selectSeed} /> : <Worlds className=\"App-header\" newWorld={props.newWorld} saveWorld={ props.saveWorld } />}\n  </div>\n  );\n}\n\nexport default SeedBank;\n"]},"metadata":{},"sourceType":"module"}