{"ast":null,"code":"import _regeneratorRuntime from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import api from'../api';export default function saveGarden(_x,_x2){return _saveGarden.apply(this,arguments);}function _saveGarden(){_saveGarden=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id,plants){var savedGarden,garden;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:savedGarden=extractPlants(plants);garden={\"garden\":savedGarden};console.log(\"Attempting to save garden\");console.log(garden);console.log(id);_context.next=7;return api.updateGarden(id,garden).then(function(res){console.log('Garden updated successfully');console.log(plants.length);});case 7:case\"end\":return _context.stop();}}},_callee);}));return _saveGarden.apply(this,arguments);}function extractPlants(plants){console.log(\"Garden has\");console.log(plants.length);var extractedPlants=[];for(var plant=0;plant<plants.length;plant++){var key=plants[plant].key;var parsedPlant=plants[plant].props;var savedPlant={key:key,growth:parsedPlant.growth,date:parsedPlant.date,position:parsedPlant.position};extractedPlants.push(savedPlant);}console.log(\"ExtractedPlants\");console.log(extractedPlants);return extractedPlants;}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/SaveGarden.js"],"names":["api","saveGarden","id","plants","savedGarden","extractPlants","garden","console","log","updateGarden","then","res","length","extractedPlants","plant","key","parsedPlant","props","savedPlant","growth","date","position","push"],"mappings":"udAAA,MAAOA,CAAAA,GAAP,KAAgB,QAAhB,CAGA,uBAA8BC,CAAAA,UAA9B,mD,2FAAe,iBAA0BC,EAA1B,CAA8BC,MAA9B,yIACTC,WADS,CACKC,aAAa,CAACF,MAAD,CADlB,CAEPG,MAFO,CAEE,CAAC,SAAWF,WAAZ,CAFF,CAGbG,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAC,OAAO,CAACC,GAAR,CAAYN,EAAZ,EALa,sBAMPF,CAAAA,GAAG,CAACS,YAAJ,CAAiBP,EAAjB,CAAqBI,MAArB,EAA6BI,IAA7B,CAAkC,SAAAC,GAAG,CAAI,CACzCJ,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACAD,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACS,MAAnB,EACH,CAHG,CANO,uD,6CAYf,QAASP,CAAAA,aAAT,CAAuBF,MAAvB,CAA+B,CAC7BI,OAAO,CAACC,GAAR,CAAY,YAAZ,EACAD,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACS,MAAnB,EACA,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CACA,IAAK,GAAIC,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGX,MAAM,CAACS,MAAnC,CAA2CE,KAAK,EAAhD,CAAqD,CACnD,GAAMC,CAAAA,GAAG,CAAGZ,MAAM,CAACW,KAAD,CAAN,CAAcC,GAA1B,CACA,GAAMC,CAAAA,WAAW,CAAGb,MAAM,CAACW,KAAD,CAAN,CAAcG,KAAlC,CACA,GAAMC,CAAAA,UAAU,CAAG,CAACH,GAAG,CAAEA,GAAN,CAAWI,MAAM,CAAEH,WAAW,CAACG,MAA/B,CAAuCC,IAAI,CAAEJ,WAAW,CAACI,IAAzD,CAA+DC,QAAQ,CAAEL,WAAW,CAACK,QAArF,CAAnB,CACAR,eAAe,CAACS,IAAhB,CAAqBJ,UAArB,EACD,CACDX,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYK,eAAZ,EACA,MAAOA,CAAAA,eAAP,CACD","sourcesContent":["import api from '../api';\n\n\nexport default async function saveGarden(id, plants){\n  let savedGarden = extractPlants(plants)\n  const garden = {\"garden\" : savedGarden}\n  console.log(\"Attempting to save garden\")\n  console.log(garden)\n  console.log(id)\n  await api.updateGarden(id, garden).then(res => {\n        console.log('Garden updated successfully')\n        console.log(plants.length)\n    })\n}\n\nfunction extractPlants(plants) {\n  console.log(\"Garden has\")\n  console.log(plants.length)\n  let extractedPlants = []\n  for (let plant = 0; plant < plants.length; plant ++) {\n    const key = plants[plant].key\n    const parsedPlant = plants[plant].props\n    const savedPlant = {key: key, growth: parsedPlant.growth, date: parsedPlant.date, position: parsedPlant.position}\n    extractedPlants.push(savedPlant)\n  }\n  console.log(\"ExtractedPlants\")\n  console.log(extractedPlants)\n  return extractedPlants\n}\n"]},"metadata":{},"sourceType":"module"}