{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Sun.jsx\",\n    _s = $RefreshSig$();\n\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useRef } from 'react';\nimport { EffectComposer, GodRays } from \"@react-three/postprocessing\";\nimport { BlendFunction, Resizer, KernelSize } from \"postprocessing\";\nimport * as THREE from \"three\"; // directionaLight is Three.js's daylight equivalent\n// values are arbitraty for now\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sun(props) {\n  _s();\n\n  const mesh = useRef();\n  const sunRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: sunRef,\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [1.5, 1, 1],\n        intensity: 0.9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(GodRays, {\n      sun: sunRef,\n      blendFunction: BlendFunction.Screen // The blend function of this effect.\n      ,\n      samples: 60 // The number of samples per pixel.\n      ,\n      density: 0.96 // The density of the light rays.\n      ,\n      decay: 0.9 // An illumination decay factor.\n      ,\n      weight: 0.4 // A light ray weight factor.\n      ,\n      exposure: 0.6 // A constant attenuation coefficient.\n      ,\n      clampMax: 1 // An upper bound for the saturation of the overall effect.\n      ,\n      width: Resizer.AUTO_SIZE // Render width.\n      ,\n      height: Resizer.AUTO_SIZE // Render height.\n      ,\n      kernelSize: KernelSize.SMALL // The blur kernel size. Has no effect if blur is disabled.\n      ,\n      blur: true // Whether the god rays should be blurred to reduce artifacts.\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Sun, \"YZ4Wj1RAomb9Qd15VFWr3IzjbvA=\");\n\n_c = Sun;\nexport default Sun;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sun\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Sun.jsx"],"names":["Canvas","useFrame","useRef","EffectComposer","GodRays","BlendFunction","Resizer","KernelSize","THREE","Sun","props","mesh","sunRef","Screen","AUTO_SIZE","SMALL"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,6BAAxC;AACA,SAASC,aAAT,EAAwBC,OAAxB,EAAiCC,UAAjC,QAAmD,gBAAnD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;AACA;;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAMC,IAAI,GAAGT,MAAM,EAAnB;AACA,QAAMU,MAAM,GAAGV,MAAM,EAArB;AAEA,sBACA;AAAA,4BACE;AACE,MAAA,GAAG,EAAEU,MADP;AAAA,SAEMF,KAFN;AAAA,6BAIA;AAAkB,QAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAA5B;AAAyC,QAAA,SAAS,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AACA,MAAA,GAAG,EAAEE,MADL;AAED,MAAA,aAAa,EAAEP,aAAa,CAACQ,MAF5B,CAEoC;AAFpC;AAGD,MAAA,OAAO,EAAE,EAHR,CAGY;AAHZ;AAID,MAAA,OAAO,EAAE,IAJR,CAIc;AAJd;AAKD,MAAA,KAAK,EAAE,GALN,CAKW;AALX;AAMD,MAAA,MAAM,EAAE,GANP,CAMY;AANZ;AAOD,MAAA,QAAQ,EAAE,GAPT,CAOc;AAPd;AAQD,MAAA,QAAQ,EAAE,CART,CAQY;AARZ;AASD,MAAA,KAAK,EAAEP,OAAO,CAACQ,SATd,CASyB;AATzB;AAUD,MAAA,MAAM,EAAER,OAAO,CAACQ,SAVf,CAU0B;AAV1B;AAWD,MAAA,UAAU,EAAEP,UAAU,CAACQ,KAXtB,CAW6B;AAX7B;AAYD,MAAA,IAAI,EAAE,IAZL,CAYW;;AAZX;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAwBD;;GA5BQN,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useRef } from 'react';\nimport { EffectComposer, GodRays } from \"@react-three/postprocessing\";\nimport { BlendFunction, Resizer, KernelSize } from \"postprocessing\";\nimport * as THREE from \"three\";\n\n// directionaLight is Three.js's daylight equivalent\n// values are arbitraty for now\n\nfunction Sun(props) {\n  const mesh = useRef()\n  const sunRef = useRef()\n\n  return (\n  <group>\n    <mesh\n      ref={sunRef}\n      {...props}\n      >\n    <directionalLight position={[1.5, 1, 1]} intensity={0.9} />\n    </mesh>\n    <GodRays\n    sun={sunRef}\n   blendFunction={BlendFunction.Screen} // The blend function of this effect.\n   samples={60} // The number of samples per pixel.\n   density={0.96} // The density of the light rays.\n   decay={0.9} // An illumination decay factor.\n   weight={0.4} // A light ray weight factor.\n   exposure={0.6} // A constant attenuation coefficient.\n   clampMax={1} // An upper bound for the saturation of the overall effect.\n   width={Resizer.AUTO_SIZE} // Render width.\n   height={Resizer.AUTO_SIZE} // Render height.\n   kernelSize={KernelSize.SMALL} // The blur kernel size. Has no effect if blur is disabled.\n   blur={true} // Whether the god rays should be blurred to reduce artifacts.\n   />\n  </group>\n  )\n}\n\nexport default Sun\n"]},"metadata":{},"sourceType":"module"}