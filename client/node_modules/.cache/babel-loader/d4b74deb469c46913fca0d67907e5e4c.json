{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/World.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions';\nimport { Grass } from './';\nimport * as THREE from \"three\"; // The plane on which plants grow\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction World(props) {\n  _s();\n\n  // This reference will give us direct access to the mesh\n  const world = props.world;\n  const mesh = useRef();\n  console.log(\"WORLD in EARTH is\");\n  console.log(world); // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      children: createStalactites(world)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(World, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c = World;\n\nfunction createStalactites(world) {\n  console.log(\"In create stalactites\");\n  console.log(world);\n  const createdStalactites = [];\n\n  for (let index = 0; index < world.stalactites.length; index++) {\n    const stalactite = world.stalactites[index];\n    createdStalactites.push( /*#__PURE__*/_jsxDEV(Stalactite, {\n      args: stalactite.geometry,\n      position: stalactite.position,\n      colour: stalactite.colour\n    }, createId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }, this));\n  }\n\n  return createdStalactites;\n}\n\nfunction Stalactite(props) {\n  _s2();\n\n  const mesh = useRef();\n  console.log(\"ARGS\");\n  console.log(props.args);\n  let [top, bottom, depth, sections] = props.args;\n  console.log(\"DEPTH\");\n  console.log(depth);\n\n  const handleClick = event => {\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      onClick: event => handleClick(event),\n      children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n        args: props.args\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n        color: props.colour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grass, {\n        position: [0, depth / 2, 0],\n        args: [top, top, 0.01, sections]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Stalactite, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c2 = Stalactite;\nexport default World;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"World\");\n$RefreshReg$(_c2, \"Stalactite\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/World.jsx"],"names":["React","useRef","useState","useMemo","useFrame","createId","Grass","THREE","World","props","world","mesh","console","log","createStalactites","createdStalactites","index","stalactites","length","stalactite","push","geometry","position","colour","Stalactite","args","top","bottom","depth","sections","handleClick","event","stopPropagation"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,OAAlC,QAAiD,OAAjD;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,KAAT,QAAsB,IAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAGA;;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAMC,IAAI,GAAGV,MAAM,EAAnB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EALoB,CAMpB;AACA;AACA;;AAKA,sBACE;AAAA,2BACA,qBACMD,KADN;AAEE,MAAA,GAAG,EAAEE,IAFP;AAGE,MAAA,KAAK,EAAE,CAHT;AAAA,gBAKGG,iBAAiB,CAACJ,KAAD;AALpB;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAWD;;GAxBQF,K;;KAAAA,K;;AA0BT,SAASM,iBAAT,CAA2BJ,KAA3B,EAAkC;AAChCE,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAMK,kBAAkB,GAAG,EAA3B;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,KAAK,CAACO,WAAN,CAAkBC,MAA9C,EAAsDF,KAAK,EAA3D,EAA+D;AAC7D,UAAMG,UAAU,GAAGT,KAAK,CAACO,WAAN,CAAkBD,KAAlB,CAAnB;AACAD,IAAAA,kBAAkB,CAACK,IAAnB,eAAyB,QAAC,UAAD;AAA6B,MAAA,IAAI,EAAED,UAAU,CAACE,QAA9C;AAAwD,MAAA,QAAQ,EAAEF,UAAU,CAACG,QAA7E;AAAuF,MAAA,MAAM,EAAEH,UAAU,CAACI;AAA1G,OAAiBlB,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA,YAAzB;AACD;;AAED,SAAOU,kBAAP;AACD;;AAED,SAASS,UAAT,CAAoBf,KAApB,EAA2B;AAAA;;AACzB,QAAME,IAAI,GAAGV,MAAM,EAAnB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACgB,IAAlB;AACA,MAAI,CAACC,GAAD,EAAMC,MAAN,EAAcC,KAAd,EAAqBC,QAArB,IAAiCpB,KAAK,CAACgB,IAA3C;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;;AAEA,QAAME,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,eAAN;AACD,GAFD;;AAIA,sBACE;AAAA,2BACA,qBACMvB,KADN;AAEE,MAAA,GAAG,EAAEE,IAFP;AAGE,MAAA,KAAK,EAAE,CAHT;AAIE,MAAA,OAAO,EAAGoB,KAAD,IAAWD,WAAW,CAACC,KAAD,CAJjC;AAAA,8BAOE;AAAkB,QAAA,IAAI,EAAEtB,KAAK,CAACgB;AAA9B;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAkB,QAAA,KAAK,EAAEhB,KAAK,CAACc;AAA/B;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAIK,KAAK,GAAC,CAAV,EAAa,CAAb,CAAjB;AAAkC,QAAA,IAAI,EAAE,CAACF,GAAD,EAAMA,GAAN,EAAW,IAAX,EAAiBG,QAAjB;AAAxC;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;IA3BQL,U;;MAAAA,U;AA6BT,eAAehB,KAAf","sourcesContent":["import React, { useRef, useState, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions'\nimport { Grass } from './'\nimport * as THREE from \"three\";\n\n\n// The plane on which plants grow\n\nfunction World(props) {\n  // This reference will give us direct access to the mesh\n  const world = props.world\n  const mesh = useRef()\n  console.log(\"WORLD in EARTH is\")\n  console.log(world)\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n\n\n\n  return (\n    <>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      >\n      {createStalactites(world)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createStalactites(world) {\n  console.log(\"In create stalactites\")\n  console.log(world)\n  const createdStalactites = []\n\n  for (let index = 0; index < world.stalactites.length; index++) {\n    const stalactite = world.stalactites[index]\n    createdStalactites.push( <Stalactite key={createId()} args={stalactite.geometry} position={stalactite.position} colour={stalactite.colour} />)\n  }\n\n  return createdStalactites\n}\n\nfunction Stalactite(props) {\n  const mesh = useRef()\n  console.log(\"ARGS\")\n  console.log(props.args)\n  let [top, bottom, depth, sections] = props.args\n  console.log(\"DEPTH\")\n  console.log(depth)\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n  }\n\n  return (\n    <group>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => handleClick(event)}\n\n      >\n      <cylinderGeometry args={props.args} />\n      <meshToonMaterial color={props.colour}  />\n      <Grass position={[0, depth/2, 0]} args={[top, top, 0.01, sections]} />\n    </mesh>\n    </group>\n  )\n}\n\nexport default World\n"]},"metadata":{},"sourceType":"module"}