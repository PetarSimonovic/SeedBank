{"ast":null,"code":"import _objectSpread from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useRef}from\"react\";import{useFrame}from\"@react-three/fiber\";import{createId}from'../functions';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Balloons(props){// This reference will give us direct access to the mesh\nvar mesh=useRef();// Set up state for the hovered and active state\n// Rotate mesh every frame, this is outside of React without overhead\n// useFrame(() => (mesh.current.rotation.y += 0.002))\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,children:createBalloons(props)}))});}function createBalloons(props){console.log(\"In createBalloons\");console.log(props.balloons.length);var balloonCollection=[];var balloons=props.balloons,removeBalloon=props.removeBalloon,updateSeeds=props.updateSeeds,seeds=props.seeds;console.log(balloons);for(var index=0;index<balloons.length;index++){var balloon=balloons[index];balloonCollection.push(/*#__PURE__*/_jsx(Balloon,{claimed:balloon.claimed,updateSeeds:updateSeeds,removeBalloon:removeBalloon,seeds:seeds,position:balloon.position,index:index,colour:balloon.colour},createId()));}return balloonCollection;}function Balloon(props){var mesh=useRef();useFrame(function(state,delta){return mesh.current.rotation.y+=0.01;});// Set up state for the hovered and active state\n// Rotate mesh every frame, this is outside of React without overhead\n// useFrame(() => (mesh.current.rotation.y += 0.002))\nvar handleClick=function handleClick(){if(!props.claimed){var seedChoice=Math.floor(Math.random()*props.seeds.length);props.updateSeeds(3,seedChoice);props.removeBalloon(props.index);}};return/*#__PURE__*/_jsx(\"group\",{children:/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:0.8,onClick:handleClick,children:[/*#__PURE__*/_jsx(BalloonBody,{colour:props.colour}),/*#__PURE__*/_jsx(BalloonCone,{colour:props.colour,position:[0,-0.18,0]}),/*#__PURE__*/_jsx(BalloonString,{position:[0,-0.15,0]}),/*#__PURE__*/_jsx(BalloonCrate,{position:[0,-0.48,0]})]}))});}function BalloonBody(props){var mesh=useRef();return/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,children:[/*#__PURE__*/_jsx(\"dodecahedronGeometry\",{args:[0.153,8]}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:props.colour})]}));}function BalloonString(props){var mesh=useRef();// Set up state for the hovered and active state\nreturn/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:[0.005,0.005,0.5,3]}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:'#16161D'})]}));}function BalloonCone(props){var mesh=useRef();// Set up state for the hovered and active state\nreturn/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:[0.15,-0.01,0.3,16]}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:props.colour})]}));}function BalloonCrate(props){var mesh=useRef();// Set up state for the hovered and active state\nreturn/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:[0.15,0.15,0.15]}),/*#__PURE__*/_jsx(\"meshToonMaterial\",{color:'#7f5539'})]}));}export default Balloons;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Balloons.jsx"],"names":["React","useRef","useFrame","createId","Balloons","props","mesh","createBalloons","console","log","balloons","length","balloonCollection","removeBalloon","updateSeeds","seeds","index","balloon","push","claimed","position","colour","Balloon","state","delta","current","rotation","y","handleClick","seedChoice","Math","floor","random","BalloonBody","BalloonString","BalloonCone","BalloonCrate"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions'\n\nfunction Balloons(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  return (\n    <>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      >\n      {createBalloons(props)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createBalloons(props) {\n  console.log(\"In createBalloons\")\n  console.log(props.balloons.length)\n  const balloonCollection = []\n  const {balloons, removeBalloon, updateSeeds, seeds} = props\n  console.log(balloons)\n  for (let index = 0; index < balloons.length; index++) {\n  const balloon = balloons[index]\n  balloonCollection.push(\n    <Balloon\n    key={createId()}\n    claimed={balloon.claimed}\n    updateSeeds={updateSeeds}\n    removeBalloon={removeBalloon}\n    seeds={seeds}\n    position={balloon.position}\n    index={index}\n    colour={balloon.colour} />\n  )\n  }\n  return balloonCollection\n}\n\nfunction Balloon(props) {\n  const mesh = useRef()\n\n  useFrame((state, delta) => ( mesh.current.rotation.y += 0.01))\n\n\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  const handleClick = () => {\n    if (!props.claimed) {\n    const seedChoice = Math.floor(Math.random() * props.seeds.length)\n    props.updateSeeds(3, seedChoice)\n    props.removeBalloon(props.index)\n  }\n  }\n\n  return (\n    <group>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={0.8}\n      onClick={handleClick}\n      >\n      <BalloonBody colour={props.colour} />\n      <BalloonCone colour = {props.colour} position={[0, -0.18, 0]}/>\n      <BalloonString position={[0, -0.15, 0]}/>\n      <BalloonCrate position={[0, -0.48, 0]}/>\n    </mesh>\n\n      </group>\n\n  )\n }\n\n function BalloonBody(props) {\n\n   const mesh = useRef()\n\n   return (\n     <mesh\n       {...props}\n       ref={mesh}\n       scale={1}\n       >\n   <dodecahedronGeometry args={[0.153, 8]} />\n   <meshToonMaterial color={props.colour} />\n   </mesh>\n )\n }\n\n function BalloonString(props) {\n   const mesh = useRef()\n   // Set up state for the hovered and active state\n\n\n   return (\n     <mesh\n       {...props}\n       ref={mesh}\n       scale={1}\n       >\n       <cylinderGeometry args={[0.005, 0.005, 0.5, 3]} />\n       <meshToonMaterial color={'#16161D'} />\n     </mesh>\n   )\n  }\n\n  function BalloonCone(props) {\n    const mesh = useRef()\n    // Set up state for the hovered and active state\n\n\n    return (\n      <mesh\n        {...props}\n        ref={mesh}\n        scale={1}\n        >\n        <cylinderGeometry args={[0.15, -0.01, 0.3, 16]} />\n        <meshToonMaterial color={props.colour} />\n      </mesh>\n    )\n   }\n\n   function BalloonCrate(props) {\n     const mesh = useRef()\n     // Set up state for the hovered and active state\n\n\n     return (\n       <mesh\n         {...props}\n         ref={mesh}\n         scale={1}\n         >\n         <boxGeometry args={[0.15, 0.15, 0.15]} />\n         <meshToonMaterial color={'#7f5539'} />\n       </mesh>\n     )\n    }\n\n\nexport default Balloons\n"]},"metadata":{},"sourceType":"module"}