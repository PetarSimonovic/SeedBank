{"ast":null,"code":"import { sample, randomiser, createId, calculateDays } from './';\nimport { Balloon } from '../gameObjects';\nimport api from '../api';\nconst defaultQuantity = 3; // default quantity for a pack of new seeds\n\nexport default async function loadBalloons(seeds, login, id, today) {\n  console.log(seeds);\n  const dateDifference = calculateDays(login, today);\n  let loadedBalloons = await api.getBalloons(id);\n  let balloonData = loadedBalloons.data.data.balloons;\n  console.log(balloonData);\n  let balloons = parseBalloons(balloonData);\n\n  if (seeds.length > 0) {\n    balloons.push(dailyBalloon(seeds));\n  }\n\n  console.log(\"LOADED BALLOONS\");\n  console.log(balloons);\n  return balloons;\n}\n\nfunction parseBalloons(balloonData) {\n  let parsedBalloons = [];\n\n  for (let index = 0; index < balloonData.length; index++) {\n    const balloon = balloonData[index];\n    console.log(balloon);\n    parsedBalloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message));\n  }\n\n  return parsedBalloons;\n}\n\nfunction dailyBalloon(seeds) {\n  const sampleSeeds = sample(seeds);\n  const newSeeds = {\n    type: sampleSeeds.type,\n    quantity: defaultQuantity\n  };\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`;\n  return new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage);\n}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/LoadBalloons.js"],"names":["sample","randomiser","createId","calculateDays","Balloon","api","defaultQuantity","loadBalloons","seeds","login","id","today","console","log","dateDifference","loadedBalloons","getBalloons","balloonData","data","balloons","parseBalloons","length","push","dailyBalloon","parsedBalloons","index","balloon","type","quantity","message","sampleSeeds","newSeeds","dailyMessage"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,aAAtC,QAA0D,IAA1D;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,MAAMC,eAAe,GAAG,CAAxB,C,CAA0B;;AAE1B,eAAe,eAAeC,YAAf,CAA4BC,KAA5B,EAAmCC,KAAnC,EAA0CC,EAA1C,EAA8CC,KAA9C,EAAqD;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA,QAAMM,cAAc,GAAGX,aAAa,CAACM,KAAD,EAAQE,KAAR,CAApC;AACA,MAAII,cAAc,GAAG,MAAMV,GAAG,CAACW,WAAJ,CAAgBN,EAAhB,CAA3B;AACA,MAAIO,WAAW,GAAGF,cAAc,CAACG,IAAf,CAAoBA,IAApB,CAAyBC,QAA3C;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYI,WAAZ;AAGA,MAAIE,QAAQ,GAAGC,aAAa,CAACH,WAAD,CAA5B;;AACA,MAAIT,KAAK,CAACa,MAAN,GAAe,CAAnB,EAAsB;AACpBF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,YAAY,CAACf,KAAD,CAA1B;AACD;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACA,SAAOA,QAAP;AACD;;AAED,SAASC,aAAT,CAAuBH,WAAvB,EAAoC;AAClC,MAAIO,cAAc,GAAG,EAArB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGR,WAAW,CAACI,MAAxC,EAAgDI,KAAK,EAArD,EAAyD;AACvD,UAAMC,OAAO,GAAGT,WAAW,CAACQ,KAAD,CAA3B;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ;AACAF,IAAAA,cAAc,CAACF,IAAf,CAAoB,IAAIlB,OAAJ,CAAYsB,OAAO,CAACC,IAApB,EAA0BD,OAAO,CAACE,QAAlC,EAA4CF,OAAO,CAACG,OAApD,CAApB;AACD;;AACD,SAAOL,cAAP;AACD;;AAED,SAASD,YAAT,CAAsBf,KAAtB,EAA6B;AAC3B,QAAMsB,WAAW,GAAG9B,MAAM,CAACQ,KAAD,CAA1B;AACA,QAAMuB,QAAQ,GAAG;AAACJ,IAAAA,IAAI,EAAEG,WAAW,CAACH,IAAnB;AAAyBC,IAAAA,QAAQ,EAAEtB;AAAnC,GAAjB;AACA,QAAM0B,YAAY,GAAI,GAAED,QAAQ,CAACH,QAAS,MAAKG,QAAQ,CAACJ,IAAK,GAA7D;AACA,SAAO,IAAIvB,OAAJ,CAAY2B,QAAQ,CAACJ,IAArB,EAA2BI,QAAQ,CAACH,QAApC,EAA8CI,YAA9C,CAAP;AACD","sourcesContent":["import {sample, randomiser, createId, calculateDays} from './'\nimport { Balloon } from '../gameObjects'\nimport api from '../api';\n\nconst defaultQuantity = 3 // default quantity for a pack of new seeds\n\nexport default async function loadBalloons(seeds, login, id, today) {\n  console.log(seeds)\n\n  const dateDifference = calculateDays(login, today)\n  let loadedBalloons = await api.getBalloons(id)\n  let balloonData = loadedBalloons.data.data.balloons\n  console.log(balloonData)\n\n\n  let balloons = parseBalloons(balloonData)\n  if (seeds.length > 0) {\n    balloons.push(dailyBalloon(seeds))\n  }\n\n  console.log(\"LOADED BALLOONS\")\n  console.log(balloons)\n  return balloons\n}\n\nfunction parseBalloons(balloonData) {\n  let parsedBalloons = []\n  for (let index = 0; index < balloonData.length; index++) {\n    const balloon = balloonData[index]\n    console.log(balloon)\n    parsedBalloons.push(new Balloon(balloon.type, balloon.quantity, balloon.message))\n  }\n  return parsedBalloons\n}\n\nfunction dailyBalloon(seeds) {\n  const sampleSeeds = sample(seeds)\n  const newSeeds = {type: sampleSeeds.type, quantity: defaultQuantity}\n  const dailyMessage = `${newSeeds.quantity} x ${newSeeds.type}!`\n  return new Balloon(newSeeds.type, newSeeds.quantity, dailyMessage)\n}\n"]},"metadata":{},"sourceType":"module"}