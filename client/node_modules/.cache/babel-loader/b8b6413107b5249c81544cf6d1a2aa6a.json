{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/SeedCloud.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { RoundedBox, Text, Billboard } from '@react-three/drei';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions'; // Creates a button that 'clicks'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst seedTextColours = {\n  type: \"#293241\",\n  outline: \"#b1b5c8\"\n};\nconst selectedSeedTextColours = {\n  type: \"#b1b5c8\",\n  outline: \"#293241\"\n};\nconst fontSize = 0.1;\nconst fontZ = 2;\nconst fontY = 1.5;\n\nfunction SeedCloud(props) {\n  _s();\n\n  console.log(\"Props in SeedBox\");\n  console.log(props);\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      scale: 1,\n      children: seedSelectors(props)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(SeedCloud, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c = SeedCloud;\n\nfunction seedSelectors(props) {\n  console.log(\"PROPS in SEEDSELECTORS\");\n  console.log(props);\n  let seedSelectors = [];\n  let fontX = 0;\n\n  for (let index = 0; index < props.seeds.length; index++) {\n    console.log(\"Generating seedselectors\");\n    console.log(\"INDEX \" + index);\n    let seed = props.seeds[index];\n\n    if (seed.quantity === 0) {\n      continue;\n    }\n\n    fontX += 1;\n    let colours = {};\n    seed.type === props.chosenSeed ? colours = selectedSeedTextColours : colours = seedTextColours;\n    seedSelectors.push( /*#__PURE__*/_jsxDEV(SeedText, {\n      selectSeed: props.selectSeed,\n      toggleSeeds: props.toggleSeeds,\n      seed: seed,\n      colours: colours,\n      index: index,\n      fontX: fontX\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this));\n  }\n\n  if (seedSelectors.length === 0) {\n    seedSelectors.push( /*#__PURE__*/_jsxDEV(NoSeedText, {\n      colours: seedTextColours,\n      index: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this));\n  }\n\n  console.log(seedSelectors);\n  return seedSelectors;\n}\n\nfunction SeedText(props) {\n  _s2();\n\n  const seed = props.seed;\n  const mesh = useRef();\n  const [selected, setSelected] = useState(false);\n\n  const handleClick = event => {\n    event.stopPropagation();\n    console.log(seed.type);\n    props.selectSeed(seed.type, props.index);\n    props.toggleSeeds();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        onClick: event => handleClick(event),\n        position: [props.fontX, fontY, fontZ],\n        outlineWidth: fontSize,\n        outlineColor: props.colours.outline,\n        color: props.colours.type,\n        rotation: [0, 0, 0],\n        children: [\"seed: \", seed.type, \" \", '\\n', \"quantity: \", seed.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(SeedText, \"SnFYePOToJlSUM/A10+S8mKt7G0=\");\n\n_c2 = SeedText;\n\nfunction NoSeedText(props) {\n  _s3();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 0.25,\n        position: [1, 3, 1],\n        outlineWidth: 0.25,\n        outlineColor: props.colours.outline,\n        color: props.colours.type,\n        rotation: [0, 0, 0],\n        children: \"No seeds available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 11\n  }, this);\n}\n\n_s3(NoSeedText, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c3 = NoSeedText;\nexport default SeedCloud;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SeedCloud\");\n$RefreshReg$(_c2, \"SeedText\");\n$RefreshReg$(_c3, \"NoSeedText\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/SeedCloud.jsx"],"names":["RoundedBox","Text","Billboard","React","useRef","useState","useEffect","createId","seedTextColours","type","outline","selectedSeedTextColours","fontSize","fontZ","fontY","SeedCloud","props","console","log","mesh","seedSelectors","fontX","index","seeds","length","seed","quantity","colours","chosenSeed","push","selectSeed","toggleSeeds","SeedText","selected","setSelected","handleClick","event","stopPropagation","NoSeedText"],"mappings":"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","sourcesContent":["import { RoundedBox, Text, Billboard } from '@react-three/drei'\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../functions'\n\n// Creates a button that 'clicks'\n\nconst seedTextColours = {type: \"#293241\", outline: \"#b1b5c8\"}\nconst selectedSeedTextColours = {type: \"#b1b5c8\", outline: \"#293241\"}\nconst fontSize = 0.1\nconst fontZ = 2\nconst fontY = 1.5\n\nfunction SeedCloud(props) {\n\n  console.log(\"Props in SeedBox\")\n  console.log(props)\n\n  const mesh = useRef()\n\n\n\n  return (\n  <>\n  <mesh\n    {...props}\n    ref={mesh}\n    scale={1}\n    >\n   {seedSelectors(props)}\n  </mesh>\n  </>\n\n)\n}\n\nfunction seedSelectors(props) {\n  console.log(\"PROPS in SEEDSELECTORS\")\n  console.log(props)\n  let seedSelectors = []\n  let fontX = 0\n  for (let index = 0; index < props.seeds.length; index++) {\n    console.log(\"Generating seedselectors\")\n    console.log(\"INDEX \" + index)\n    let seed = props.seeds[index]\n    if (seed.quantity === 0) { continue }\n    fontX += 1\n    let colours = {}\n    seed.type === props.chosenSeed ? colours = selectedSeedTextColours : colours = seedTextColours\n    seedSelectors.push( <SeedText selectSeed={props.selectSeed} toggleSeeds={props.toggleSeeds} seed={seed} colours={colours} index={index} fontX={fontX} />)\n  }\n  if (seedSelectors.length === 0) {\n    seedSelectors.push( <NoSeedText colours={seedTextColours} index={1} />)\n  }\n  console.log(seedSelectors)\n  return seedSelectors\n}\n\n\nfunction SeedText(props) {\n  const seed = props.seed\n  const mesh = useRef()\n  const [selected, setSelected] = useState(false)\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n    console.log(seed.type)\n    props.selectSeed(seed.type, props.index)\n    props.toggleSeeds()\n  }\n\n\n  return (\n      <mesh\n        {...props}\n        ref={mesh}\n        >\n        <Billboard\n        follow={true}\n        lockX={false}\n        lockY={false}\n        lockZ={false} >\n        < Text\n        fontSize={fontSize}\n        onClick={(event) => handleClick(event)}\n        position={[props.fontX, fontY, fontZ]}\n        outlineWidth={fontSize}\n        outlineColor={props.colours.outline}\n        color={props.colours.type}\n        rotation={[0, 0, 0]} >\n          seed: {seed.type} {'\\n'}\n          quantity: {seed.quantity}\n        </ Text>\n        </ Billboard>\n      </mesh>\n      )\n    }\n\nfunction NoSeedText(props) {\n      const mesh = useRef()\n\n      return (\n          <mesh\n            {...props}\n            ref={mesh}\n            >\n            <Billboard\n            follow={true}\n            lockX={false}\n            lockY={false}\n            lockZ={false} >\n            < Text\n            fontSize={0.25}\n            position={[1, 3, 1]}\n            outlineWidth={0.25}\n            outlineColor={props.colours.outline}\n            color={props.colours.type}\n            rotation={[0, 0, 0]} >\n              No seeds available\n            </ Text>\n            </Billboard>\n          </mesh>\n        )\n  }\n\n\nexport default SeedCloud\n"]},"metadata":{},"sourceType":"module"}