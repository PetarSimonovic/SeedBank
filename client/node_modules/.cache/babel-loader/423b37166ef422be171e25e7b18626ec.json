{"ast":null,"code":"import _toConsumableArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'../style/App.css';import React,{useState,useEffect,Suspense}from\"react\";import{calculateAchievement,saveGarden,sendBalloon,createPlant,loadBalloons,makeFriendRequest,makeFriends,sample}from'../functions';import{Balloon}from'../gameObjects';import{Canvas}from\"@react-three/fiber\";import{Garden,Camera,Sun,World,Firmament,Friends,Cloud,Balloons,SeedBox,IntroBalloons}from'../components';// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SeedBank(props){var _useState=useState(props.garden),_useState2=_slicedToArray(_useState,2),plants=_useState2[0],setPlants=_useState2[1];//  an array of plant components\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),chosenSeed=_useState4[0],setChosenseed=_useState4[1];// contains the type of seed if chosen, or null if no seed is currently selected\nvar _useState5=useState(props.seeds),_useState6=_slicedToArray(_useState5,2),seeds=_useState6[0],setSeeds=_useState6[1];//  an array of the player's available seeds\nvar _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),seedIndex=_useState8[0],setSeedindex=_useState8[1];//  the index within seeds of the chosenSeed\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),balloons=_useState10[0],setBalloons=_useState10[1];var sowPlant=function sowPlant(event){if(chosenSeed){var newPlant=createPlant(event,chosenSeed);setPlants(function(prev){return[newPlant].concat(_toConsumableArray(prev));});removeSeed();}};var removeSeed=function removeSeed(){setChosenseed(\"\");updateSeeds(-1,chosenSeed);saveGarden(props.id,plants,props.world,props.worldChosen,seeds);};var selectSeed=function selectSeed(selectedSeed,index){var seed=seeds[index];if(seeds[index].quantity>0){setChosenseed(selectedSeed);setSeedindex(index);}};var updateSeeds=function updateSeeds(increment,type){var updatedSeeds=_toConsumableArray(seeds);var index=updatedSeeds.findIndex(function(seed){return seed.type===type;});if(index===-1){console.log(\"adding newSeed \"+type);setSeeds(function(prev){return[].concat(_toConsumableArray(prev),[{type:type,quantity:increment}]);});}else{updatedSeeds[index].quantity+=increment;setSeeds(updatedSeeds);}console.log(seeds);setSeedindex(null);console.log(plants.length);};var checkAchievements=function checkAchievements(){console.log(\"CHECKING ACHIEVEMENTS\");var plantCount=plants.length;console.log(\"Plants \"+plantCount);console.log(\"Seeds \"+seeds.length);console.log(plantCount);var fivePlants=plantCount%5;var achievementCount=plantCount/5;// how many multuples of five?\nvar startingSeeds=2;// offset for the starting seeds\nvar achievementTracker=achievementCount+startingSeeds;console.log(\"AchievementTracker \"+achievementTracker);if(fivePlants===0&&plantCount!==0&&seeds.length<achievementTracker){// if statement checks if plantCount is multiple of 5 and whether the seeds for that multiple have been awarded\nconsole.log(\"Achievement!\");var newSeed=calculateAchievement(seeds,props.id,plantCount);console.log(newSeed);setSeeds(function(prev){return[].concat(_toConsumableArray(prev),[{type:newSeed.type,quantity:0}]);});}};var sendFriendRequest=function sendFriendRequest(sentence){makeFriendRequest(props.id,props.userName,sentence,props.world);};var acceptFriend=function acceptFriend(friendName){makeFriends(props.id,props.userName,friendName,props.world);};var sendPlant=function sendPlant(friendName,friendId){console.log(\"Sending \".concat(chosenSeed,\" to \").concat(friendName,\" \").concat(friendId));if(chosenSeed){var message=\"\".concat(props.userName,\" sent you \",'\\n',\" a \").concat(chosenSeed,\" seed!\");sendBalloon(friendId,chosenSeed,1,message,props.userName);console.log(message);console.log(\"Sending \".concat(chosenSeed,\" to \").concat(friendName,\" \").concat(friendId));removeSeed();}else{console.log(\"No seed selected\");}};var buyBalloon=function buyBalloon(colour){console.log(\"Buying \".concat(colour,\" balloon\"));var seed=sample(seeds);var message=\"Bought: \".concat(seed.type,\" x 3!\");sendBalloon(props.id,seed.type,3,message,\"SeedBank\",colour);};useEffect(function(){console.log(\"in uSEEFFECT\");console.log(seeds);console.log(plants.length);console.log(\"Calling saveGarden\");saveGarden(props.id,plants,props.world,props.worldChosen,seeds);checkAchievements();});return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Canvas,{id:\"canvas\",camera:{position:[0,2,3.5]},children:[/*#__PURE__*/_jsx(Camera,{}),/*#__PURE__*/_jsxs(Suspense,{fallback:console.log(\"loading\"),children:[/*#__PURE__*/_jsx(Garden,{friend:false,sowPlant:sowPlant,position:[0,0,0],world:props.world,seeds:seeds}),plants,/*#__PURE__*/_jsx(Sun,{}),/*#__PURE__*/_jsx(Firmament,{}),/*#__PURE__*/_jsx(Friends,{sendPlant:sendPlant,userId:props.id})]}),props.worldChosen?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Balloons,{updateSeeds:updateSeeds,acceptFriend:acceptFriend,userId:props.id,today:props.today,lastLogin:props.lastLogin,seeds:seeds}),/*#__PURE__*/_jsx(Cloud,{seeds:seeds,chosenSeed:chosenSeed,buyBalloon:buyBalloon,position:[0,-0.8,1],sendFriendRequest:sendFriendRequest,selectSeed:selectSeed})]}):/*#__PURE__*/_jsx(IntroBalloons,{saveWorld:props.saveWorld,newWorld:props.newWorld})]})});}export default SeedBank;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx"],"names":["React","useState","useEffect","Suspense","calculateAchievement","saveGarden","sendBalloon","createPlant","loadBalloons","makeFriendRequest","makeFriends","sample","Balloon","Canvas","Garden","Camera","Sun","World","Firmament","Friends","Cloud","Balloons","SeedBox","IntroBalloons","SeedBank","props","garden","plants","setPlants","chosenSeed","setChosenseed","seeds","setSeeds","seedIndex","setSeedindex","balloons","setBalloons","sowPlant","event","newPlant","prev","removeSeed","updateSeeds","id","world","worldChosen","selectSeed","selectedSeed","index","seed","quantity","increment","type","updatedSeeds","findIndex","console","log","length","checkAchievements","plantCount","fivePlants","achievementCount","startingSeeds","achievementTracker","newSeed","sendFriendRequest","sentence","userName","acceptFriend","friendName","sendPlant","friendId","message","buyBalloon","colour","position","today","lastLogin","saveWorld","newWorld"],"mappings":"keAAA,MAAO,kBAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,QAArC,KAAqD,OAArD,CACA,OAASC,oBAAT,CAA+BC,UAA/B,CAA2CC,WAA3C,CAAwDC,WAAxD,CAAqEC,YAArE,CAAmFC,iBAAnF,CAAsGC,WAAtG,CAAmHC,MAAnH,KAAiI,cAAjI,CACA,OAASC,OAAT,KAAwB,gBAAxB,CACA,OAASC,MAAT,KAAuB,oBAAvB,CACA,OAASC,MAAT,CAAiBC,MAAjB,CAAyBC,GAAzB,CAA8BC,KAA9B,CAAqCC,SAArC,CAAgDC,OAAhD,CAAyDC,KAAzD,CAAgEC,QAAhE,CAA0EC,OAA1E,CAAmFC,aAAnF,KAAwG,eAAxG,CAIA;AACA;AAGA;AACA;6IAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CAGvB,cAA4BxB,QAAQ,CAACwB,KAAK,CAACC,MAAP,CAApC,wCAAOC,MAAP,eAAeC,SAAf,eAAmD;AACnD,eAAoC3B,QAAQ,CAAC,EAAD,CAA5C,yCAAO4B,UAAP,eAAmBC,aAAnB,eAAiD;AACjD,eAA0B7B,QAAQ,CAACwB,KAAK,CAACM,KAAP,CAAlC,yCAAOA,KAAP,eAAcC,QAAd,eAAgD;AAChD,eAAkC/B,QAAQ,CAAC,IAAD,CAA1C,yCAAOgC,SAAP,eAAkBC,YAAlB,eAAiD;AACjD,eAAgCjC,QAAQ,CAAC,EAAD,CAAxC,0CAAOkC,QAAP,gBAAiBC,WAAjB,gBAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAEC,KAAF,CAAa,CAC5B,GAAIT,UAAJ,CAAgB,CACd,GAAMU,CAAAA,QAAQ,CAAGhC,WAAW,CAAC+B,KAAD,CAAQT,UAAR,CAA5B,CACAD,SAAS,CAAE,SAACY,IAAD,CAAU,CACnB,OAAQD,QAAR,4BAAqBC,IAArB,GACD,CAFQ,CAAT,CAGAC,UAAU,GACX,CACF,CARD,CAUA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBX,aAAa,CAAC,EAAD,CAAb,CACAY,WAAW,CAAC,CAAC,CAAF,CAAKb,UAAL,CAAX,CACAxB,UAAU,CAACoB,KAAK,CAACkB,EAAP,CAAWhB,MAAX,CAAmBF,KAAK,CAACmB,KAAzB,CAAgCnB,KAAK,CAACoB,WAAtC,CAAmDd,KAAnD,CAAV,CACD,CAJD,CAMA,GAAMe,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,YAAD,CAAeC,KAAf,CAAyB,CAC1C,GAAMC,CAAAA,IAAI,CAAGlB,KAAK,CAACiB,KAAD,CAAlB,CACA,GAAIjB,KAAK,CAACiB,KAAD,CAAL,CAAaE,QAAb,CAAwB,CAA5B,CAA+B,CAC7BpB,aAAa,CAACiB,YAAD,CAAb,CACAb,YAAY,CAACc,KAAD,CAAZ,CACD,CACF,CAND,CAQA,GAAMN,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACS,SAAD,CAAYC,IAAZ,CAAqB,CACvC,GAAMC,CAAAA,YAAY,oBAAOtB,KAAP,CAAlB,CACA,GAAMiB,CAAAA,KAAK,CAAGK,YAAY,CAACC,SAAb,CAAuB,SAAAL,IAAI,QAAIA,CAAAA,IAAI,CAACG,IAAL,GAAcA,IAAlB,EAA3B,CAAd,CACA,GAAIJ,KAAK,GAAK,CAAC,CAAf,CAAkB,CAChBO,OAAO,CAACC,GAAR,CAAY,kBAAoBJ,IAAhC,EACApB,QAAQ,CAAE,SAACQ,IAAD,CAAU,CAClB,mCAAWA,IAAX,GAAiB,CAACY,IAAI,CAAEA,IAAP,CAAaF,QAAQ,CAAEC,SAAvB,CAAjB,GACD,CAFO,CAAR,CAGD,CALD,IAKO,CACLE,YAAY,CAACL,KAAD,CAAZ,CAAoBE,QAApB,EAAgCC,SAAhC,CACAnB,QAAQ,CAACqB,YAAD,CAAR,CACD,CACDE,OAAO,CAACC,GAAR,CAAYzB,KAAZ,EACAG,YAAY,CAAC,IAAD,CAAZ,CACAqB,OAAO,CAACC,GAAR,CAAY7B,MAAM,CAAC8B,MAAnB,EACD,CAfD,CAkBA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BH,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACA,GAAMG,CAAAA,UAAU,CAAGhC,MAAM,CAAC8B,MAA1B,CACAF,OAAO,CAACC,GAAR,CAAY,UAAYG,UAAxB,EACAJ,OAAO,CAACC,GAAR,CAAY,SAAWzB,KAAK,CAAC0B,MAA7B,EACAF,OAAO,CAACC,GAAR,CAAYG,UAAZ,EACA,GAAMC,CAAAA,UAAU,CAAGD,UAAU,CAAG,CAAhC,CACA,GAAME,CAAAA,gBAAgB,CAAGF,UAAU,CAAG,CAAtC,CAAwC;AACxC,GAAMG,CAAAA,aAAa,CAAG,CAAtB,CAAwB;AACxB,GAAMC,CAAAA,kBAAkB,CAAGF,gBAAgB,CAAGC,aAA9C,CACAP,OAAO,CAACC,GAAR,CAAY,sBAAwBO,kBAApC,EACA,GAAIH,UAAU,GAAK,CAAf,EAAoBD,UAAU,GAAK,CAAnC,EAAwC5B,KAAK,CAAC0B,MAAN,CAAeM,kBAA3D,CAA+E,CAAE;AAC/ER,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,GAAMQ,CAAAA,OAAO,CAAG5D,oBAAoB,CAAC2B,KAAD,CAAQN,KAAK,CAACkB,EAAd,CAAkBgB,UAAlB,CAApC,CACAJ,OAAO,CAACC,GAAR,CAAYQ,OAAZ,EACAhC,QAAQ,CAAE,SAACQ,IAAD,CAAU,CAClB,mCAAWA,IAAX,GAAiB,CAACY,IAAI,CAAEY,OAAO,CAACZ,IAAf,CAAqBF,QAAQ,CAAE,CAA/B,CAAjB,GACD,CAFO,CAAR,CAGD,CACF,CAnBD,CAqBA,GAAMe,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,QAAD,CAAc,CACtCzD,iBAAiB,CAACgB,KAAK,CAACkB,EAAP,CAAWlB,KAAK,CAAC0C,QAAjB,CAA2BD,QAA3B,CAAqCzC,KAAK,CAACmB,KAA3C,CAAjB,CACD,CAFD,CAIA,GAAMwB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,UAAD,CAAgB,CACnC3D,WAAW,CAACe,KAAK,CAACkB,EAAP,CAAWlB,KAAK,CAAC0C,QAAjB,CAA2BE,UAA3B,CAAuC5C,KAAK,CAACmB,KAA7C,CAAX,CACD,CAFD,CAIA,GAAM0B,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACD,UAAD,CAAaE,QAAb,CAAyB,CACzChB,OAAO,CAACC,GAAR,mBAAuB3B,UAAvB,gBAAwCwC,UAAxC,aAAsDE,QAAtD,GACA,GAAI1C,UAAJ,CAAgB,CACd,GAAM2C,CAAAA,OAAO,WAAM/C,KAAK,CAAC0C,QAAZ,cAAiC,IAAjC,eAA2CtC,UAA3C,UAAb,CACAvB,WAAW,CAACiE,QAAD,CAAW1C,UAAX,CAAuB,CAAvB,CAA0B2C,OAA1B,CAAmC/C,KAAK,CAAC0C,QAAzC,CAAX,CACAZ,OAAO,CAACC,GAAR,CAAYgB,OAAZ,EACAjB,OAAO,CAACC,GAAR,mBAAuB3B,UAAvB,gBAAwCwC,UAAxC,aAAsDE,QAAtD,GACA9B,UAAU,GACX,CAND,IAMO,CACLc,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACD,CAEF,CAZD,CAcA,GAAMiB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAAY,CAC7BnB,OAAO,CAACC,GAAR,kBAAsBkB,MAAtB,cACA,GAAMzB,CAAAA,IAAI,CAAGtC,MAAM,CAACoB,KAAD,CAAnB,CACA,GAAMyC,CAAAA,OAAO,mBAAcvB,IAAI,CAACG,IAAnB,SAAb,CACA9C,WAAW,CAACmB,KAAK,CAACkB,EAAP,CAAWM,IAAI,CAACG,IAAhB,CAAsB,CAAtB,CAAyBoB,OAAzB,CAAkC,UAAlC,CAA8CE,MAA9C,CAAX,CACD,CALD,CAOAxE,SAAS,CAAC,UAAM,CACdqD,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAD,OAAO,CAACC,GAAR,CAAYzB,KAAZ,EACAwB,OAAO,CAACC,GAAR,CAAY7B,MAAM,CAAC8B,MAAnB,EACAF,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACAnD,UAAU,CAACoB,KAAK,CAACkB,EAAP,CAAWhB,MAAX,CAAmBF,KAAK,CAACmB,KAAzB,CAAgCnB,KAAK,CAACoB,WAAtC,CAAmDd,KAAnD,CAAV,CACA2B,iBAAiB,GAClB,CAPQ,CAAT,CAUA,mBACA,YAAK,SAAS,CAAC,KAAf,uBACE,MAAC,MAAD,EAAQ,EAAE,CAAC,QAAX,CAAoB,MAAM,CAAE,CAAEiB,QAAQ,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,GAAP,CAAZ,CAA5B,wBACE,KAAC,MAAD,IADF,cAEE,MAAC,QAAD,EAAU,QAAQ,CAAEpB,OAAO,CAACC,GAAR,CAAY,SAAZ,CAApB,wBACA,KAAC,MAAD,EACA,MAAM,CAAE,KADR,CAEA,QAAQ,CAAEnB,QAFV,CAGA,QAAQ,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHV,CAIA,KAAK,CAAEZ,KAAK,CAACmB,KAJb,CAKA,KAAK,CAAEb,KALP,EADA,CAQCJ,MARD,cASA,KAAC,GAAD,IATA,cAUA,KAAC,SAAD,IAVA,cAWA,KAAC,OAAD,EAAS,SAAS,CAAE2C,SAApB,CAA+B,MAAM,CAAE7C,KAAK,CAACkB,EAA7C,EAXA,GAFF,CAeElB,KAAK,CAACoB,WAAN,cACC,wCACA,KAAC,QAAD,EACC,WAAW,CAAEH,WADd,CAEC,YAAY,CAAE0B,YAFf,CAGC,MAAM,CAAE3C,KAAK,CAACkB,EAHf,CAIC,KAAK,CAAElB,KAAK,CAACmD,KAJd,CAKC,SAAS,CAAEnD,KAAK,CAACoD,SALlB,CAMC,KAAK,CAAE9C,KANR,EADA,cAQA,KAAC,KAAD,EACC,KAAK,CAAEA,KADR,CAEC,UAAU,CAAEF,UAFb,CAGC,UAAU,CAAE4C,UAHb,CAIC,QAAQ,CAAE,CAAC,CAAD,CAAI,CAAC,GAAL,CAAU,CAAV,CAJX,CAKC,iBAAiB,CAAER,iBALpB,CAMC,UAAU,CAAEnB,UANb,EARA,GADD,cAiBE,KAAE,aAAF,EACE,SAAS,CAAErB,KAAK,CAACqD,SADnB,CAEE,QAAQ,CAAErD,KAAK,CAACsD,QAFlB,EAhCJ,GADF,EADA,CAyCD,CAED,cAAevD,CAAAA,QAAf","sourcesContent":["import '../style/App.css';\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport { calculateAchievement, saveGarden, sendBalloon, createPlant, loadBalloons, makeFriendRequest, makeFriends, sample } from '../functions'\nimport { Balloon } from '../gameObjects'\nimport { Canvas } from \"@react-three/fiber\";\nimport { Garden, Camera, Sun, World, Firmament, Friends, Cloud, Balloons, SeedBox, IntroBalloons } from '../components';\n\n\n\n// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\n\n// REFACTOR: avoid assiging state from index as state here (eg useState(props.seeds) - leads to confusion and makes it harder to troubleshoot\n// This affects garden and seeds currently, which are loaded via login, passed to state in index, then passed here where they are updated and saved\n\nfunction SeedBank(props) {\n\n\n  const [plants, setPlants] = useState(props.garden) //  an array of plant components\n  const [chosenSeed, setChosenseed] = useState(\"\") // contains the type of seed if chosen, or null if no seed is currently selected\n  const [seeds, setSeeds] = useState(props.seeds) //  an array of the player's available seeds\n  const [seedIndex, setSeedindex] = useState(null) //  the index within seeds of the chosenSeed\n  const [balloons, setBalloons] = useState([])\n\n\n  const sowPlant = ( event ) => {\n    if (chosenSeed) {\n      const newPlant = createPlant(event, chosenSeed)\n      setPlants( (prev) => {\n        return [newPlant, ...prev]\n      })\n      removeSeed()\n    }\n  }\n\n  const removeSeed = () => {\n    setChosenseed(\"\")\n    updateSeeds(-1, chosenSeed)\n    saveGarden(props.id, plants, props.world, props.worldChosen, seeds)\n  }\n\n  const selectSeed = (selectedSeed, index) => {\n    const seed = seeds[index]\n    if (seeds[index].quantity > 0) {\n      setChosenseed(selectedSeed)\n      setSeedindex(index)\n    }\n  }\n\n  const updateSeeds = (increment, type) => {\n    const updatedSeeds = [...seeds]\n    const index = updatedSeeds.findIndex(seed => seed.type === type)\n    if (index === -1) {\n      console.log(\"adding newSeed \" + type)\n      setSeeds( (prev) => {\n        return [...prev, {type: type, quantity: increment}]\n      })\n    } else {\n      updatedSeeds[index].quantity += increment\n      setSeeds(updatedSeeds)\n    }\n    console.log(seeds)\n    setSeedindex(null)\n    console.log(plants.length)\n  }\n\n\n  const checkAchievements = () => {\n    console.log(\"CHECKING ACHIEVEMENTS\")\n    const plantCount = plants.length\n    console.log(\"Plants \" + plantCount)\n    console.log(\"Seeds \" + seeds.length)\n    console.log(plantCount)\n    const fivePlants = plantCount % 5\n    const achievementCount = plantCount / 5 // how many multuples of five?\n    const startingSeeds = 2 // offset for the starting seeds\n    const achievementTracker = achievementCount + startingSeeds\n    console.log(\"AchievementTracker \" + achievementTracker)\n    if (fivePlants === 0 && plantCount !== 0 && seeds.length < achievementTracker) { // if statement checks if plantCount is multiple of 5 and whether the seeds for that multiple have been awarded\n      console.log(\"Achievement!\")\n      const newSeed = calculateAchievement(seeds, props.id, plantCount)\n      console.log(newSeed)\n      setSeeds( (prev) => {\n        return [...prev, {type: newSeed.type, quantity: 0}]\n      })\n    }\n  }\n\n  const sendFriendRequest = (sentence) => {\n    makeFriendRequest(props.id, props.userName, sentence, props.world)\n  }\n\n  const acceptFriend = (friendName) => {\n    makeFriends(props.id, props.userName, friendName, props.world)\n  }\n\n  const sendPlant = (friendName, friendId) =>{\n    console.log(`Sending ${chosenSeed} to ${friendName} ${friendId}`)\n    if (chosenSeed) {\n      const message = `${props.userName} sent you ${'\\n'} a ${chosenSeed} seed!`\n      sendBalloon(friendId, chosenSeed, 1, message, props.userName)\n      console.log(message)\n      console.log(`Sending ${chosenSeed} to ${friendName} ${friendId}`)\n      removeSeed()\n    } else {\n      console.log(\"No seed selected\")\n    }\n\n  }\n\n  const buyBalloon = (colour) => {\n    console.log(`Buying ${colour} balloon`)\n    const seed = sample(seeds)\n    const message = `Bought: ${seed.type} x 3!`\n    sendBalloon(props.id, seed.type, 3, message, \"SeedBank\", colour)\n  }\n\n  useEffect(() => {\n    console.log(\"in uSEEFFECT\")\n    console.log(seeds)\n    console.log(plants.length)\n    console.log(\"Calling saveGarden\")\n    saveGarden(props.id, plants, props.world, props.worldChosen, seeds)\n    checkAchievements()\n  });\n\n\n  return (\n  <div className=\"App\">\n    <Canvas id=\"canvas\" camera={{ position: [0, 2, 3.5] }}>\n      <Camera />\n      <Suspense fallback={console.log(\"loading\")}>\n      <Garden\n      friend={false}\n      sowPlant={sowPlant}\n      position={[0, 0, 0]}\n      world={props.world}\n      seeds={seeds}\n       />\n      {plants}\n      <Sun />\n      <Firmament />\n      <Friends sendPlant={sendPlant} userId={props.id}/>\n     </Suspense>\n     {props.worldChosen ?\n       <>\n       <Balloons\n        updateSeeds={updateSeeds}\n        acceptFriend={acceptFriend}\n        userId={props.id}\n        today={props.today}\n        lastLogin={props.lastLogin}\n        seeds={seeds} />\n       <Cloud\n        seeds={seeds}\n        chosenSeed={chosenSeed}\n        buyBalloon={buyBalloon}\n        position={[0, -0.8, 1]}\n        sendFriendRequest={sendFriendRequest}\n        selectSeed={selectSeed} />\n        </> :\n        < IntroBalloons\n          saveWorld={props.saveWorld}\n          newWorld={props.newWorld}\n        /> }\n    </Canvas>\n  </div>\n  );\n}\n\nexport default SeedBank;\n"]},"metadata":{},"sourceType":"module"}