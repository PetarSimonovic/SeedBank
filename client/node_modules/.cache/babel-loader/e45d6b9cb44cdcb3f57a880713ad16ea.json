{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Camera.jsx\",\n    _s = $RefreshSig$();\n\nimport { extend, useThree, useFrame } from \"@react-three/fiber\";\nimport React, { useRef } from \"react\";\nimport { OrbitControls } from 'three-stdlib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nextend({\n  OrbitControls\n});\n\nconst Camera = () => {\n  _s();\n\n  // Get a reference to the Three.js Camera, and the canvas html element.\n  // We need these to setup the OrbitControls component.\n  // https://threejs.org/docs/#examples/en/controls/OrbitControls\n  const {\n    camera,\n    gl: {\n      domElement\n    }\n  } = useThree(); // Ref to the controls, so that we can update them on every frame using useFrame\n\n  const controls = useRef();\n  useFrame(state => controls.current.update());\n  return /*#__PURE__*/_jsxDEV(\"orbitControls\", {\n    ref: controls,\n    position: [0, -10, 0],\n    args: [camera, domElement],\n    autoRotate: false,\n    autoRotateSpeed: 0.2,\n    minDistance: 0.5,\n    enableZoom: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Camera, \"vDM9tXfsfHfqf5tmXjoAFoxFMfo=\", false, function () {\n  return [useThree, useFrame];\n});\n\n_c = Camera;\nexport default Camera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Camera.jsx"],"names":["extend","useThree","useFrame","React","useRef","OrbitControls","Camera","camera","gl","domElement","controls","state","current","update"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,oBAA3C;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,aAAT,QAA8B,cAA9B;;AACAL,MAAM,CAAC;AAAEK,EAAAA;AAAF,CAAD,CAAN;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB;AACA;AACA;AACA,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,EAAE,EAAE;AAAEC,MAAAA;AAAF;AAFA,MAGFR,QAAQ,EAHZ,CAJmB,CAQnB;;AACA,QAAMS,QAAQ,GAAGN,MAAM,EAAvB;AACAF,EAAAA,QAAQ,CAAES,KAAD,IAAWD,QAAQ,CAACE,OAAT,CAAiBC,MAAjB,EAAZ,CAAR;AACA,sBAAO;AACC,IAAA,GAAG,EAAEH,QADN;AAEC,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,EAAS,CAAT,CAFX;AAGC,IAAA,IAAI,EAAE,CAACH,MAAD,EAASE,UAAT,CAHP;AAIC,IAAA,UAAU,EAAE,KAJb;AAKC,IAAA,eAAe,EAAE,GALlB;AAMC,IAAA,WAAW,EAAE,GANd;AAOC,IAAA,UAAU,EAAE;AAPb;AAAA;AAAA;AAAA;AAAA,UAAP;AASD,CApBD;;GAAMH,M;UAOAL,Q,EAGJC,Q;;;KAVII,M;AAsBN,eAAeA,MAAf","sourcesContent":["import { extend, useThree, useFrame } from \"@react-three/fiber\";\nimport React, { useRef } from \"react\";\nimport { OrbitControls } from 'three-stdlib';\nextend({ OrbitControls });\n\n\nconst Camera = () => {\n  // Get a reference to the Three.js Camera, and the canvas html element.\n  // We need these to setup the OrbitControls component.\n  // https://threejs.org/docs/#examples/en/controls/OrbitControls\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n  // Ref to the controls, so that we can update them on every frame using useFrame\n  const controls = useRef();\n  useFrame((state) => controls.current.update());\n  return <orbitControls\n          ref={controls}\n          position={[0, -10, 0]}\n          args={[camera, domElement]}\n          autoRotate={false}\n          autoRotateSpeed={0.2}\n          minDistance={0.5}\n          enableZoom={false}\n          />;\n};\n\nexport default Camera\n"]},"metadata":{},"sourceType":"module"}