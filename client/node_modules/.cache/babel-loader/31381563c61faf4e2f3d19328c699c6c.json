{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Clouds/SeedCloud.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Text, Billboard } from '@react-three/drei';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../../functions';\nimport { Cloud } from '../'; // Creates a button that 'clicks'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst seedTextColours = {\n  type: \"#293241\",\n  outline: \"#b1b5c8\"\n};\nconst selectedSeedTextColours = {\n  type: \"#b1b5c8\",\n  outline: \"#293241\"\n};\nconst fontSize = 0.15;\nconst fontZ = 1;\nconst fontY = 2;\n\nfunction SeedCloud(props) {\n  _s();\n\n  const mesh = useRef();\n  const seeds = getAvailableSeeds(props.seeds);\n  const [option, setOption] = useState(0);\n  const [on, setOn] = useState(false);\n  const [seed, setSeed] = useState({}); // eventhandler for Cloud\n\n  useEffect(() => {\n    setOption(option);\n    console.log(option);\n\n    if (seeds.length === 0) {\n      closeDown();\n    }\n  });\n\n  const closeDown = () => {\n    setOn(false);\n    setOption(0);\n  };\n\n  const handleClick = () => {\n    setOn(true);\n    console.log(option);\n    setOption(prev => prev + 1);\n    option < seeds.length ? setSeed(seeds[option]) : closeDown();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      position: [0, 0.5, 0],\n      ref: mesh,\n      scale: 1,\n      children: [/*#__PURE__*/_jsxDEV(Cloud, {\n        handleClick: handleClick,\n        text: on ? seed.type : 'seeds'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), on ? seedSelectors(props, seed, option) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(SeedCloud, \"R+ORoC9f3rBq8x50d7ecBjggipc=\");\n\n_c = SeedCloud;\n\nfunction seedSelectors(props, seed) {\n  console.log(seed);\n\n  if (seed.quantity === 0) {\n    console.log(\"It's 0\");\n    return;\n  }\n\n  let colours = {};\n  seed.type === props.chosenSeed ? colours = selectedSeedTextColours : colours = seedTextColours;\n  return /*#__PURE__*/_jsxDEV(SeedText, {\n    position: [0, 2, 0],\n    selectSeed: props.selectSeed,\n    toggleSeeds: props.toggleSeeds,\n    seed: seed,\n    colours: colours\n  }, createId(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n}\n\nfunction SeedText(props) {\n  _s2();\n\n  const seed = props.seed;\n  const mesh = useRef();\n  const [selected, setSelected] = useState(false);\n\n  const handleClick = event => {\n    event.stopPropagation();\n    console.log(\"Clicked on SeedCloud!\");\n    console.log(seed.type);\n    props.selectSeed(seed.type);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: fontSize,\n        onClick: event => handleClick(event),\n        outlineWidth: fontSize,\n        outlineColor: props.colours.outline,\n        color: props.colours.type,\n        rotation: [0, 0, 0],\n        children: seed.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(SeedText, \"SnFYePOToJlSUM/A10+S8mKt7G0=\");\n\n_c2 = SeedText;\n\nfunction NoSeedText(props) {\n  _s3();\n\n  const mesh = useRef();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: /*#__PURE__*/_jsxDEV(Billboard, {\n      follow: true,\n      lockX: false,\n      lockY: false,\n      lockZ: false,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 0.25,\n        position: [1, 3, 1],\n        outlineWidth: 0.25,\n        outlineColor: props.colours.outline,\n        color: props.colours.type,\n        rotation: [0, 0, 0],\n        children: \"No seeds available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 11\n  }, this);\n}\n\n_s3(NoSeedText, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n\n_c3 = NoSeedText;\n\nfunction getAvailableSeeds(seeds) {\n  let availableSeeds = [];\n\n  for (let index = 0; index < seeds.length; index++) {\n    const seed = seeds[index];\n\n    if (seed.quantity === 0) {\n      continue;\n    } else {\n      availableSeeds.push(seed);\n    }\n  }\n\n  return availableSeeds;\n}\n\nexport default SeedCloud;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SeedCloud\");\n$RefreshReg$(_c2, \"SeedText\");\n$RefreshReg$(_c3, \"NoSeedText\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Clouds/SeedCloud.jsx"],"names":["Text","Billboard","React","useRef","useState","useEffect","createId","Cloud","seedTextColours","type","outline","selectedSeedTextColours","fontSize","fontZ","fontY","SeedCloud","props","mesh","seeds","getAvailableSeeds","option","setOption","on","setOn","seed","setSeed","console","log","length","closeDown","handleClick","prev","seedSelectors","quantity","colours","chosenSeed","selectSeed","toggleSeeds","SeedText","selected","setSelected","event","stopPropagation","NoSeedText","availableSeeds","index","push"],"mappings":"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","sourcesContent":["import { Text, Billboard } from '@react-three/drei'\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createId } from '../../functions'\nimport { Cloud } from '../'\n\n// Creates a button that 'clicks'\n\nconst seedTextColours = {type: \"#293241\", outline: \"#b1b5c8\"}\nconst selectedSeedTextColours = {type: \"#b1b5c8\", outline: \"#293241\"}\nconst fontSize = 0.15\nconst fontZ = 1\nconst fontY = 2\n\nfunction SeedCloud(props) {\n\n  const mesh = useRef()\n  const seeds = getAvailableSeeds(props.seeds)\n  const [option, setOption] = useState(0)\n  const [on, setOn] = useState(false)\n  const [seed, setSeed] = useState({})\n\n  // eventhandler for Cloud\n\n  useEffect(() => {\n    setOption(option)\n    console.log(option)\n    if (seeds.length === 0) { closeDown() }\n  })\n\n\n  const closeDown = () => {\n    setOn(false)\n    setOption(0)\n  }\n\n  const handleClick = () => {\n    setOn(true)\n    console.log(option)\n    setOption(prev => prev+1)\n    option < seeds.length ? setSeed(seeds[option]) : closeDown()\n  }\n\n\n\n\n  return (\n  <>\n  <mesh\n    {...props}\n    position={[0, 0.5, 0]}\n    ref={mesh}\n    scale={1}\n    >\n    <Cloud handleClick={handleClick} text={on ? seed.type : 'seeds'} />\n    {on ? seedSelectors(props, seed, option) : ''}\n  </mesh>\n\n  </>\n\n)\n}\n\nfunction seedSelectors(props, seed) {\n  console.log(seed)\n  if (seed.quantity === 0) {\n    console.log(\"It's 0\")\n    return\n  }\n  let colours = {}\n  seed.type === props.chosenSeed ? colours = selectedSeedTextColours : colours = seedTextColours\n  return <SeedText key={createId()} position={[0, 2, 0]} selectSeed={props.selectSeed} toggleSeeds={props.toggleSeeds} seed={seed} colours={colours}   />\n}\n\nfunction SeedText(props) {\n  const seed = props.seed\n  const mesh = useRef()\n  const [selected, setSelected] = useState(false)\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n    console.log(\"Clicked on SeedCloud!\")\n    console.log(seed.type)\n    props.selectSeed(seed.type)\n  }\n\n\n  return (\n      <mesh\n        {...props}\n        ref={mesh}\n        >\n        <Billboard\n        follow={true}\n        lockX={false}\n        lockY={false}\n        lockZ={false} >\n        < Text\n        fontSize={fontSize}\n        onClick={(event) => handleClick(event)}\n        outlineWidth={fontSize}\n        outlineColor={props.colours.outline}\n        color={props.colours.type}\n        rotation={[0, 0, 0]} >\n          {seed.quantity}\n        </ Text>\n        </ Billboard>\n      </mesh>\n      )\n    }\n\nfunction NoSeedText(props) {\n      const mesh = useRef()\n\n      return (\n          <mesh\n            {...props}\n            ref={mesh}\n            >\n            <Billboard\n            follow={true}\n            lockX={false}\n            lockY={false}\n            lockZ={false} >\n            < Text\n            fontSize={0.25}\n            position={[1, 3, 1]}\n            outlineWidth={0.25}\n            outlineColor={props.colours.outline}\n            color={props.colours.type}\n            rotation={[0, 0, 0]} >\n              No seeds available\n            </ Text>\n            </Billboard>\n          </mesh>\n        )\n  }\n\n function getAvailableSeeds(seeds) {\n   let availableSeeds = []\n   for (let index = 0; index < seeds.length; index++) {\n     const seed = seeds[index]\n     if (seed.quantity === 0) {\n       continue\n     } else {\n       availableSeeds.push(seed)\n     }\n   }\n   return availableSeeds\n }\n\nexport default SeedCloud\n"]},"metadata":{},"sourceType":"module"}