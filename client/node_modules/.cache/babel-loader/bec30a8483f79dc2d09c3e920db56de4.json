{"ast":null,"code":"import _objectSpread from\"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useRef}from\"react\";import{useFrame}from\"@react-three/fiber\";import{createId}from'../functions';import{Balloon}from'./';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var handleClick=function handleClick(props){if(!props.claimed){var seedChoice=Math.floor(Math.random()*props.seeds.length);props.updateSeeds(3,seedChoice);props.removeBalloon(props.index);}};function Balloons(props){// This reference will give us direct access to the mesh\nvar mesh=useRef();// Set up state for the hovered and active state\n// Rotate mesh every frame, this is outside of React without overhead\n// useFrame(() => (mesh.current.rotation.y += 0.002))\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:1,children:createBalloons(props)}))});}function createBalloons(props){var balloonCollection=[];var balloons=props.balloons,removeBalloon=props.removeBalloon,updateSeeds=props.updateSeeds,seeds=props.seeds;for(var index=0;index<balloons.length;index++){var balloon=balloons[index];balloonCollection.push(/*#__PURE__*/_jsx(Balloon,{claimed:balloon.claimed,updateSeeds:updateSeeds,removeBalloon:removeBalloon,seeds:seeds,position:balloon.position,index:index,handleClick:handleClick,colour:balloon.colour},createId()));}return balloonCollection;}export default Balloons;","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Balloons.jsx"],"names":["React","useRef","useFrame","createId","Balloon","handleClick","props","claimed","seedChoice","Math","floor","random","seeds","length","updateSeeds","removeBalloon","index","Balloons","mesh","createBalloons","balloonCollection","balloons","balloon","push","position","colour"],"mappings":"4OAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,OAASC,OAAT,KAAwB,IAAxB,C,gGAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,GAAI,CAACA,KAAK,CAACC,OAAX,CAAoB,CACpB,GAAMC,CAAAA,UAAU,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBL,KAAK,CAACM,KAAN,CAAYC,MAAvC,CAAnB,CACAP,KAAK,CAACQ,WAAN,CAAkB,CAAlB,CAAqBN,UAArB,EACAF,KAAK,CAACS,aAAN,CAAoBT,KAAK,CAACU,KAA1B,EACD,CACA,CAND,CAQA,QAASC,CAAAA,QAAT,CAAkBX,KAAlB,CAAyB,CACvB;AACA,GAAMY,CAAAA,IAAI,CAAGjB,MAAM,EAAnB,CACA;AACA;AACA;AAEA,mBACE,sCACA,2CACMK,KADN,MAEE,GAAG,CAAEY,IAFP,CAGE,KAAK,CAAE,CAHT,UAKGC,cAAc,CAACb,KAAD,CALjB,GADA,EADF,CAWD,CAED,QAASa,CAAAA,cAAT,CAAwBb,KAAxB,CAA+B,CAC7B,GAAMc,CAAAA,iBAAiB,CAAG,EAA1B,CACA,GAAOC,CAAAA,QAAP,CAAsDf,KAAtD,CAAOe,QAAP,CAAiBN,aAAjB,CAAsDT,KAAtD,CAAiBS,aAAjB,CAAgCD,WAAhC,CAAsDR,KAAtD,CAAgCQ,WAAhC,CAA6CF,KAA7C,CAAsDN,KAAtD,CAA6CM,KAA7C,CACA,IAAK,GAAII,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGK,QAAQ,CAACR,MAArC,CAA6CG,KAAK,EAAlD,CAAsD,CACtD,GAAMM,CAAAA,OAAO,CAAGD,QAAQ,CAACL,KAAD,CAAxB,CACAI,iBAAiB,CAACG,IAAlB,cACE,KAAC,OAAD,EAEA,OAAO,CAAED,OAAO,CAACf,OAFjB,CAGA,WAAW,CAAEO,WAHb,CAIA,aAAa,CAAEC,aAJf,CAKA,KAAK,CAAEH,KALP,CAMA,QAAQ,CAAEU,OAAO,CAACE,QANlB,CAOA,KAAK,CAAER,KAPP,CAQA,WAAW,CAAEX,WARb,CASA,MAAM,CAAEiB,OAAO,CAACG,MAThB,EACKtB,QAAQ,EADb,CADF,EAYC,CACD,MAAOiB,CAAAA,iBAAP,CACD,CAGD,cAAeH,CAAAA,QAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { createId } from '../functions'\nimport { Balloon } from './'\n\nconst handleClick = (props) => {\n  if (!props.claimed) {\n  const seedChoice = Math.floor(Math.random() * props.seeds.length)\n  props.updateSeeds(3, seedChoice)\n  props.removeBalloon(props.index)\n}\n}\n\nfunction Balloons(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  return (\n    <>\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      >\n      {createBalloons(props)}\n    </mesh>\n    </>\n  )\n}\n\nfunction createBalloons(props) {\n  const balloonCollection = []\n  const {balloons, removeBalloon, updateSeeds, seeds} = props\n  for (let index = 0; index < balloons.length; index++) {\n  const balloon = balloons[index]\n  balloonCollection.push(\n    <Balloon\n    key={createId()}\n    claimed={balloon.claimed}\n    updateSeeds={updateSeeds}\n    removeBalloon={removeBalloon}\n    seeds={seeds}\n    position={balloon.position}\n    index={index}\n    handleClick={handleClick}\n    colour={balloon.colour} />\n  )\n  }\n  return balloonCollection\n}\n\n\nexport default Balloons\n"]},"metadata":{},"sourceType":"module"}