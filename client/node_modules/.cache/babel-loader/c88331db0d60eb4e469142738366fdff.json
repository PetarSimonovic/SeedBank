{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Grass.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Grass(props) {\n  _s();\n\n  // This reference will give us direct access to the mesh\n  const mesh = useRef(); // Set up state for the hovered and active state\n\n  const [active, setActive] = useState(false); // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    scale: 1,\n    onClick: event => props.sowPlant(event),\n    onPointerOver: event => setHover(true),\n    onPointerOut: event => setHover(false),\n    children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n      args: [1.5, 1.5, 0.3, 7]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: '#5AAB61'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Grass, \"AED6suv9ULnck8KGn/nFXo7fnnM=\");\n\n_c = Grass;\nexport default Grass;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grass\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/Grass.jsx"],"names":["React","useRef","useState","Grass","props","mesh","active","setActive","event","sowPlant","setHover"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AACA,QAAMC,IAAI,GAAGJ,MAAM,EAAnB,CAFoB,CAGpB;;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC,CAJoB,CAKpB;AACA;;AAGA,sBACE,qBACME,KADN;AAEE,IAAA,GAAG,EAAEC,IAFP;AAGE,IAAA,KAAK,EAAE,CAHT;AAIE,IAAA,OAAO,EAAGG,KAAD,IAAWJ,KAAK,CAACK,QAAN,CAAeD,KAAf,CAJtB;AAKE,IAAA,aAAa,EAAGA,KAAD,IAAWE,QAAQ,CAAC,IAAD,CALpC;AAME,IAAA,YAAY,EAAGF,KAAD,IAAWE,QAAQ,CAAC,KAAD,CANnC;AAAA,4BAOE;AAAkB,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,CAAhB;AAAxB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAkB,MAAA,KAAK,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArBQP,K;;KAAAA,K;AAwBT,eAAeA,KAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\n\n\nfunction Grass(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  const [active, setActive] = useState(false)\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => (mesh.current.rotation.y += 0.002))\n\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={1}\n      onClick={(event) => props.sowPlant(event)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <cylinderGeometry args={[1.5, 1.5, 0.3, 7]}  />\n      <meshToonMaterial color={'#5AAB61'} />\n    </mesh>\n  )\n}\n\n\nexport default Grass\n"]},"metadata":{},"sourceType":"module"}