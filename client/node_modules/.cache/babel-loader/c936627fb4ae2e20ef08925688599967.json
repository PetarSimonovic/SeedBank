{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/SeedBox.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { RoundedBox, Text } from '@react-three/drei';\nimport React, { useRef, useState } from \"react\"; // Creates a button that 'clicks'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SeedBox(props) {\n  _s();\n\n  console.log(\"In SeedBox props are\");\n  console.log(props);\n  const mesh = useRef();\n  const [clickScale, setClickscale] = useState(1);\n  const [seedSelect, setSeedselect] = useState(false);\n\n  const handleClick = () => {\n    setClickscale(0.97);\n    setSeedselect(prev => !prev);\n    setTimeout(() => {\n      setClickscale(1);\n    }, 100);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      onClick: handleClick,\n      scale: clickScale,\n      children: /*#__PURE__*/_jsxDEV(RoundedBox, {\n        args: [0.2, 0.2, 0.2],\n        radius: 0.05,\n        smoothness: 4,\n        ...props,\n        children: /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n          attach: \"material\",\n          color: \"#212529\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this), seedSelectors(props, seedSelect)]\n  }, void 0, true);\n}\n\n_s(SeedBox, \"eQoTL85EpbU3qwaD69R4ka15qjI=\");\n\n_c = SeedBox;\n\nfunction seedSelectors(props, seedSelect) {\n  if (!seedSelect) {\n    return;\n  }\n\n  console.log(\"In seedSelectors props are\");\n  console.log(props);\n  let seedSelectors = [];\n\n  for (let index = 0; index < props.seeds.length; index++) {\n    let seed = props.seeds[index];\n    seedSelectors.push( /*#__PURE__*/_jsxDEV(SeedText, {\n      selectSeed: props.selectSeed,\n      seed: seed,\n      index: index,\n      colours: props.chosenSeed === seed.type ? {\n        text: \"#b1b5c8\",\n        outline: \"#293241\"\n      } : {\n        text: \"#293241\",\n        outline: \"#b1b5c8\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this));\n  }\n\n  return seedSelectors;\n}\n\nfunction SeedText(props) {\n  _s2();\n\n  const seed = props.seed;\n  const mesh = useRef();\n  const [selected, setSelected] = useState(false);\n\n  const handleClick = event => {\n    event.stopPropagation();\n    props.selectSeed(seed.type, props.index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: 0.05,\n      onClick: event => handleClick(event),\n      position: [0.5, props.index / 4, 0],\n      outlineWidth: 0.04,\n      outlineColor: props.colours.outline,\n      color: props.colours.text,\n      rotation: [0, 0, 0],\n      children: [\"seed: \", seed.type, \" \", '\\n', \"quantity: \", seed.quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(SeedText, \"SnFYePOToJlSUM/A10+S8mKt7G0=\");\n\n_c2 = SeedText;\nexport default SeedBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SeedBox\");\n$RefreshReg$(_c2, \"SeedText\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/components/SeedBox.jsx"],"names":["RoundedBox","Text","React","useRef","useState","SeedBox","props","console","log","mesh","clickScale","setClickscale","seedSelect","setSeedselect","handleClick","prev","setTimeout","seedSelectors","index","seeds","length","seed","push","selectSeed","chosenSeed","type","text","outline","SeedText","selected","setSelected","event","stopPropagation","colours","quantity"],"mappings":"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","sourcesContent":["import { RoundedBox, Text } from '@react-three/drei'\nimport React, { useRef, useState } from \"react\";\n\n\n// Creates a button that 'clicks'\n\nfunction SeedBox(props) {\n  console.log(\"In SeedBox props are\")\n  console.log(props)\n\n  const mesh = useRef()\n  const [clickScale, setClickscale] = useState(1)\n\n  const [seedSelect, setSeedselect] = useState(false)\n\n  const handleClick = () => {\n    setClickscale(0.97)\n    setSeedselect(prev => !prev)\n    setTimeout(() => {\n      setClickscale(1)\n    }, 100)\n  };\n\n\nreturn (\n  <>\n  <mesh\n  {...props}\n  ref={mesh}\n  onClick={handleClick}\n  scale={clickScale}\n  >\n  <RoundedBox args={[0.2, 0.2, 0.2]} radius={0.05} smoothness={4} {...props}>\n  <meshToonMaterial attach=\"material\" color=\"#212529\" />\n  </RoundedBox>\n  </mesh>\n  {seedSelectors(props, seedSelect)}\n  </>\n\n\n)\n}\n\nfunction seedSelectors(props, seedSelect) {\n  if (!seedSelect) {\n    return\n  }\n  console.log(\"In seedSelectors props are\")\n  console.log(props)\n  let seedSelectors = []\n  for (let index = 0; index < props.seeds.length; index++) {\n    let seed = props.seeds[index]\n    seedSelectors.push( <SeedText selectSeed={props.selectSeed} seed={seed} index={index} colours={props.chosenSeed === seed.type ? {text: \"#b1b5c8\", outline: \"#293241\"} : {text: \"#293241\", outline: \"#b1b5c8\"}}/>)\n  }\n  return seedSelectors\n}\n\nfunction SeedText(props) {\n  const seed = props.seed\n  const mesh = useRef()\n  const [selected, setSelected] = useState(false)\n\n  const handleClick = (event) => {\n    event.stopPropagation()\n    props.selectSeed(seed.type, props.index)\n\n  }\n\n  return (\n      <mesh\n        {...props}\n        ref={mesh}\n        >\n        < Text fontSize={0.05} onClick={(event) => handleClick(event)} position={[0.5, props.index/4, 0]} outlineWidth={0.04} outlineColor={props.colours.outline} color={props.colours.text} rotation={[0, 0, 0]} >\n          seed: {seed.type} {'\\n'}\n          quantity: {seed.quantity}\n        </ Text>\n      </mesh>\n      )\n    }\n    \n\nexport default SeedBox\n"]},"metadata":{},"sourceType":"module"}