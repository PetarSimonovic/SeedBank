{"ast":null,"code":"import api from '../api';\nimport { setDate } from './'; // strips out react components from the state garden array and saves plant props as an object that's easy to parse\n// Needs error handling!\n\nexport default async function saveGarden(id, plants) {\n  let garden = extractPlants(plants);\n  const world = JSON.stringify(newWorld);\n  const seeds = savedSeeds;\n  const worldChosen = chosen;\n  const date = setDate();\n  const lastLogin = date.stamp;\n  const payload = {\n    garden,\n    world,\n    worldChosen,\n    seeds,\n    lastLogin\n  };\n  console.log(\"Attempting to save garden\");\n  await api.updateGarden(id, payload).then(res => {\n    console.log('Garden updated successfully');\n  });\n}\n\nfunction extractPlants(plants) {\n  let extractedPlants = [];\n\n  for (let plant = 0; plant < plants.length; plant++) {\n    const key = plants[plant].key;\n    const parsedPlant = plants[plant].props;\n    const savedPlant = {\n      key: key,\n      growth: parsedPlant.growth,\n      date: parsedPlant.date,\n      position: parsedPlant.position,\n      type: parsedPlant.type\n    };\n    extractedPlants.push(savedPlant);\n  }\n\n  return extractedPlants;\n}","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/functions/SaveGarden.js"],"names":["api","setDate","saveGarden","id","plants","garden","extractPlants","world","JSON","stringify","newWorld","seeds","savedSeeds","worldChosen","chosen","date","lastLogin","stamp","payload","console","log","updateGarden","then","res","extractedPlants","plant","length","key","parsedPlant","props","savedPlant","growth","position","type","push"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,IAAxB,C,CAEA;AACA;;AAGA,eAAe,eAAeC,UAAf,CAA0BC,EAA1B,EAA8BC,MAA9B,EAAqC;AAClD,MAAIC,MAAM,GAAGC,aAAa,CAACF,MAAD,CAA1B;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAd;AACA,QAAMC,KAAK,GAAGC,UAAd;AACA,QAAMC,WAAW,GAAGC,MAApB;AACA,QAAMC,IAAI,GAAGd,OAAO,EAApB;AACA,QAAMe,SAAS,GAAID,IAAI,CAACE,KAAxB;AACA,QAAMC,OAAO,GAAG;AAACb,IAAAA,MAAD;AAASE,IAAAA,KAAT;AAAgBM,IAAAA,WAAhB;AAA6BF,IAAAA,KAA7B;AAAoCK,IAAAA;AAApC,GAAhB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,QAAMpB,GAAG,CAACqB,YAAJ,CAAiBlB,EAAjB,EAAqBe,OAArB,EAA8BI,IAA9B,CAAmCC,GAAG,IAAI;AAC1CJ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,GAFG,CAAN;AAGD;;AAED,SAASd,aAAT,CAAuBF,MAAvB,EAA+B;AAC7B,MAAIoB,eAAe,GAAG,EAAtB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGrB,MAAM,CAACsB,MAAnC,EAA2CD,KAAK,EAAhD,EAAqD;AACnD,UAAME,GAAG,GAAGvB,MAAM,CAACqB,KAAD,CAAN,CAAcE,GAA1B;AACA,UAAMC,WAAW,GAAGxB,MAAM,CAACqB,KAAD,CAAN,CAAcI,KAAlC;AACA,UAAMC,UAAU,GAAG;AAACH,MAAAA,GAAG,EAAEA,GAAN;AAAWI,MAAAA,MAAM,EAAEH,WAAW,CAACG,MAA/B;AAAuChB,MAAAA,IAAI,EAAEa,WAAW,CAACb,IAAzD;AAA+DiB,MAAAA,QAAQ,EAAEJ,WAAW,CAACI,QAArF;AAA+FC,MAAAA,IAAI,EAAEL,WAAW,CAACK;AAAjH,KAAnB;AACAT,IAAAA,eAAe,CAACU,IAAhB,CAAqBJ,UAArB;AACD;;AACD,SAAON,eAAP;AACD","sourcesContent":["import api from '../api';\nimport { setDate } from './'\n\n// strips out react components from the state garden array and saves plant props as an object that's easy to parse\n// Needs error handling!\n\n\nexport default async function saveGarden(id, plants){\n  let garden = extractPlants(plants)\n  const world = JSON.stringify(newWorld)\n  const seeds = savedSeeds\n  const worldChosen = chosen\n  const date = setDate()\n  const lastLogin  = date.stamp\n  const payload = {garden, world, worldChosen, seeds, lastLogin}\n  console.log(\"Attempting to save garden\")\n  await api.updateGarden(id, payload).then(res => {\n        console.log('Garden updated successfully')\n    })\n}\n\nfunction extractPlants(plants) {\n  let extractedPlants = []\n  for (let plant = 0; plant < plants.length; plant ++) {\n    const key = plants[plant].key\n    const parsedPlant = plants[plant].props\n    const savedPlant = {key: key, growth: parsedPlant.growth, date: parsedPlant.date, position: parsedPlant.position, type: parsedPlant.type}\n    extractedPlants.push(savedPlant)\n  }\n  return extractedPlants\n}\n"]},"metadata":{},"sourceType":"module"}