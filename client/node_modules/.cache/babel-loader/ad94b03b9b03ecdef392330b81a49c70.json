{"ast":null,"code":"var _jsxFileName = \"/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx\",\n    _s = $RefreshSig$();\n\nimport '../style/App.css';\nimport api from '../api';\nimport React, { useRef, useState, useMemo, useEffect, Suspense } from \"react\";\nimport { Canvas, useFrame, extend } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { Grass, Plant, Camera, Sun, SkyBox, Seeds, Garden, Worlds } from '../components';\nimport { setDate, parseGarden, saveGarden, createId, createPlant } from '../functions';\nimport styled from 'styled-components';\nimport { EffectComposer, DepthOfField, Bloom, Noise, Vignette } from 'react-postprocessing'; // Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SeedBank(props) {\n  _s();\n\n  const [plants, setPlants] = useState(props.garden); // contains an array of plant components\n\n  const [selectedSeed, setSelectedseed] = useState(null); // is true if a seed has been selected\n\n  const [seeds, setSeeds] = useState(props.seeds); // contains an array of the player's available seeds\n\n  const [seedIndex, setSeedindex] = useState(null); // contains the index within seeds of the selectedSeed\n\n  const sowPlant = event => {\n    if (selectedSeed) {\n      const newPlant = createPlant(event, seed);\n      setSeed(null);\n      updateSeeds(-1);\n      setPlants(prev => {\n        return [newPlant, ...prev];\n      });\n    }\n  };\n\n  const selectSeed = (selectedSeed, index) => {\n    const seed = seeds[index];\n\n    if (seeds[index].quantity > 0) {\n      setselectedSeed(selectedSeed);\n      setSeedindex(index);\n    }\n  };\n\n  const updateSeeds = increment => {\n    let updatedSeed = seeds[seedIndex];\n    updatedSeed.quantity += increment;\n    setSeeds(seeds => ({ ...seeds,\n      [seedIndex]: updatedSeed\n    }));\n    setSeedindex(null);\n  };\n\n  useEffect(() => {\n    //\n    console.log(\"Calling saveGarden\");\n    saveGarden(props.id, plants, props.world, props.worldChosen, props.seeds);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Garden, {\n      plants: plants,\n      world: props.world,\n      seeds: props.seeds,\n      selectSeed: props.selectSeed,\n      sowPlant: sowPlant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), props.worldChosen ? /*#__PURE__*/_jsxDEV(Seeds, {\n      seeds: props.seeds,\n      className: \"App-header\",\n      selectSeed: selectSeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(Worlds, {\n      className: \"App-header\",\n      newWorld: props.newWorld,\n      saveWorld: props.saveWorld\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 105\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SeedBank, \"EpF38xkptn6IUG3KHP2KY2qdHIM=\");\n\n_c = SeedBank;\nexport default SeedBank;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeedBank\");","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/pages/SeedBank.jsx"],"names":["api","React","useRef","useState","useMemo","useEffect","Suspense","Canvas","useFrame","extend","THREE","Grass","Plant","Camera","Sun","SkyBox","Seeds","Garden","Worlds","setDate","parseGarden","saveGarden","createId","createPlant","styled","EffectComposer","DepthOfField","Bloom","Noise","Vignette","SeedBank","props","plants","setPlants","garden","selectedSeed","setSelectedseed","seeds","setSeeds","seedIndex","setSeedindex","sowPlant","event","newPlant","seed","setSeed","updateSeeds","prev","selectSeed","index","quantity","setselectedSeed","increment","updatedSeed","console","log","id","world","worldChosen","newWorld","saveWorld"],"mappings":"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","sourcesContent":["import '../style/App.css';\nimport api from '../api';\nimport React, { useRef, useState, useMemo, useEffect, Suspense } from \"react\";\nimport { Canvas, useFrame, extend } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { Grass, Plant, Camera, Sun, SkyBox, Seeds, Garden, Worlds } from '../components';\nimport { setDate, parseGarden, saveGarden, createId, createPlant } from '../functions'\nimport styled from 'styled-components';\nimport { EffectComposer, DepthOfField, Bloom, Noise, Vignette } from 'react-postprocessing'\n\n\n\n// Main page.\n// Displays the Garden and the Seed panel, handles interactions between them and updates the user's garden/seedbank\n\nfunction SeedBank(props) {\n\n\n  const [plants, setPlants] = useState(props.garden) // contains an array of plant components\n  const [selectedSeed, setSelectedseed] = useState(null) // is true if a seed has been selected\n  const [seeds, setSeeds] = useState(props.seeds) // contains an array of the player's available seeds\n  const [seedIndex, setSeedindex] = useState(null) // contains the index within seeds of the selectedSeed\n\n  const sowPlant = ( event ) => {\n    if (selectedSeed) {\n      const newPlant = createPlant(event, seed)\n      setSeed(null)\n      updateSeeds(-1)\n      setPlants( (prev) => {\n        return [newPlant, ...prev]\n      })\n    }\n  }\n\n  const selectSeed = (selectedSeed, index) => {\n    const seed = seeds[index]\n    if (seeds[index].quantity > 0) {\n    setselectedSeed(selectedSeed)\n    setSeedindex(index)\n    }\n  }\n\n  const updateSeeds = (increment) => {\n    let updatedSeed = seeds[seedIndex]\n    updatedSeed.quantity += increment\n    setSeeds(seeds =>({\n      ...seeds,\n      [seedIndex]: updatedSeed\n    }))\n    setSeedindex(null)\n  }\n\n\n\n\n  useEffect(() => {\n    //\n    console.log(\"Calling saveGarden\")\n    saveGarden(props.id, plants, props.world, props.worldChosen, props.seeds)\n  });\n\n\n  return (\n  <div className=\"App\">\n    <Garden plants={plants} world={props.world} seeds={props.seeds} selectSeed={props.selectSeed} sowPlant={sowPlant} />\n    {props.worldChosen ? <Seeds seeds={props.seeds} className=\"App-header\" selectSeed={selectSeed} /> : <Worlds className=\"App-header\" newWorld={props.newWorld} saveWorld={ props.saveWorld } />}\n  </div>\n  );\n}\n\nexport default SeedBank;\n"]},"metadata":{},"sourceType":"module"}