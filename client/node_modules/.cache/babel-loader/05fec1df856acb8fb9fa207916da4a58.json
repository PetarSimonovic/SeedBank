{"ast":null,"code":"import { sample } from '../functions';\nconst worldRadiusTop = 1.5;\nconst worldRadiusBottom = 1;\nconst worldScaler = 1.1;\nconst discHeight = 0.3;\nconst rockHeight = 3;\nexport const world = {\n  grass: {\n    geometry: [worldRadiusTop, worldRadiusBottom, discHeight, 25],\n    colour: '#5AAB61'\n  },\n  // cylinder: [radiusTop, radiusBottom, height, radialSegments]\n  earth: {\n    geometry: [worldRadiusTop * worldScaler, discHeight * rockHeight, 0.68, 9],\n    colour: '#8a817c'\n  },\n  // cylinder: [radiusTop, radiusBottom, height, radialSegments]\n  stalactite1: generateStalactite(),\n  stalactite2: generateStalactite(0.2),\n  stalactite3: generateStalactite(0.25),\n  stalactite4: generateStalactite(0.3),\n  stalactite5: generateStalactite(0.35),\n  stalactite6: generateStalactite(0.4),\n  stalactite7: generateStalactite(0.45),\n  stalactite8: generateStalactite(1)\n};\n\nfunction terrainRandomiser(range) {\n  return Math.random() * (range.max - range.min) + range.min;\n}\n\nfunction earthColour() {\n  const colours = ['#6C6460', '#8a817c', '#6c757d'];\n  return sample(colours);\n}\n\nfunction generateStalactite(offset) {\n  return {\n    geometry: stalactiteGeometry(offset),\n    position: stalactitePosition(offset),\n    colour: earthColour()\n  };\n}\n\nfunction stalactiteGeometry(offset) {\n  const stalactiteMax = {\n    max: 1.6 - offset,\n    min: 1.3 - offset\n  };\n  const stalactiteMin = {\n    max: 1.6 - offset,\n    min: 0.3 - offset\n  };\n  const stalactiteDepth = {\n    max: 1.5,\n    min: 1\n  };\n  const stalactiteSegments = {\n    max: 12,\n    min: 4\n  };\n  return [terrainRandomiser(stalactiteMax), terrainRandomiser(stalactiteMin), terrainRandomiser(stalactiteDepth), terrainRandomiser(stalactiteSegments)];\n}\n\nfunction stalactitePosition(offset) {\n  const stalactiteY = {\n    max: 0.2,\n    min: 2.3 - offset\n  };\n  const stalactiteXZ = {\n    max: 0.5,\n    min: -0.5\n  };\n  return [terrainRandomiser(stalactiteXZ), -terrainRandomiser(stalactiteY), terrainRandomiser(stalactiteXZ)];\n}\n/*\n\nOriginal stalactite settings:\n\nEarth disc:\n<cylinderGeometry args={[1.65, 1, 0.68, 9]}  />\n<meshToonMaterial color={'#8a817c'} />\n\nfunction createStalactites() {\n  return [\n    <Stalactite args={[1.6, 0.8, 1, 8]} position={[0.1, -0.28, 0, ]} colour={'#6c757d'}/>,\n    <Stalactite args={[1.3, 0.7, 1, 7]} position={[0.12, -0.5, 0.1]} colour={'#8a817c'} />,\n    <Stalactite args={[1.4, 0.55, 1.3, 4]} position={[-0, -0.7, 0.05]} colour={'#6c757d'} />,\n    <Stalactite args={[0.8, 0.3, 2, 8]} position={[0, -0.9, -0.2]} colour={'#6c757d'} />,\n    <Stalactite args={[0.4, 0.01, 2, 4]} position={[0, -1.9, -0.5]} colour={'#6c757d'} />,\n    <Stalactite args={[0.4, 0.03, 2, 12]} position={[0, -0.9, 1.0]} colour={'#6c757d'} />,\n    <Stalactite args={[0.8, 0.2, 1, 8]} position={[-0, -1.3, .40]} colour={'#8a817c'} />,\n    <Stalactite args={[0.7, 0.1, 1, 9]} position={[-0, -1.9, 0.30]} colour={'#6c757d'}/>,\n    <Stalactite args={[0.4, 0.01, 3, 8]} position={[0, -2.3, 0]} colour={'#8a817c'} />,\n\n\n\n  ]\n}\n*/","map":{"version":3,"sources":["/Users/petarsimonovic/Library/Mobile Documents/com~apple~CloudDocs/Pete/Coding/Projects/SeedBankServer/seedbank/client/src/gameObjects/WorldDimensions.js"],"names":["sample","worldRadiusTop","worldRadiusBottom","worldScaler","discHeight","rockHeight","world","grass","geometry","colour","earth","stalactite1","generateStalactite","stalactite2","stalactite3","stalactite4","stalactite5","stalactite6","stalactite7","stalactite8","terrainRandomiser","range","Math","random","max","min","earthColour","colours","offset","stalactiteGeometry","position","stalactitePosition","stalactiteMax","stalactiteMin","stalactiteDepth","stalactiteSegments","stalactiteY","stalactiteXZ"],"mappings":"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","sourcesContent":["import {sample} from '../functions'\n\n\nconst worldRadiusTop = 1.5\nconst worldRadiusBottom = 1\nconst worldScaler = 1.1\nconst discHeight = 0.3\nconst rockHeight = 3\n\nexport const world = {\n  grass: { geometry: [worldRadiusTop, worldRadiusBottom, discHeight, 25], colour: '#5AAB61' }, // cylinder: [radiusTop, radiusBottom, height, radialSegments]\n  earth: { geometry: [worldRadiusTop * worldScaler, discHeight * rockHeight, 0.68, 9], colour: '#8a817c' }, // cylinder: [radiusTop, radiusBottom, height, radialSegments]\n  stalactite1: generateStalactite(),\n  stalactite2: generateStalactite(0.2),\n  stalactite3: generateStalactite(0.25),\n  stalactite4: generateStalactite(0.3),\n  stalactite5: generateStalactite(0.35),\n  stalactite6: generateStalactite(0.4),\n  stalactite7: generateStalactite(0.45),\n  stalactite8: generateStalactite(1),\n\n}\n\n\nfunction terrainRandomiser(range) {\n  return Math.random() * (range.max - range.min) + range.min\n}\n\nfunction earthColour() {\n  const colours = [\n    '#6C6460',\n    '#8a817c',\n    '#6c757d',\n  ]\n\n    return sample(colours)\n}\n\nfunction generateStalactite(offset) {\n  return { geometry: stalactiteGeometry(offset), position: stalactitePosition(offset), colour: earthColour() }\n}\n\nfunction stalactiteGeometry(offset) {\n\n  const stalactiteMax = {max: 1.6 - offset, min: 1.3 - offset}\n  const stalactiteMin = {max: 1.6 - offset, min: 0.3 - offset}\n  const stalactiteDepth = {max: 1.5, min: 1}\n  const stalactiteSegments = {max: 12, min: 4}\n\n  return [\n    terrainRandomiser(stalactiteMax),\n    terrainRandomiser(stalactiteMin),\n    terrainRandomiser(stalactiteDepth),\n    terrainRandomiser(stalactiteSegments)\n  ]\n\n}\n\nfunction stalactitePosition(offset) {\n\n  const stalactiteY = {max: 0.2, min: 2.3 - offset }\n  const stalactiteXZ = {max: 0.5, min: -0.5 }\n  return [\n    terrainRandomiser(stalactiteXZ),\n    -terrainRandomiser(stalactiteY),\n    terrainRandomiser(stalactiteXZ)\n  ]\n\n}\n\n\n\n/*\n\nOriginal stalactite settings:\n\nEarth disc:\n<cylinderGeometry args={[1.65, 1, 0.68, 9]}  />\n<meshToonMaterial color={'#8a817c'} />\n\nfunction createStalactites() {\n  return [\n    <Stalactite args={[1.6, 0.8, 1, 8]} position={[0.1, -0.28, 0, ]} colour={'#6c757d'}/>,\n    <Stalactite args={[1.3, 0.7, 1, 7]} position={[0.12, -0.5, 0.1]} colour={'#8a817c'} />,\n    <Stalactite args={[1.4, 0.55, 1.3, 4]} position={[-0, -0.7, 0.05]} colour={'#6c757d'} />,\n    <Stalactite args={[0.8, 0.3, 2, 8]} position={[0, -0.9, -0.2]} colour={'#6c757d'} />,\n    <Stalactite args={[0.4, 0.01, 2, 4]} position={[0, -1.9, -0.5]} colour={'#6c757d'} />,\n    <Stalactite args={[0.4, 0.03, 2, 12]} position={[0, -0.9, 1.0]} colour={'#6c757d'} />,\n    <Stalactite args={[0.8, 0.2, 1, 8]} position={[-0, -1.3, .40]} colour={'#8a817c'} />,\n    <Stalactite args={[0.7, 0.1, 1, 9]} position={[-0, -1.9, 0.30]} colour={'#6c757d'}/>,\n    <Stalactite args={[0.4, 0.01, 3, 8]} position={[0, -2.3, 0]} colour={'#8a817c'} />,\n\n\n\n  ]\n}\n*/\n"]},"metadata":{},"sourceType":"module"}